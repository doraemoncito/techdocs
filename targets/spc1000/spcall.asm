
; IOCS

00000000:	JP FB00h	; MAIN (set to 004Ah at boot, after having copied the BASIC in RAM)
00000003:	JP 06A4h	; INPUTF -  LINE INPUT,  DE=addr
00000006:	JP 0843h	; CR1
00000009:	JP 0823h	; CR2
0000000C:	JP 0862h	; OUTSP: print ' '   (aka SPPRT)
0000000F:	JP 0802h	; TABPRT
00000012:	JP 0864h	; OUTCH (PRINT char in A, aka ACCPRT)
00000015:	JP 07F3h	; MSX (aka DEPRT), print message in DE
00000018:	JP 07F3h	; MSX (aka DEPRT), print message in DE
0000001B:	JP 0C62h	; ASCGET
0000001E:	JP 0C5Bh	; BRKEY
00000021:	JP 0080h	; FSAVE
00000024:	JP 00B6h	; MSAVE
00000027:	JP 0114h	; FLOAD
0000002A:	JP 0134h	; MLOAD
0000002D:	JP 01B9h	; MVRFY
00000030:	JP 0ECDh	; MUSIC
00000033:	JP 0061h	; NOPRET
TICONT:
00000036:	LD DE,C300h
00000039:	LD (HL),H
0000003A:	NOP
0000003B:	JP 0061h	; NOPRET
0000003E:	JP 06CAh	; BELL
00000041:	JP 1095h	; XTEMPO
00000044:	JP 1099h	; SOUNDS
00000047:	JP 1099h	; SOUNDS

MAIN:
0000004A:	LD SP,0000h
0000004D:	IM 1
0000004F:	EI
00000050:	CALL 0056h	; INITSB:
00000053:	JP 1418h		; boot

; INITSB:
00000056:	LD A,00h
00000058:	CALL 0062h
0000005B:	CALL 006Bh
0000005E:	CALL 0AD5h		; CLR:

; NOPRET
00000061:	RET

00000062:	LD BC,2000h
00000065:	OUT (C),A
00000067:	LD (11EAh),A
0000006A:	RET

0000006B:	LD BC,6000h
0000006E:	OUT (C),A
00000070:	LD (11E9h),A
00000073:	RET

00000074:	PUSH HL
00000075:	LD HL,(0036h)
00000078:	INC HL
00000079:	LD (0036h),HL
0000007C:	POP HL
0000007D:	EI
0000007E:	RETI

; FSAVE
00000080:	DI
00000081:	PUSH DE
00000082:	PUSH BC
00000083:	PUSH HL
00000084:	LD D,D7h
00000086:	LD E,CCh
00000088:	LD HL,1396h		; FCB (File Control Block)
0000008B:	LD BC,0080h
0000008E:	CALL 039Eh
00000091:	CALL 02E0h
00000094:	JP C,019Dh
00000097:	LD A,E
00000098:	CP CCh
0000009A:	JR NZ,+11h
0000009C:	CALL 0823h
0000009F:	PUSH DE
000000A0:	LD DE,0375h		; "WRITING "
000000A3:	CALL 07F3h		; MSX (aka DEPRT), print message in DE
000000A6:	LD DE,1397h		; FILNAM (file name in FCB)
000000A9:	CALL 07F3h		; MSX (aka DEPRT), print message in DE
000000AC:	POP DE
000000AD:	CALL 0422h
000000B0:	CALL 00CEh
000000B3:	JP 019Dh

; MSAVE
000000B6:	DI
000000B7:	PUSH DE
000000B8:	PUSH BC
000000B9:	PUSH HL
000000BA:	LD D,D7h
000000BC:	LD E,53h
000000BE:	LD HL,(13A8h)	; MTBYTE (size in File Control Block)
000000C1:	PUSH HL
000000C2:	POP BC
000000C3:	LD HL,(13AAh)	; MTADRS (data position in File Control Block)
000000C6:	LD A,B
000000C7:	OR C
000000C8:	JP Z,0110h
000000CB:	JP 008Eh
000000CE:	PUSH DE
000000CF:	PUSH BC
000000D0:	PUSH HL
000000D1:	LD D,02h
000000D3:	LD A,(HL)
000000D4:	CALL 040Fh
000000D7:	LD A,80h
000000D9:	INA (00h)
000000DB:	AND 12h
000000DD:	JR NZ,+04h
000000DF:	SCF
000000E0:	JP 0110h
000000E3:	INC HL
000000E4:	DEC BC
000000E5:	LD A,B
000000E6:	OR C
000000E7:	JP NZ,00D3h
000000EA:	LD HL,(11E3h)
000000ED:	LD A,H
000000EE:	CALL 040Fh
000000F1:	LD A,L
000000F2:	CALL 040Fh
000000F5:	CALL 03EDh
000000F8:	DEC D
000000F9:	JP NZ,0100h
000000FC:	OR A
000000FD:	JP 0110h

00000100:	LD B,00h
00000102:	CALL 03CBh
00000105:	DEC B
00000106:	JP NZ,0102h
00000109:	POP HL
0000010A:	POP BC
0000010B:	PUSH BC
0000010C:	PUSH HL
0000010D:	JP 00D3h

00000110:	POP HL
00000111:	POP BC
00000112:	POP DE
00000113:	RET

; FLOAD
00000114:	DI
00000115:	PUSH DE
00000116:	PUSH BC
00000117:	PUSH HL
00000118:	LD D,D2h
0000011A:	LD E,CCh
0000011C:	LD BC,0080h
0000011F:	LD HL,1396h		; FCB (File Control Block)
00000122:	CALL 02E0h
00000125:	JP C,01B3h
00000128:	CALL 0291h
0000012B:	JP C,01B3h
0000012E:	CALL 014Ch
00000131:	JP 019Dh

; MLOAD
00000134:	DI
00000135:	PUSH DE
00000136:	PUSH BC
00000137:	PUSH HL
00000138:	LD D,D2h
0000013A:	LD E,53h
0000013C:	LD HL,(13A8h)	; MTBYTE (size in File Control Block)
0000013F:	PUSH HL
00000140:	POP BC
00000141:	LD HL,(13AAh)	; MTADRS (data position in File Control Block)
00000144:	LD A,B
00000145:	OR C
00000146:	JP Z,019Dh
00000149:	JP 0122h
0000014C:	PUSH DE
0000014D:	PUSH BC
0000014E:	PUSH HL
0000014F:	LD H,02h
00000151:	LD BC,4000h
00000154:	LD A,0Eh
00000156:	OUT (C),A
00000158:	CALL 0230h
0000015B:	JP C,01B3h
0000015E:	CALL 03C4h
00000161:	LD A,40h
00000163:	INA (01h)
00000165:	AND 80h
00000167:	JP Z,0158h
0000016A:	LD D,H
0000016B:	LD HL,0000h
0000016E:	LD (11E3h),HL
00000171:	POP HL
00000172:	POP BC
00000173:	PUSH BC
00000174:	PUSH HL
00000175:	CALL 0259h
00000178:	JP C,01B3h
0000017B:	LD (HL),A
0000017C:	INC HL
0000017D:	DEC BC
0000017E:	LD A,B
0000017F:	OR C
00000180:	JP NZ,0175h
00000183:	LD HL,(11E3h)
00000186:	CALL 0259h
00000189:	JP C,01B3h
0000018C:	LD E,A
0000018D:	CALL 0259h
00000190:	JP C,01B3h
00000193:	CP L
00000194:	JP NZ,01A5h
00000197:	LD A,E
00000198:	CP H
00000199:	JP NZ,01A5h
0000019C:	XOR A
0000019D:	POP HL
0000019E:	POP BC
0000019F:	POP DE
000001A0:	CALL 0344h
000001A3:	EI
000001A4:	RET
000001A5:	DEC D
000001A6:	JP Z,01ADh
000001A9:	LD H,D
000001AA:	JP 0151h
000001AD:	LD A,01h
000001AF:	SCF
000001B0:	JP 019Dh
000001B3:	LD A,02h
000001B5:	SCF
000001B6:	JP 019Dh

; MVRFY
000001B9:	DI
000001BA:	PUSH DE
000001BB:	PUSH BC
000001BC:	PUSH HL
000001BD:	LD HL,(13A8h)	; MTBYTE (size in File Control Block)
000001C0:	PUSH HL
000001C1:	POP BC
000001C2:	LD HL,(13AAh)	; MTADRS (data position in File Control Block)
000001C5:	LD D,D2h
000001C7:	LD E,53h
000001C9:	LD A,B
000001CA:	OR C
000001CB:	JP Z,019Dh
000001CE:	CALL 039Eh
000001D1:	CALL 02E0h
000001D4:	JP C,01B3h
000001D7:	CALL 0291h
000001DA:	JP C,01B3h
000001DD:	CALL 01E3h
000001E0:	JP 019Dh
000001E3:	PUSH DE
000001E4:	PUSH BC
000001E5:	PUSH HL
000001E6:	LD H,02h
000001E8:	LD BC,4000h
000001EB:	LD A,0Eh
000001ED:	OUT (C),A
000001EF:	CALL 0230h
000001F2:	JP C,01B3h
000001F5:	CALL 03C4h
000001F8:	LD A,40h
000001FA:	INA (01h)
000001FC:	AND 80h
000001FE:	JP Z,01EFh
00000201:	LD D,H
00000202:	POP HL
00000203:	POP BC
00000204:	PUSH BC
00000205:	PUSH HL
00000206:	CALL 0259h
00000209:	JP C,01B3h
0000020C:	CP (HL)
0000020D:	JP NZ,01ADh
00000210:	INC HL
00000211:	DEC BC
00000212:	LD A,B
00000213:	OR C
00000214:	JP NZ,0206h
00000217:	LD HL,(11E5h)
0000021A:	CALL 0259h
0000021D:	CP H
0000021E:	JP NZ,01ADh
00000221:	CALL 0259h
00000224:	CP L
00000225:	JP NZ,01ADh
00000228:	DEC D
00000229:	JP Z,019Ch
0000022C:	LD H,D
0000022D:	JP 01E8h

00000230:	LD A,80h
00000232:	INA (00h)
00000234:	AND 12h
00000236:	JP NZ,023Bh
00000239:	SCF
0000023A:	RET

0000023B:	LD A,40h
0000023D:	INA (01h)
0000023F:	AND 80h
00000241:	JP NZ,0230h
00000244:	LD A,80h
00000246:	INA (00h)
00000248:	AND 12h
0000024A:	JP NZ,024Fh
0000024D:	SCF
0000024E:	RET

0000024F:	LD A,40h
00000251:	INA (01h)
00000253:	AND 80h
00000255:	JP Z,0244h
00000258:	RET

00000259:	PUSH BC
0000025A:	PUSH DE
0000025B:	PUSH HL
0000025C:	LD HL,0800h
0000025F:	LD BC,4000h
00000262:	LD A,0Eh
00000264:	OUT (C),A
00000266:	CALL 0230h
00000269:	JP C,028Dh
0000026C:	CALL 03C4h
0000026F:	LD A,40h
00000271:	INA (01h)
00000273:	AND 80h
00000275:	JP Z,0282h
00000278:	PUSH HL
00000279:	LD HL,(11E3h)
0000027C:	INC HL
0000027D:	LD (11E3h),HL
00000280:	POP HL
00000281:	SCF
00000282:	LD A,L
00000283:	RLA
00000284:	LD L,A
00000285:	DEC H
00000286:	JP NZ,0266h
00000289:	CALL 0230h
0000028C:	LD A,L
0000028D:	POP HL
0000028E:	POP DE
0000028F:	POP BC
00000290:	RET

00000291:	PUSH BC
00000292:	PUSH DE
00000293:	PUSH HL
00000294:	LD HL,2828h		; 'INKEY$'
00000297:	LD A,E
00000298:	CP CCh
0000029A:	JP Z,02A0h
0000029D:	LD HL,1414h
000002A0:	LD (11E7h),HL
000002A3:	LD BC,4000h
000002A6:	LD A,0Eh
000002A8:	OUT (C),A
000002AA:	LD HL,(11E7h)
000002AD:	CALL 0230h
000002B0:	JP C,02DCh
000002B3:	CALL 03C4h
000002B6:	LD A,40h
000002B8:	INA (01h)
000002BA:	AND 80h
000002BC:	JP Z,02AAh
000002BF:	DEC H
000002C0:	JP NZ,02ADh
000002C3:	CALL 0230h
000002C6:	JP C,02DCh
000002C9:	CALL 03C4h
000002CC:	LD A,40h
000002CE:	INA (01h)
000002D0:	AND 80h
000002D2:	JP NZ,02AAh
000002D5:	DEC L
000002D6:	JP NZ,02C3h
000002D9:	CALL 0230h
000002DC:	POP HL
000002DD:	POP DE
000002DE:	POP BC
000002DF:	RET
000002E0:	PUSH BC
000002E1:	PUSH DE
000002E2:	PUSH HL
000002E3:	LD BC,4000h
000002E6:	LD A,0Eh
000002E8:	OUT (C),A
000002EA:	LD L,0Ah
000002EC:	LD BC,6000h
000002EF:	LD A,40h
000002F1:	INA (01h)
000002F3:	AND 40h
000002F5:	JP NZ,02FDh
000002F8:	XOR A
000002F9:	POP HL
000002FA:	POP DE
000002FB:	POP BC
000002FC:	RET

000002FD:	LD A,(11E9h)
00000300:	RES 1,A
00000302:	OUT (C),A
00000304:	SET 1,A
00000306:	OUT (C),A
00000308:	LD (11E9h),A
0000030B:	DEC L
0000030C:	JP NZ,02EFh
0000030F:	CALL 0823h
00000312:	LD A,D
00000313:	CP D7h
00000315:	JR Z,+08h
00000317:	LD DE,037Eh		; "PUSH PLAY BUTTON"
0000031A:	CALL 07F3h		; MSX (aka DEPRT), print message in DE
0000031D:	JR +0Ch
0000031F:	LD DE,038Fh		; "PUSH RECORD & "
00000322:	CALL 07F3h		; MSX (aka DEPRT), print message in DE
00000325:	LD DE,0383h		; "PLAY BUTTON"
00000328:	CALL 07F3h		; MSX (aka DEPRT), print message in DE
0000032B:	CALL 0823h
0000032E:	LD A,40h
00000330:	INA (01h)
00000332:	AND 40h
00000334:	JP Z,02F8h
00000337:	LD A,80h
00000339:	INA (00h)
0000033B:	AND 12h
0000033D:	JP NZ,032Bh
00000340:	SCF
00000341:	JP 02F9h

00000344:	PUSH AF
00000345:	PUSH BC
00000346:	PUSH DE
00000347:	LD D,0Ah
00000349:	LD BC,4000h
0000034C:	LD A,0Eh
0000034E:	OUT (C),A
00000350:	LD BC,6000h
00000353:	LD A,40h
00000355:	INA (01h)
00000357:	AND 40h
00000359:	JR Z,+04h
0000035B:	POP DE
0000035C:	POP BC
0000035D:	POP AF
0000035E:	RET
0000035F:	LD A,(11E9h)
00000362:	RES 1,A
00000364:	OUT (C),A
00000366:	SET 1,A
00000368:	OUT (C),A
0000036A:	LD (11E9h),A
0000036D:	DEC D
0000036E:	JP NZ,0353h
00000371:	POP DE
00000372:	POP BC
00000373:	POP AF
00000374:	RET

00000375:	LD D,A
00000376:	LD D,D
00000377:	LD C,C
00000378:	LD D,H
00000379:	LD C,C
0000037A:	LD C,(HL)
0000037B:	LD B,A
0000037C:	JR NZ,+00h
0000037E:	LD D,B
0000037F:	LD D,L
00000380:	LD D,E
00000381:	LD C,B
00000382:	JR NZ,+50h
00000384:	LD C,H
00000385:	LD B,C
00000386:	LD E,C
00000387:	JR NZ,+42h
00000389:	LD D,L
0000038A:	LD D,H
0000038B:	LD D,H
0000038C:	LD C,A
0000038D:	LD C,(HL)
0000038E:	NOP
0000038F:	LD D,B
00000390:	LD D,L
00000391:	LD D,E
00000392:	LD C,B
00000393:	JR NZ,+52h
00000395:	LD B,L
00000396:	LD B,E
00000397:	LD C,A
00000398:	LD D,D
00000399:	LD B,H
0000039A:	JR NZ,+26h
0000039C:	JR NZ,+00h
0000039E:	PUSH BC
0000039F:	PUSH DE
000003A0:	PUSH HL
000003A1:	LD DE,0000h
000003A4:	LD A,B
000003A5:	OR C
000003A6:	JR NZ,+0Bh
000003A8:	EX DE,HL
000003A9:	LD (11E3h),HL
000003AC:	LD (11E5h),HL
000003AF:	POP HL
000003B0:	POP DE
000003B1:	POP BC
000003B2:	RET
000003B3:	LD A,(HL)
000003B4:	PUSH HL
000003B5:	LD H,08h
000003B7:	RLCA
000003B8:	JR NC,+01h
000003BA:	INC DE
000003BB:	DEC H
000003BC:	JR NZ,-07h
000003BE:	POP HL
000003BF:	INC HL
000003C0:	DEC BC
000003C1:	JP 03A4h
000003C4:	LD A,5Ah
000003C6:	DEC A
000003C7:	JP NZ,03C6h
000003CA:	RET

000003CB:	PUSH AF
000003CC:	PUSH BC
000003CD:	LD BC,6000h
000003D0:	LD A,(11E9h)
000003D3:	SET 0,A
000003D5:	OUT (C),A
000003D7:	PUSH AF
000003D8:	LD A,3Ch
000003DA:	CALL 03C6h
000003DD:	POP AF
000003DE:	RES 0,A
000003E0:	OUT (C),A
000003E2:	LD (11E9h),A
000003E5:	LD A,37h
000003E7:	CALL 03C6h
000003EA:	POP BC
000003EB:	POP AF
000003EC:	RET

000003ED:	PUSH AF
000003EE:	PUSH BC
000003EF:	LD BC,6000h
000003F2:	LD A,(11E9h)
000003F5:	SET 0,A
000003F7:	OUT (C),A
000003F9:	PUSH AF
000003FA:	LD A,78h
000003FC:	CALL 03C6h
000003FF:	POP AF
00000400:	RES 0,A
00000402:	OUT (C),A
00000404:	LD (11E9h),A
00000407:	LD A,73h
00000409:	CALL 03C6h
0000040C:	POP BC
0000040D:	POP AF
0000040E:	RET
0000040F:	PUSH BC
00000410:	LD B,08h
00000412:	CALL 03EDh
00000415:	RLCA
00000416:	CALL C,03EDh
00000419:	CALL NC,03CBh
0000041C:	DEC B
0000041D:	JP NZ,0415h
00000420:	POP BC
00000421:	RET
00000422:	PUSH BC
00000423:	PUSH DE
00000424:	LD A,E
00000425:	LD BC,55F0h
00000428:	LD DE,2828h		; 'INKEY$'
0000042B:	CP CCh
0000042D:	JP Z,0436h
00000430:	LD BC,2AF8h
00000433:	LD DE,1414h
00000436:	CALL 03CBh
00000439:	DEC BC
0000043A:	LD A,B
0000043B:	OR C
0000043C:	JR NZ,-08h
0000043E:	CALL 03EDh
00000441:	DEC D
00000442:	JR NZ,-06h
00000444:	CALL 03CBh
00000447:	DEC E
00000448:	JR NZ,-06h
0000044A:	CALL 03EDh
0000044D:	POP DE
0000044E:	POP BC
0000044F:	RET

; BASIC 'MON' command
00000450:	PUSH HL
00000451:	LD (0483h),SP
00000455:	CALL 0823h
00000458:	LD A,2Ah	; '*'
0000045A:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
0000045D:	CALL 04E1h
00000460:	JR NC,-05h
00000462:	LD BC,0455h
00000465:	PUSH BC
00000466:	LD A,(DE)
00000467:	INC DE
00000468:	CP 2Ah	; '*'
0000046A:	RET NZ
0000046B:	CALL 0553h	; TOUPPER (monitor command line)
0000046E:	CP 47h	; 'G'
00000470:	JR Z,+2Ch
00000472:	CP 44h	; 'D'
00000474:	JR Z,+2Dh
00000476:	CP 4Dh	; 'M'
00000478:	JR Z,+0Dh
0000047A:	CP 53h	; 'S'
0000047C:	JP Z,058Eh
0000047F:	CP 52h	; 'R'
00000481:	RET NZ
00000482:	LD SP,0000h
00000485:	POP HL
00000486:	RET

00000487:	CALL 0509h
0000048A:	CALL 0580h
0000048D:	CALL 055Eh
00000490:	PUSH HL
00000491:	CALL 0B48h
00000494:	CALL 0B48h
00000497:	POP HL
00000498:	CALL 04E1h
0000049B:	JR NC,-13h
0000049D:	RET

0000049E:	CALL 0509h
000004A1:	RET C
000004A2:	LD PC,HL
000004A3:	CALL 0509h
000004A6:	PUSH HL
000004A7:	CALL 0509h
000004AA:	JR NC,+06h
000004AC:	POP HL
000004AD:	PUSH HL
000004AE:	LD BC,003Fh
000004B1:	ADD HL,BC
000004B2:	LD (04BBh),HL
000004B5:	POP HL
000004B6:	CALL 04C8h
000004B9:	RET Z
000004BA:	LD DE,FFFFh
000004BD:	EX DE,HL
000004BE:	OR A
000004BF:	SBC HL,DE
000004C1:	EX DE,HL
000004C2:	JR NC,-0Eh
000004C4:	RET
000004C5:	LD B,C
000004C6:	JR +02h
000004C8:	LD B,08h
000004CA:	CALL 0580h
000004CD:	CALL 055Eh
000004D0:	INC HL
000004D1:	DJNZ -06h
000004D3:	LD A,80h
000004D5:	INA (01h)
000004D7:	AND 04h
000004D9:	JR Z,-08h
000004DB:	CALL 0823h
000004DE:	JP 0C5Bh	; BRKEY

; Line input for MONITOR
000004E1:	LD DE,7A4Fh
000004E4:	CALL 06A4h		; INPUTF -  LINE INPUT,  DE=addr
000004E7:	CALL 0509h
000004EA:	RET C
000004EB:	INC DE
000004EC:	INC DE
000004ED:	CALL 04F6h
000004F0:	CCF
000004F1:	RET NC
000004F2:	LD (HL),A
000004F3:	INC HL
000004F4:	JR -0Ah
000004F6:	LD A,(DE)
000004F7:	CP 3Bh
000004F9:	JR NZ,+05h
000004FB:	INC DE
000004FC:	LD A,(DE)
000004FD:	INC DE
000004FE:	OR A
000004FF:	RET
00000500:	PUSH DE
00000501:	CALL 052Ch
00000504:	POP DE
00000505:	RET C
00000506:	INC DE
00000507:	INC DE
00000508:	RET

00000509:	LD A,(DE)
0000050A:	INC DE
0000050B:	CP 20h		; ' '
0000050D:	JR Z,-06h
0000050F:	DEC DE
00000510:	PUSH HL
00000511:	CALL 051Fh
00000514:	JR C,+07h
00000516:	POP AF
00000517:	INC DE
00000518:	INC DE
00000519:	INC DE
0000051A:	INC DE
0000051B:	OR A
0000051C:	RET
0000051D:	POP HL
0000051E:	RET

0000051F:	PUSH DE
00000520:	CALL 052Ch
00000523:	JR C,+05h
00000525:	LD H,A
00000526:	CALL 052Ch
00000529:	LD L,A
0000052A:	POP DE
0000052B:	RET

0000052C:	CALL 0540h
0000052F:	RET C
00000530:	PUSH BC
00000531:	RLCA
00000532:	RLCA
00000533:	RLCA
00000534:	RLCA
00000535:	LD C,A
00000536:	CALL 0540h
00000539:	PUSH AF
0000053A:	OR C
0000053B:	LD C,A
0000053C:	POP AF
0000053D:	LD A,C
0000053E:	POP BC
0000053F:	RET

00000540:	CALL 0553h	; TOUPPER (monitor command line)
00000543:	SUB 30h
00000545:	RET C
00000546:	CP 0Ah
00000548:	CCF
00000549:	RET NC
0000054A:	CP 11h
0000054C:	RET C
0000054D:	SUB 07h
0000054F:	CP 10h
00000551:	CCF
00000552:	RET

; TOUPPER (monitor command line)
00000553:	LD A,(DE)
00000554:	INC DE
00000555:	CP 61h
00000557:	RET C
00000558:	CP 7Bh
0000055A:	RET NC
0000055B:	SUB 20h
0000055D:	RET

0000055E:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00000561:	LD A,(HL)
00000562:	PUSH AF
00000563:	AND F0h
00000565:	RRCA
00000566:	RRCA
00000567:	RRCA
00000568:	RRCA
00000569:	CALL 0578h
0000056C:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
0000056F:	POP AF
00000570:	AND 0Fh
00000572:	CALL 0578h
00000575:	JP 0864h		; OUTCH (PRINT char in A, aka ACCPRT)

00000578:	ADD 30h
0000057A:	CP 3Ah
0000057C:	RET C
0000057D:	ADD 07h
0000057F:	RET

00000580:	CALL 0823h
00000583:	LD A,H
00000584:	CALL 0562h
00000587:	LD A,L
00000588:	CALL 0562h
0000058B:	JP 0862h		; OUTSP: print ' '   (aka SPPRT)

0000058E:	CALL 0509h
00000591:	RET C
00000592:	PUSH HL
00000593:	CALL 0509h
00000596:	POP BC
00000597:	RET C
00000598:	PUSH HL
00000599:	PUSH BC
0000059A:	LD HL,7A4Fh
0000059D:	CALL 04ECh
000005A0:	LD DE,7A4Fh
000005A3:	OR A
000005A4:	SBC HL,DE
000005A6:	LD C,L
000005A7:	POP HL
000005A8:	PUSH HL
000005A9:	EXX
000005AA:	POP HL
000005AB:	POP DE
000005AC:	EXX
000005AD:	RET Z
000005AE:	CALL 05C2h
000005B1:	CALL Z,04C5h
000005B4:	RET Z
000005B5:	EXX
000005B6:	INC HL
000005B7:	PUSH HL
000005B8:	SCF
000005B9:	SBC HL,DE
000005BB:	POP HL
000005BC:	RET NC
000005BD:	PUSH HL
000005BE:	EXX
000005BF:	POP HL
000005C0:	JR -14h
000005C2:	LD A,(DE)
000005C3:	CP (HL)
000005C4:	RET NZ
000005C5:	PUSH BC
000005C6:	PUSH DE
000005C7:	PUSH HL
000005C8:	LD B,C
000005C9:	LD A,(DE)
000005CA:	CP (HL)
000005CB:	JR NZ,+05h
000005CD:	INC DE
000005CE:	INC HL
000005CF:	DJNZ -08h
000005D1:	XOR A
000005D2:	POP HL
000005D3:	POP DE
000005D4:	POP BC
000005D5:	RET
000005D6:	LD A,C
000005D7:	CP 05h
000005D9:	RET NC
000005DA:	OR A
000005DB:	LD HL,0668h
000005DE:	JR Z,+13h
000005E0:	LD A,B
000005E1:	LD B,00h
000005E3:	DEC C
000005E4:	LD HL,0660h
000005E7:	RL C
000005E9:	ADD HL,BC
000005EA:	LD E,(HL)
000005EB:	INC HL
000005EC:	LD D,(HL)
000005ED:	EX DE,HL
000005EE:	DEC A
000005EF:	RLCA
000005F0:	RLCA
000005F1:	RLCA
000005F2:	RLCA
000005F3:	LD E,A
000005F4:	LD A,(11EAh)
000005F7:	AND CFh
000005F9:	OR E
000005FA:	CALL 0062h
000005FD:	LD E,(HL)
000005FE:	INC HL
000005FF:	LD D,(HL)
00000600:	INC HL
00000601:	EX DE,HL
00000602:	LD (0AFAh),HL
00000605:	EX DE,HL
00000606:	LD E,(HL)
00000607:	INC HL
00000608:	LD D,(HL)
00000609:	INC HL
0000060A:	EX DE,HL
0000060B:	LD (0A02h),HL
0000060E:	EX DE,HL
0000060F:	LD E,(HL)
00000610:	INC HL
00000611:	LD D,(HL)
00000612:	INC HL
00000613:	EX DE,HL
00000614:	LD (09B3h),HL
00000617:	LD (0A08h),HL
0000061A:	LD BC,0002h
0000061D:	ADD HL,BC
0000061E:	LD A,L
0000061F:	LD (0AFDh),A
00000622:	EX DE,HL
00000623:	LD E,(HL)
00000624:	INC HL
00000625:	LD D,(HL)
00000626:	INC HL
00000627:	EX DE,HL
00000628:	LD (0AD6h),HL
0000062B:	LD (0947h),HL
0000062E:	PUSH HL
0000062F:	SET 3,H
00000631:	LD (0AE6h),HL
00000634:	EX DE,HL
00000635:	LD E,(HL)
00000636:	INC HL
00000637:	LD D,(HL)
00000638:	INC HL
00000639:	EX DE,HL
0000063A:	LD (0AE9h),HL
0000063D:	LD BC,FFE0h
00000640:	ADD HL,BC
00000641:	LD (09FCh),HL
00000644:	POP BC
00000645:	ADD HL,BC
00000646:	LD BC,001Fh
00000649:	ADD HL,BC
0000064A:	LD (09EFh),HL
0000064D:	SET 3,H
0000064F:	LD (09F9h),HL
00000652:	EX DE,HL
00000653:	LD E,(HL)
00000654:	INC HL
00000655:	LD D,(HL)
00000656:	EX DE,HL
00000657:	LD (0909h),HL
0000065A:	SET 3,H
0000065C:	LD (0916h),HL
0000065F:	RET
00000660:	LD (HL),H
00000661:	LD B,80h
00000663:	LD B,8Ch
00000665:	LD B,98h
00000667:	LD B,A2h
00000669:	LD DE,11E1h
0000066C:	CCF
0000066D:	NOP
0000066E:	NOP
0000066F:	NOP
00000670:	NOP
00000671:	EX AF,AF'
00000672:	NOP
00000673:	LD (BC),A
00000674:	AND D
00000675:	LD DE,11B1h
00000678:	RRCA
00000679:	NOP
0000067A:	NOP
0000067B:	NOP
0000067C:	NOP
0000067D:	LD (BC),A
0000067E:	NOP
0000067F:	NOP
00000680:	OR D
00000681:	LD DE,11C1h
00000684:	RRCA
00000685:	NOP
00000686:	NOP
00000687:	LD (BC),A
00000688:	NOP
00000689:	LD (BC),A
0000068A:	NOP
0000068B:	LD (BC),A
0000068C:	JP NZ,D111h
0000068F:	LD DE,000Fh
00000692:	NOP
00000693:	INC B
00000694:	NOP
00000695:	LD (BC),A
00000696:	NOP
00000697:	INC B
00000698:	JP NC,E111h
0000069B:	LD DE,000Fh
0000069E:	NOP
0000069F:	LD B,00h
000006A1:	LD (BC),A
000006A2:	NOP
000006A3:	LD B,F5h			; Token for '='
000006A5:	PUSH BC
000006A6:	PUSH HL
000006A7:	PUSH DE
000006A8:	LD A,01h
000006AA:	LD (0C7Fh),A
000006AD:	LD HL,06ADh
000006B0:	PUSH HL
000006B1:	CALL 0C62h			; ASCGET:
000006B4:	PUSH AF
000006B5:	LD A,(117Fh)
000006B8:	OR A
000006B9:	CALL NZ,06D2h
000006BC:	POP AF
000006BD:	CP 03h
000006BF:	JP Z,074Ch
000006C2:	CP 0Dh
000006C4:	JP Z,075Fh
000006C7:	JP 08D9h

; BELL
000006CA:	LD DE,0748h
000006CD:	LD HL,1000h
000006D0:	JR +06h
000006D2:	LD DE,0744h
000006D5:	LD HL,00C0h
000006D8:	LD BC,4000h
000006DB:	PUSH HL
000006DC:	LD HL,0740h
000006DF:	XOR A
000006E0:	OUT (C),A
000006E2:	INC C
000006E3:	IN A,(C)
000006E5:	LD (HL),A
000006E6:	LD A,(DE)
000006E7:	OUT (C),A
000006E9:	DEC C
000006EA:	INC DE
000006EB:	INC HL
000006EC:	LD A,01h
000006EE:	OUT (C),A
000006F0:	INC C
000006F1:	IN A,(C)
000006F3:	LD (HL),A
000006F4:	LD A,(DE)
000006F5:	OUT (C),A
000006F7:	DEC C
000006F8:	INC DE
000006F9:	INC HL
000006FA:	LD A,08h
000006FC:	OUT (C),A
000006FE:	INC C
000006FF:	IN A,(C)
00000701:	LD (HL),A
00000702:	LD A,(DE)
00000703:	OUT (C),A
00000705:	DEC C
00000706:	INC DE
00000707:	INC HL
00000708:	LD A,07h
0000070A:	OUT (C),A
0000070C:	INC C
0000070D:	IN A,(C)
0000070F:	LD (HL),A
00000710:	LD A,(DE)
00000711:	OUT (C),A
00000713:	DEC C
00000714:	POP DE
00000715:	DEC DE
00000716:	LD A,D
00000717:	OR E
00000718:	JR NZ,-05h
0000071A:	LD A,07h
0000071C:	OUT (C),A
0000071E:	INC C
0000071F:	LD A,(HL)
00000720:	OUT (C),A
00000722:	DEC C
00000723:	DEC HL
00000724:	LD A,08h
00000726:	OUT (C),A
00000728:	INC C
00000729:	LD A,(HL)
0000072A:	OUT (C),A
0000072C:	DEC C
0000072D:	DEC HL
0000072E:	LD A,01h
00000730:	OUT (C),A
00000732:	INC C
00000733:	LD A,(HL)
00000734:	OUT (C),A
00000736:	DEC C
00000737:	DEC HL
00000738:	XOR A
00000739:	OUT (C),A
0000073B:	INC C
0000073C:	LD A,(HL)
0000073D:	OUT (C),A
0000073F:	RET
00000740:	NOP
00000741:	NOP
00000742:	NOP
00000743:	NOP
00000744:	RET NC
00000745:	NOP
00000746:	INC C
00000747:	LD A,(HL)
00000748:	LD A,A
00000749:	NOP
0000074A:	RRCA
0000074B:	LD A,(HL)
0000074C:	POP AF
0000074D:	POP HL
0000074E:	PUSH HL
0000074F:	LD (HL),03h
00000751:	INC HL
00000752:	LD (HL),0Dh
00000754:	INC HL
00000755:	LD (HL),00h
00000757:	CALL 0B62h
0000075A:	POP DE
0000075B:	POP HL
0000075C:	POP BC
0000075D:	POP AF
0000075E:	RET

0000075F:	POP AF
00000760:	CALL 07BAh
00000763:	PUSH DE
00000764:	CALL 07C8h
00000767:	LD A,E
00000768:	POP DE
00000769:	SUB E
0000076A:	CP 08h
0000076C:	JR C,+02h
0000076E:	LD A,07h
00000770:	RLCA
00000771:	RLCA
00000772:	RLCA
00000773:	RLCA
00000774:	RLCA
00000775:	LD D,A
00000776:	LD H,E
00000777:	LD L,00h
00000779:	CALL 093Bh
0000077C:	POP HL
0000077D:	PUSH HL
0000077E:	CALL 0794h
00000781:	OR A
00000782:	JR NZ,+02h
00000784:	LD A,20h
00000786:	LD (HL),A
00000787:	INC HL
00000788:	INC BC
00000789:	DEC D
0000078A:	JR NZ,-0Eh
0000078C:	LD A,20h
0000078E:	DEC HL
0000078F:	CP (HL)
00000790:	JR Z,-04h
00000792:	JR -43h
00000794:	PUSH BC
00000795:	IN A,(C)
00000797:	AND 7Fh
00000799:	SET 3,B
0000079B:	IN C,(C)
0000079D:	BIT 2,C
0000079F:	JR Z,+0Ah
000007A1:	BIT 3,C
000007A3:	JR NZ,+12h
000007A5:	AND 0Fh
000007A7:	ADD E0h
000007A9:	JR +0Ah
000007AB:	BIT 3,C
000007AD:	JR Z,+06h
000007AF:	CP 60h
000007B1:	JR NC,+02h
000007B3:	ADD 80h
000007B5:	POP BC
000007B6:	RET
000007B7:	POP BC
000007B8:	XOR A
000007B9:	RET
000007BA:	CALL 07D3h
000007BD:	XOR A
000007BE:	CP (HL)
000007BF:	RET Z
000007C0:	DEC HL
000007C1:	DEC E
000007C2:	JR NZ,-06h
000007C4:	RET
000007C5:	CALL 07D3h
000007C8:	INC HL
000007C9:	INC E
000007CA:	LD A,E
000007CB:	CP 10h
000007CD:	RET NC
000007CE:	XOR A
000007CF:	CP (HL)
000007D0:	JR NZ,-0Ah
000007D2:	RET

000007D3:	LD A,(11EEh)	; Y text coordinate
000007D6:	LD E,A
000007D7:	LD D,00h
000007D9:	LD HL,(0AFAh)
000007DC:	ADD HL,DE
000007DD:	RET

000007DE:	CALL 0843h
000007E1:	PUSH AF
000007E2:	PUSH BC
000007E3:	PUSH DE
000007E4:	LD A,B
000007E5:	OR A
000007E6:	JR Z,+07h
000007E8:	LD A,(DE)
000007E9:	INC DE
000007EA:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
000007ED:	DJNZ -07h
000007EF:	POP DE
000007F0:	POP BC
000007F1:	POP AF
000007F2:	RET

; MSX (aka DEPRT), print message in DE
000007F3:	PUSH AF
000007F4:	PUSH DE
000007F5:	LD A,(DE)
000007F6:	OR A
000007F7:	JR Z,+06h
000007F9:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
000007FC:	INC DE
000007FD:	JR -0Ah
000007FF:	POP DE
00000800:	POP AF
00000801:	RET

00000802:	PUSH HL
00000803:	LD A,(11EBh)
00000806:	CP 02h
00000808:	LD HL,11EDh		; CSRXY: X,Y text coordinates
0000080B:	JR C,+0Ch
0000080D:	LD HL,11ECh
00000810:	JR Z,+07h
00000812:	LD A,2Ch		; ','
00000814:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00000817:	POP HL
00000818:	RET

00000819:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
0000081C:	LD A,(HL)
0000081D:	AND 07h
0000081F:	JR NZ,-08h
00000821:	POP HL
00000822:	RET

00000823:	LD A,(11EBh)
00000826:	CP 02h
00000828:	JR C,+09h
0000082A:	JR NZ,+17h
0000082C:	LD A,(11ECh)
0000082F:	OR A
00000830:	RET Z
00000831:	JR +10h
00000833:	LD A,(11EDh)		; CSRXY: X,Y text coordinates
00000836:	OR A
00000837:	JR NZ,+0Ah
00000839:	PUSH HL
0000083A:	PUSH DE
0000083B:	CALL 07D3h
0000083E:	LD A,(HL)
0000083F:	POP DE
00000840:	POP HL
00000841:	OR A
00000842:	RET Z
00000843:	LD A,(11EBh)
00000846:	OR A
00000847:	JR Z,+0Fh
00000849:	CP 02h
0000084B:	LD A,0Dh
0000084D:	JR NZ,+15h
0000084F:	LD A,FFh
00000851:	LD (11ECh),A
00000854:	LD A,0Ah
00000856:	JR +0Ch
00000858:	PUSH BC
00000859:	PUSH DE
0000085A:	PUSH HL
0000085B:	CALL 0B62h
0000085E:	POP HL
0000085F:	POP DE
00000860:	POP BC
00000861:	RET

SPPRT:
00000862:	LD A,20h
; OUTCH (PRINT char in A, aka ACCPRT)
00000864:	PUSH AF
00000865:	PUSH BC
00000866:	PUSH DE
00000867:	PUSH HL
00000868:	CALL 0870h		; Output char in A to printer
0000086B:	POP HL
0000086C:	POP DE
0000086D:	POP BC
0000086E:	POP AF
0000086F:	RET

; Output char in A to printer
00000870:	LD HL,(11EBh)
00000873:	INC L
00000874:	DEC L
00000875:	JP Z,08DEh
00000878:	DEC L
00000879:	JP Z,08D9h
0000087C:	DEC L
0000087D:	JP NZ,4558h
00000880:	LD HL,(11ECh)
00000883:	INC L
00000884:	LD (11ECh),HL
; Send raw code in A to printer
00000887:	PUSH AF
00000888:	CALL 08A9h
0000088B:	LD E,00h
0000088D:	CALL 08BBh
00000890:	LD A,0Fh
00000892:	OUT (C),A
00000894:	INC C
00000895:	POP AF
00000896:	OUT (C),A
00000898:	DEC C
00000899:	LD A,(11E9h)
0000089C:	OR 04h
0000089E:	CALL 006Bh
000008A1:	LD A,(11E9h)
000008A4:	AND FBh
000008A6:	JP 006Bh

000008A9:	LD BC,4000h
000008AC:	LD A,07h
000008AE:	OUT (C),A
000008B0:	INC C
000008B1:	IN A,(C)
000008B3:	AND 3Fh
000008B5:	OR 80h
000008B7:	OUT (C),A
000008B9:	DEC C
000008BA:	RET
000008BB:	LD HL,1000h
000008BE:	LD D,00h
000008C0:	LD A,0Eh
000008C2:	OUT (C),A
000008C4:	INC C
000008C5:	IN A,(C)
000008C7:	DEC C
000008C8:	AND 20h
000008CA:	CP E
000008CB:	RET Z
000008CC:	DEC D
000008CD:	JR NZ,-0Bh
000008CF:	DEC HL
000008D0:	LD A,H
000008D1:	OR L
000008D2:	JR NZ,-10h
000008D4:	LD A,1Ch
000008D6:	JP 2196h		; error handling

000008D9:	CP 20h
000008DB:	JP C,0A81h

000008DE:	PUSH AF
000008DF:	LD A,(1C06h)
000008E2:	CP 02h
000008E4:	JR C,+09h
000008E6:	CP 04h		; single precision variable type?
000008E8:	POP BC
000008E9:	RET C
000008EA:	CALL 094Fh
000008ED:	JR +07h
000008EF:	CALL 0938h
000008F2:	POP AF
000008F3:	CALL 0A3Fh
000008F6:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
000008F9:	INC L
000008FA:	LD A,L
000008FB:	CP 20h
000008FD:	JR C,+35h
000008FF:	INC H
00000900:	LD B,01h
00000902:	LD A,H
00000903:	CP 10h
00000905:	JR C,+24h
00000907:	PUSH BC
00000908:	LD BC,0200h
0000090B:	LD A,00h
0000090D:	LD D,20h
0000090F:	OUT (C),A
00000911:	INC BC
00000912:	DEC D
00000913:	JR NZ,-06h
00000915:	LD BC,0A00h
00000918:	LD A,(1180h)		; COLORF
0000091B:	AND 03h
0000091D:	LD D,20h
0000091F:	OUT (C),A
00000921:	INC BC
00000922:	DEC D
00000923:	JR NZ,-06h
00000925:	CALL 0991h
00000928:	LD H,0Fh
0000092A:	POP BC
0000092B:	LD A,H
0000092C:	PUSH HL
0000092D:	CALL 07D6h
00000930:	LD (HL),B
00000931:	POP HL
00000932:	LD L,00h
00000934:	LD (11EDh),HL		; CSRXY: X,Y text coordinates
00000937:	RET

00000938:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
0000093B:	XOR A
0000093C:	SRL H
0000093E:	RRA
0000093F:	SRL H
00000941:	RRA
00000942:	SRL H
00000944:	RRA
00000945:	OR L
00000946:	LD BC,0000h
00000949:	ADD C
0000094A:	LD C,A
0000094B:	LD A,B
0000094C:	ADC H
0000094D:	LD B,A
0000094E:	RET
0000094F:	LD A,B
00000950:	CP 60h
00000952:	JR C,+07h
00000954:	AND 7Fh
00000956:	LD DE,554Ah
00000959:	JR +05h
0000095B:	SUB 20h
0000095D:	LD DE,524Ah
00000960:	LD L,A
00000961:	LD H,00h
00000963:	ADD HL,HL
00000964:	ADD HL,HL
00000965:	LD C,L
00000966:	LD B,H
00000967:	ADD HL,HL
00000968:	ADD HL,BC
00000969:	ADD HL,DE
0000096A:	EX DE,HL
0000096B:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
0000096E:	LD A,L
0000096F:	LD L,00h
00000971:	LD C,L
00000972:	LD B,H
00000973:	SRL B
00000975:	RR C
00000977:	ADD HL,BC
00000978:	LD C,A
00000979:	LD B,00h
0000097B:	ADD HL,BC
0000097C:	LD C,L
0000097D:	LD B,H
0000097E:	EX DE,HL
0000097F:	LD E,0Ch
00000981:	LD D,(HL)
00000982:	OUT (C),D
00000984:	INC HL
00000985:	LD A,20h
00000987:	ADD C
00000988:	LD C,A
00000989:	LD A,00h
0000098B:	ADC B
0000098C:	LD B,A
0000098D:	DEC E
0000098E:	JR NZ,-0Fh
00000990:	RET
00000991:	EXX
00000992:	PUSH BC
00000993:	PUSH DE
00000994:	PUSH HL
00000995:	LD BC,(0AD6h)
00000999:	LD DE,(09FCh)
0000099D:	CALL 09BEh
000009A0:	LD BC,(0AE6h)
000009A4:	LD DE,(09FCh)
000009A8:	CALL 09BEh
000009AB:	LD DE,(0AFAh)
000009AF:	LD H,D
000009B0:	LD L,E
000009B1:	INC HL
000009B2:	LD BC,003Fh
000009B5:	LD A,(DE)
000009B6:	LDIR
000009B8:	LD (DE),A
000009B9:	POP HL
000009BA:	POP DE
000009BB:	POP BC
000009BC:	EXX
000009BD:	RET
000009BE:	PUSH BC
000009BF:	EXX
000009C0:	POP BC
000009C1:	LD HL,1182h
000009C4:	LD E,20h
000009C6:	IN A,(C)
000009C8:	LD (HL),A
000009C9:	INC BC
000009CA:	INC HL
000009CB:	DEC E
000009CC:	JR NZ,-08h
000009CE:	IN A,(C)
000009D0:	INC BC
000009D1:	EXX
000009D2:	OUT (C),A
000009D4:	INC BC
000009D5:	DEC DE
000009D6:	LD A,D
000009D7:	OR E
000009D8:	EXX
000009D9:	JR NZ,-0Dh
000009DB:	EXX
000009DC:	LD HL,1182h
000009DF:	LD E,20h
000009E1:	LD A,(HL)
000009E2:	OUT (C),A
000009E4:	INC HL
000009E5:	INC BC
000009E6:	DEC E
000009E7:	JR NZ,-08h
000009E9:	RET
000009EA:	EXX
000009EB:	PUSH BC
000009EC:	PUSH DE
000009ED:	PUSH HL
000009EE:	LD BC,07FFh
000009F1:	LD DE,(09FCh)
000009F5:	CALL 0A13h
000009F8:	LD BC,0FFFh
000009FB:	LD DE,07E0h
000009FE:	CALL 0A13h
00000A01:	LD DE,11E1h
00000A04:	LD L,E
00000A05:	LD H,D
00000A06:	DEC HL
00000A07:	LD BC,003Fh
00000A0A:	LD A,(DE)
00000A0B:	LDDR
00000A0D:	LD (DE),A
00000A0E:	POP HL
00000A0F:	POP DE
00000A10:	POP BC
00000A11:	EXX
00000A12:	RET
00000A13:	PUSH BC
00000A14:	EXX
00000A15:	POP BC
00000A16:	LD HL,11A1h
00000A19:	LD E,20h
00000A1B:	IN A,(C)
00000A1D:	LD (HL),A
00000A1E:	DEC BC
00000A1F:	DEC HL
00000A20:	DEC E
00000A21:	JR NZ,-08h
00000A23:	IN A,(C)
00000A25:	DEC BC
00000A26:	EXX
00000A27:	OUT (C),A
00000A29:	DEC BC
00000A2A:	DEC DE
00000A2B:	LD A,D
00000A2C:	OR E
00000A2D:	EXX
00000A2E:	JR NZ,-0Dh
00000A30:	EXX
00000A31:	LD HL,11A1h
00000A34:	LD E,20h
00000A36:	LD A,(HL)
00000A37:	OUT (C),A
00000A39:	DEC HL
00000A3A:	DEC BC
00000A3B:	DEC E
00000A3C:	JR NZ,-08h
00000A3E:	RET

00000A3F:	CP 60h
00000A41:	JR C,+14h
00000A43:	CP E0h			; Token code for 'STEP'
00000A45:	JR NC,+1Ch
00000A47:	AND 7Fh
00000A49:	OUT (C),A
00000A4B:	SET 3,B
00000A4D:	LD A,(1180h)		; COLORF
00000A50:	AND 03h
00000A52:	OR 08h
00000A54:	OUT (C),A
00000A56:	RET
00000A57:	OUT (C),A
00000A59:	SET 3,B
00000A5B:	LD A,(1180h)		; COLORF
00000A5E:	AND 03h
00000A60:	OUT (C),A
00000A62:	RET

00000A63:	AND 0Fh
00000A65:	PUSH DE
00000A66:	LD D,A
00000A67:	LD A,(1180h)		; COLORF
00000A6A:	DEC A
00000A6B:	AND 07h
00000A6D:	RLCA
00000A6E:	RLCA
00000A6F:	RLCA
00000A70:	RLCA
00000A71:	OR D
00000A72:	POP DE
00000A73:	OUT (C),A
00000A75:	SET 3,B
00000A77:	LD A,(1180h)		; COLORF
00000A7A:	AND 03h
00000A7C:	OR 04h
00000A7E:	OUT (C),A
00000A80:	RET

00000A81:	LD L,A
00000A82:	LD H,00h
00000A84:	ADD HL,HL
00000A85:	LD BC,113Fh
00000A88:	ADD HL,BC
00000A89:	LD A,(HL)
00000A8A:	INC HL
00000A8B:	LD H,(HL)
00000A8C:	LD L,A
00000A8D:	LD PC,HL
00000A8E:	CALL 0938h
00000A91:	PUSH BC
00000A92:	CALL 07C5h
00000A95:	LD H,E
00000A96:	LD L,00h
00000A98:	CALL 093Bh
00000A9B:	POP DE
00000A9C:	LD L,C
00000A9D:	LD H,B
00000A9E:	OR A
00000A9F:	SBC HL,DE
00000AA1:	LD D,00h
00000AA3:	LD A,(1180h)		; COLORF
00000AA6:	AND 03h
00000AA8:	LD E,A
00000AA9:	DEC BC
00000AAA:	IN A,(C)
00000AAC:	OUT (C),D
00000AAE:	LD D,A
00000AAF:	SET 3,B
00000AB1:	IN A,(C)
00000AB3:	OUT (C),E
00000AB5:	LD E,A
00000AB6:	RES 3,B
00000AB8:	DEC HL
00000AB9:	LD A,H
00000ABA:	OR L
00000ABB:	JR NZ,-14h
00000ABD:	LD A,(11EDh)		; CSRXY: X,Y text coordinates
00000AC0:	OR A
00000AC1:	JR NZ,+08h
00000AC3:	PUSH DE
00000AC4:	CALL 07D3h
00000AC7:	LD A,(HL)
00000AC8:	POP DE
00000AC9:	OR A
00000ACA:	RET Z
00000ACB:	DEC BC
00000ACC:	OUT (C),D
00000ACE:	SET 3,B
00000AD0:	OUT (C),E
00000AD2:	JP 0B48h

; CLR:
00000AD5:	LD BC,0000h
00000AD8:	LD HL,(0AE9h)		; CHRLEN
00000ADB:	LD D,00h
00000ADD:	OUT (C),D
00000ADF:	INC BC
00000AE0:	DEC HL
00000AE1:	LD A,H
00000AE2:	OR L
00000AE3:	JR NZ,-08h
00000AE5:	LD BC,0800h
00000AE8:	LD HL,0800h			; 0AE9h = CHRLEN  (SMC)
00000AEB:	LD A,(1180h)		; COLORF
00000AEE:	AND 03h
00000AF0:	LD D,A
00000AF1:	OUT (C),D
00000AF3:	INC BC
00000AF4:	DEC HL
00000AF5:	LD A,H
00000AF6:	OR L
00000AF7:	JR NZ,-08h
00000AF9:	LD HL,11A2h
00000AFC:	LD B,41h
00000AFE:	LD (HL),00h
00000B00:	INC HL
00000B01:	DJNZ -05h
00000B03:	LD HL,0000h
00000B06:	JP 0B83h

00000B09:	CALL 07C5h
00000B0C:	LD H,E
00000B0D:	LD L,00h
00000B0F:	CALL 093Bh
00000B12:	DEC BC
00000B13:	CALL 0794h
00000B16:	CP 21h
00000B18:	RET NC
00000B19:	PUSH BC
00000B1A:	CALL 0938h
00000B1D:	POP HL
00000B1E:	OR A
00000B1F:	SBC HL,BC
00000B21:	LD D,00h
00000B23:	LD A,(1180h)		; COLORF
00000B26:	AND 03h
00000B28:	LD E,A
00000B29:	INC HL
00000B2A:	IN A,(C)
00000B2C:	OUT (C),D
00000B2E:	LD D,A
00000B2F:	SET 3,B
00000B31:	IN A,(C)
00000B33:	OUT (C),E
00000B35:	LD E,A
00000B36:	RES 3,B
00000B38:	INC BC
00000B39:	DEC HL
00000B3A:	LD A,H
00000B3B:	OR L
00000B3C:	JR NZ,-14h
00000B3E:	RET
00000B3F:	LD A,01h
00000B41:	LD (1203h),A
00000B44:	RET
00000B45:	XOR A
00000B46:	JR -07h
00000B48:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00000B4B:	DEC L
00000B4C:	LD A,L
00000B4D:	CP FFh
00000B4F:	JR NZ,+32h
00000B51:	LD L,1Fh
00000B53:	DEC H
00000B54:	LD A,H
00000B55:	CP FFh
00000B57:	JR NZ,+2Ah
00000B59:	PUSH HL
00000B5A:	CALL 09EAh
00000B5D:	POP HL
00000B5E:	LD H,00h
00000B60:	JR +21h
00000B62:	CALL 07C5h
00000B65:	LD H,E
00000B66:	LD B,00h
00000B68:	JP 0902h

00000B6B:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00000B6E:	INC L
00000B6F:	LD A,L
00000B70:	CP 20h
00000B72:	JR C,+0Fh
00000B74:	LD L,00h
00000B76:	INC H
00000B77:	LD A,H
00000B78:	CP 10h
00000B7A:	JR C,+07h
00000B7C:	PUSH HL
00000B7D:	CALL 0991h
00000B80:	POP HL
00000B81:	LD H,0Fh
00000B83:	LD (11EDh),HL		; CSRXY: X,Y text coordinates
00000B86:	RET

00000B87:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00000B8A:	JR -39h

00000B8C:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00000B8F:	JR -1Bh

00000B91:	LD A,(117Fh)
00000B94:	XOR 01h
00000B96:	LD (117Fh),A
00000B99:	JP 06CAh	; BELL

00000B9C:	LD DE,0000h
00000B9F:	LD HL,0B48h
00000BA2:	LD (0BD3h),HL
00000BA5:	CALL 0BCAh
00000BA8:	RET Z
00000BA9:	JR C,-06h
00000BAB:	CALL 0BCAh
00000BAE:	RET Z
00000BAF:	JR NC,-06h
00000BB1:	JP 0B6Bh
00000BB4:	LD DE,0F1Fh
00000BB7:	LD HL,0B6Bh
00000BBA:	LD (0BD3h),HL
00000BBD:	CALL 0BCAh
00000BC0:	RET Z
00000BC1:	JR NC,-06h
00000BC3:	CALL 0BCAh
00000BC6:	RET Z
00000BC7:	JR C,-06h
00000BC9:	RET

00000BCA:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00000BCD:	OR A
00000BCE:	SBC HL,DE
00000BD0:	RET Z
00000BD1:	PUSH DE
00000BD2:	CALL 0B6Bh
00000BD5:	CALL 0938h
00000BD8:	CALL 0794h
00000BDB:	POP DE
00000BDC:	CP 30h
00000BDE:	RET C
00000BDF:	CP 3Ah
00000BE1:	CCF
00000BE2:	RET NC
00000BE3:	CP 41h
00000BE5:	RET C
00000BE6:	CP 80h
00000BE8:	JR C,+02h
00000BEA:	OR A
00000BEB:	RET
00000BEC:	AND 1Fh
00000BEE:	JR Z,+04h
00000BF0:	CP 1Bh
00000BF2:	CCF
00000BF3:	RET NC
00000BF4:	AND 01h
00000BF6:	RET
00000BF7:	LD D,00h
00000BF9:	JR +02h
00000BFB:	LD D,01h
00000BFD:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00000C00:	LD H,00h
00000C02:	LD BC,1246h
00000C05:	ADD HL,BC
00000C06:	LD (HL),D
00000C07:	RET

00000C08:	CALL 0B6Bh
00000C0B:	LD A,(11EDh)		; CSRXY: X,Y text coordinates
00000C0E:	CP 1Fh
00000C10:	RET Z
00000C11:	LD L,A
00000C12:	LD H,00h
00000C14:	LD BC,1246h
00000C17:	ADD HL,BC
00000C18:	LD A,(HL)
00000C19:	OR A
00000C1A:	JR Z,-14h
00000C1C:	RET
00000C1D:	CALL 07C5h
00000C20:	LD H,E
00000C21:	LD L,00h
00000C23:	JR +10h
00000C25:	CALL 07D3h
00000C28:	LD A,10h
00000C2A:	SUB E
00000C2B:	LD B,A
00000C2C:	INC HL
00000C2D:	LD (HL),00h
00000C2F:	INC HL
00000C30:	DJNZ -05h
00000C32:	LD HL,1000h
00000C35:	CALL 093Bh
00000C38:	DEC BC
00000C39:	PUSH BC
00000C3A:	CALL 0938h
00000C3D:	POP HL
00000C3E:	LD D,B
00000C3F:	LD E,C
00000C40:	OR A
00000C41:	SBC HL,DE
00000C43:	INC HL
00000C44:	LD D,00h
00000C46:	LD A,(1180h)		; COLORF
00000C49:	AND 03h
00000C4B:	LD E,A
00000C4C:	OUT (C),D
00000C4E:	SET 3,B
00000C50:	OUT (C),E
00000C52:	RES 3,B
00000C54:	INC BC
00000C55:	DEC HL
00000C56:	LD A,H
00000C57:	OR L
00000C58:	JR NZ,-0Eh
00000C5A:	RET

; BRKEY
00000C5B:	LD A,80h
00000C5D:	INA (00h)
00000C5F:	AND 12h
00000C61:	RET

; ASCGET:
00000C62:	PUSH BC
00000C63:	PUSH DE
00000C64:	PUSH HL
00000C65:	LD HL,(1204h)
00000C68:	LD A,L
00000C69:	CP H
00000C6A:	JR Z,+12h
00000C6C:	INC A
00000C6D:	AND 3Fh
00000C6F:	LD (1204h),A
00000C72:	LD L,A
00000C73:	LD H,00h
00000C75:	LD DE,1206h
00000C78:	ADD HL,DE
00000C79:	LD A,(HL)
00000C7A:	POP HL
00000C7B:	POP DE
00000C7C:	POP BC
00000C7D:	RET
00000C7E:	LD A,01h
00000C80:	OR A
00000C81:	JR NZ,+24h
00000C83:	CALL 0D7Ah
00000C86:	CALL 0C5Bh	; BRKEY
00000C89:	JR NZ,+07h
00000C8B:	CALL 0DE1h
00000C8E:	LD A,03h
00000C90:	JR -18h
00000C92:	CALL 0D7Ah
00000C95:	JR Z,+0Ah
00000C97:	CALL 0DBBh
00000C9A:	JR NZ,+29h
00000C9C:	CALL 0DD1h
00000C9F:	JR Z,+16h
00000CA1:	CALL 0DE1h
00000CA4:	XOR A
00000CA5:	JR -2Dh
00000CA7:	CALL 0D3Ch
00000CAA:	LD C,A
00000CAB:	LD A,80h
00000CAD:	INA (00h)
00000CAF:	AND 12h
00000CB1:	JR Z,-28h
00000CB3:	LD A,C
00000CB4:	OR A
00000CB5:	JR Z,+0Eh
00000CB7:	CALL 0DE1h
00000CBA:	LD HL,FFFEh
00000CBD:	LD A,00h
00000CBF:	LD (HL),A
00000CC0:	LD HL,001Eh
00000CC3:	JR +06h
00000CC5:	CALL 0DE1h
00000CC8:	LD HL,00C8h
00000CCB:	LD (0D57h),HL
00000CCE:	LD HL,11F9h
00000CD1:	LD D,00h
00000CD3:	LD C,09h
00000CD5:	LD B,08h
00000CD7:	LD A,(HL)
00000CD8:	CPL
00000CD9:	OR A
00000CDA:	JR Z,+09h
00000CDC:	RRCA
00000CDD:	JP C,0E35h
00000CE0:	INC D
00000CE1:	DJNZ -07h
00000CE3:	JR +04h
00000CE5:	LD A,D
00000CE6:	ADD 08h
00000CE8:	LD D,A
00000CE9:	INC HL
00000CEA:	DEC C
00000CEB:	JR NZ,-18h
00000CED:	LD HL,(1204h)
00000CF0:	LD A,L
00000CF1:	CP H
00000CF2:	JP Z,0CA4h
00000CF5:	JP 0C6Ch
00000CF8:	CALL 0938h
00000CFB:	SET 3,B
00000CFD:	LD (0D15h),BC
00000D01:	IN A,(C)
00000D03:	LD (0D18h),A
00000D06:	OR 01h
00000D08:	OUT (C),A
00000D0A:	LD (0D2Ah),A
00000D0D:	LD A,(0036h)
00000D10:	LD (0D20h),A
00000D13:	RET
00000D14:	LD BC,0000h
00000D17:	LD A,00h
00000D19:	AND FEh
00000D1B:	LD E,A
00000D1C:	LD A,(0036h)
00000D1F:	SUB 00h
00000D21:	AND 10h
00000D23:	LD A,01h
00000D25:	JR Z,+01h
00000D27:	XOR A
00000D28:	OR E
00000D29:	CP 00h
00000D2B:	RET Z
00000D2C:	OUT (C),A
00000D2E:	LD (0D2Ah),A
00000D31:	RET
00000D32:	LD BC,(0D15h)
00000D36:	LD A,(0D18h)
00000D39:	OUT (C),A
00000D3B:	RET
00000D3C:	PUSH BC
00000D3D:	PUSH DE
00000D3E:	PUSH HL
00000D3F:	CALL 0CF8h
00000D42:	CALL 0D14h
00000D45:	CALL 0D7Ah
00000D48:	JR Z,+1Bh
00000D4A:	CALL 0DBBh
00000D4D:	LD A,00h
00000D4F:	JR NZ,+20h
00000D51:	CALL 0DD1h
00000D54:	JR NZ,-14h
00000D56:	LD HL,0000h
00000D59:	DEC HL
00000D5A:	LD (0D57h),HL
00000D5D:	LD A,H
00000D5E:	OR L
00000D5F:	JR NZ,-1Fh
00000D61:	LD A,01h
00000D63:	JR +0Ch
00000D65:	CALL 0DE1h
00000D68:	CALL 0D14h
00000D6B:	CALL 0D7Ah
00000D6E:	JR Z,-08h
00000D70:	XOR A
00000D71:	PUSH AF
00000D72:	CALL 0D32h
00000D75:	POP AF
00000D76:	POP HL
00000D77:	POP DE
00000D78:	POP BC
00000D79:	RET
00000D7A:	CALL 0D8Ch
00000D7D:	LD B,04h
00000D7F:	CALL 0D8Ch
00000D82:	BIT 1,E
00000D84:	JR NZ,-09h
00000D86:	DJNZ -09h
00000D88:	LD A,E
00000D89:	AND 01h
00000D8B:	RET
00000D8C:	LD HL,11F9h
00000D8F:	PUSH BC
00000D90:	LD BC,8009h
00000D93:	LD DE,0900h
00000D96:	IN A,(C)
00000D98:	XOR (HL)
00000D99:	JR Z,+02h
00000D9B:	SET 1,E
00000D9D:	XOR (HL)
00000D9E:	LD (HL),A
00000D9F:	CPL
00000DA0:	OR A
00000DA1:	JR Z,+02h
00000DA3:	SET 0,E
00000DA5:	INC HL
00000DA6:	DEC BC
00000DA7:	DEC D
00000DA8:	JR NZ,-14h
00000DAA:	IN A,(C)
00000DAC:	XOR (HL)
00000DAD:	JR Z,+02h
00000DAF:	SET 1,E
00000DB1:	XOR (HL)
00000DB2:	LD (HL),A
00000DB3:	AND 12h
00000DB5:	JR NZ,+02h
00000DB7:	SET 0,E
00000DB9:	POP BC
00000DBA:	RET
00000DBB:	LD HL,11EFh
00000DBE:	LD DE,11F9h
00000DC1:	LD B,09h
00000DC3:	LD A,(DE)
00000DC4:	CPL
00000DC5:	AND (HL)
00000DC6:	RET NZ
00000DC7:	INC DE
00000DC8:	INC HL
00000DC9:	DJNZ -08h
00000DCB:	LD A,(DE)
00000DCC:	CPL
00000DCD:	AND (HL)
00000DCE:	AND 10h
00000DD0:	RET
00000DD1:	LD HL,11EFh
00000DD4:	LD DE,11F9h
00000DD7:	LD B,0Ah
00000DD9:	LD A,(DE)
00000DDA:	XOR (HL)
00000DDB:	RET NZ
00000DDC:	INC DE
00000DDD:	INC HL
00000DDE:	DJNZ -07h
00000DE0:	RET
00000DE1:	LD HL,11F9h
00000DE4:	LD DE,11EFh
00000DE7:	LD B,09h
00000DE9:	LD A,(DE)
00000DEA:	CPL
00000DEB:	OR (HL)
00000DEC:	LD C,(HL)
00000DED:	LD (HL),A
00000DEE:	LD A,C
00000DEF:	LD (DE),A
00000DF0:	INC DE
00000DF1:	INC HL
00000DF2:	DJNZ -0Bh
00000DF4:	LD A,(HL)
00000DF5:	LD (DE),A
00000DF6:	LD DE,11F9h
00000DF9:	LD HL,11EFh
00000DFC:	LD BC,0900h
00000DFF:	LD A,(DE)
00000E00:	CPL
00000E01:	OR A
00000E02:	JR Z,+0Ah
00000E04:	DEC C
00000E05:	JR NZ,+0Ch
00000E07:	OR (HL)
00000E08:	LD (HL),A
00000E09:	LD A,FFh
00000E0B:	LD (DE),A
00000E0C:	LD C,01h
00000E0E:	INC DE
00000E0F:	INC HL
00000E10:	DJNZ -13h
00000E12:	RET
00000E13:	PUSH BC
00000E14:	LD BC,0801h
00000E17:	RRCA
00000E18:	JR C,+0Bh
00000E1A:	RLC C
00000E1C:	DJNZ -07h
00000E1E:	POP BC
00000E1F:	JR -15h
00000E21:	RRCA
00000E22:	CALL C,0E2Ch
00000E25:	RLC C
00000E27:	DJNZ -08h
00000E29:	POP BC
00000E2A:	JR -20h
00000E2C:	PUSH AF
00000E2D:	LD A,C
00000E2E:	OR (HL)
00000E2F:	LD (HL),A
00000E30:	LD A,(DE)
00000E31:	OR C
00000E32:	LD (DE),A
00000E33:	POP AF
00000E34:	RET
00000E35:	LD A,(HL)
00000E36:	LD (0CBBh),HL
00000E39:	LD (0CBEh),A
00000E3C:	LD C,D
00000E3D:	LD B,00h
00000E3F:	LD HL,1306h		; KEYDT1 - first keyboard table
00000E42:	LD A,(1202h)
00000E45:	BIT 1,A
00000E47:	JR NZ,+03h
00000E49:	LD HL,134Eh		; KEYDT2 - second keyboard table
00000E4C:	ADD HL,BC
00000E4D:	LD C,(HL)
00000E4E:	LD B,A
00000E4F:	BIT 2,B
00000E51:	JR NZ,+09h
00000E53:	LD A,C
00000E54:	SUB 40h
00000E56:	JR C,+17h
00000E58:	AND 1Fh
00000E5A:	JR +0Dh
00000E5C:	BIT 6,B
00000E5E:	JR NZ,+1Ah
00000E60:	LD A,C
00000E61:	SUB 40h
00000E63:	JR C,+07h
00000E65:	AND 1Fh
00000E67:	ADD 80h
00000E69:	CALL 0EB1h
00000E6C:	JP 0CEDh
00000E6F:	ADD 10h
00000E71:	CP 04h		; single precision variable type?
00000E73:	JR NC,-09h
00000E75:	LD (1180h),A		; COLORF
00000E78:	JR -0Eh
00000E7A:	LD A,C
00000E7B:	CP F0h
00000E7D:	JR NC,+16h
00000E7F:	LD A,(1203h)
00000E82:	OR A
00000E83:	LD A,C
00000E84:	JR Z,-1Dh
00000E86:	CP 41h
00000E88:	JR C,-21h
00000E8A:	AND 1Fh
00000E8C:	CP 1Bh
00000E8E:	LD A,C
00000E8F:	JR NC,-28h
00000E91:	XOR 20h
00000E93:	JR -2Ch
00000E95:	SUB F1h
00000E97:	LD L,A
00000E98:	LD H,00h
00000E9A:	ADD HL,HL
00000E9B:	ADD HL,HL
00000E9C:	ADD HL,HL
00000E9D:	ADD HL,HL
00000E9E:	LD BC,1266h		; FUNBUF - FN key configuration
00000EA1:	ADD HL,BC
00000EA2:	LD B,(HL)
00000EA3:	INC HL
00000EA4:	LD A,B
00000EA5:	OR A
00000EA6:	JR Z,-3Ch
00000EA8:	LD A,(HL)
00000EA9:	CALL 0EB1h
00000EAC:	INC HL
00000EAD:	DJNZ -07h
00000EAF:	JR -45h
00000EB1:	PUSH HL
00000EB2:	PUSH BC
00000EB3:	LD C,A
00000EB4:	LD HL,(1204h)
00000EB7:	LD A,H
00000EB8:	INC A
00000EB9:	AND 3Fh
00000EBB:	CP L
00000EBC:	JR Z,+0Ch
00000EBE:	LD (1205h),A
00000EC1:	LD L,A
00000EC2:	LD H,00h
00000EC4:	LD A,C
00000EC5:	LD BC,1206h
00000EC8:	ADD HL,BC
00000EC9:	LD (HL),A
00000ECA:	POP BC
00000ECB:	POP HL
00000ECC:	RET

; MUSIC
00000ECD:	PUSH DE
00000ECE:	LD A,(DE)
00000ECF:	CP 3Ah
00000ED1:	INC DE
00000ED2:	JR Z,+04h
00000ED4:	DJNZ -08h
00000ED6:	JR +0Eh
00000ED8:	LD L,E
00000ED9:	LD H,D
00000EDA:	DJNZ +02h
00000EDC:	JR +0Bh
00000EDE:	LD A,(DE)
00000EDF:	INC DE
00000EE0:	CP 3Ah
00000EE2:	JR NZ,-0Ah
00000EE4:	JR +06h
00000EE6:	LD HL,1100h
00000EE9:	LD DE,1100h
00000EEC:	POP BC
00000EED:	PUSH BC
00000EEE:	EXX
00000EEF:	POP DE
00000EF0:	LD BC,1111h
00000EF3:	CALL 0F2Eh
00000EF6:	PUSH DE
00000EF7:	EXX
00000EF8:	POP BC
00000EF9:	PUSH HL
00000EFA:	EXX
00000EFB:	POP DE
00000EFC:	LD BC,1119h
00000EFF:	CALL 0F2Eh
00000F02:	PUSH DE
00000F03:	EXX
00000F04:	POP HL
00000F05:	PUSH DE
00000F06:	EXX
00000F07:	POP DE
00000F08:	LD BC,1121h
00000F0B:	CALL 0F2Eh
00000F0E:	PUSH DE
00000F0F:	EXX
00000F10:	POP DE
00000F11:	EXX
00000F12:	CALL 1077h
00000F15:	LD BC,1111h
00000F18:	CALL 103Bh
00000F1B:	LD BC,1119h
00000F1E:	CALL 103Bh
00000F21:	LD BC,1121h
00000F24:	CALL 103Bh
00000F27:	EXX
00000F28:	CALL 1052h
00000F2B:	JR NZ,-40h
00000F2D:	RET
00000F2E:	LD A,(BC)
00000F2F:	OR A
00000F30:	RET NZ
00000F31:	DEC BC
00000F32:	LD A,(DE)
00000F33:	CP 3Ah
00000F35:	RET Z
00000F36:	CP 56h
00000F38:	JR NZ,+31h
00000F3A:	INC DE
00000F3B:	LD A,(DE)
00000F3C:	SUB 30h
00000F3E:	JR C,-0Eh
00000F40:	CP 0Ah
00000F42:	JR NC,-12h
00000F44:	INC DE
00000F45:	CP 01h
00000F47:	JR NZ,+10h
00000F49:	LD A,(DE)
00000F4A:	SUB 30h
00000F4C:	JR C,+09h
00000F4E:	CP 06h
00000F50:	JR NC,+05h
00000F52:	ADD 0Ah
00000F54:	INC DE
00000F55:	JR +02h
00000F57:	LD A,01h
00000F59:	LD L,A
00000F5A:	INC BC
00000F5B:	INC BC
00000F5C:	LD A,(BC)
00000F5D:	DEC BC
00000F5E:	DEC BC
00000F5F:	PUSH BC
00000F60:	LD BC,4000h
00000F63:	OUT (C),A
00000F65:	INC C
00000F66:	OUT (C),L
00000F68:	POP BC
00000F69:	JR -39h
00000F6B:	CP 4Fh
00000F6D:	JP NZ,0F7Eh
00000F70:	INC DE
00000F71:	LD A,(DE)
00000F72:	SUB 31h
00000F74:	JR C,-44h
00000F76:	CP 08h
00000F78:	JR NC,-48h
00000F7A:	LD (BC),A
00000F7B:	INC DE
00000F7C:	JR -4Ch
00000F7E:	EX AF,AF'
00000F7F:	LD A,(BC)
00000F80:	EX AF,AF'
00000F81:	LD A,(DE)
00000F82:	CP 2Bh
00000F84:	JR NZ,+0Ah
00000F86:	INC DE
00000F87:	EX AF,AF'
00000F88:	CP 07h
00000F8A:	JR Z,+01h
00000F8C:	INC A
00000F8D:	EX AF,AF'
00000F8E:	JR -0Fh
00000F90:	CP 2Dh
00000F92:	JR NZ,+08h
00000F94:	INC DE
00000F95:	EX AF,AF'
00000F96:	OR A
00000F97:	JR Z,+01h
00000F99:	DEC A
00000F9A:	JR -0Fh
00000F9C:	LD HL,1123h
00000F9F:	CP 23h
00000FA1:	JR NZ,+05h
00000FA3:	INC DE
00000FA4:	LD HL,1131h
00000FA7:	LD A,(DE)
00000FA8:	INC DE
00000FA9:	CP 52h
00000FAB:	JR Z,+61h
00000FAD:	SUB 41h
00000FAF:	JP C,0F32h
00000FB2:	CP 07h
00000FB4:	JP NC,0F32h
00000FB7:	PUSH DE
00000FB8:	LD E,A
00000FB9:	LD D,00h
00000FBB:	EX DE,HL
00000FBC:	ADD HL,HL
00000FBD:	ADD HL,DE
00000FBE:	DEC BC
00000FBF:	DEC BC
00000FC0:	LD A,(HL)
00000FC1:	INC HL
00000FC2:	LD H,(HL)
00000FC3:	LD L,A
00000FC4:	EX AF,AF'
00000FC5:	OR A
00000FC6:	JR Z,+07h
00000FC8:	RR H
00000FCA:	RR L
00000FCC:	DEC A
00000FCD:	JR NZ,-0Ah
00000FCF:	EX DE,HL
00000FD0:	LD L,C
00000FD1:	LD H,B
00000FD2:	LD (HL),D
00000FD3:	DEC HL
00000FD4:	LD (HL),E
00000FD5:	DEC HL
00000FD6:	DEC HL
00000FD7:	POP DE
00000FD8:	LD A,(DE)
00000FD9:	SUB 30h
00000FDB:	JR C,+09h
00000FDD:	CP 0Ah
00000FDF:	JR NC,+05h
00000FE1:	CALL 1088h
00000FE4:	INC DE
00000FE5:	LD (HL),A
00000FE6:	PUSH DE
00000FE7:	LD E,(HL)
00000FE8:	INC HL
00000FE9:	LD D,(HL)
00000FEA:	INC HL
00000FEB:	LD BC,4000h
00000FEE:	LD A,(HL)
00000FEF:	OUT (C),D
00000FF1:	INC C
00000FF2:	OUT (C),A
00000FF4:	INC HL
00000FF5:	DEC C
00000FF6:	INC D
00000FF7:	LD A,(HL)
00000FF8:	OUT (C),D
00000FFA:	INC C
00000FFB:	OUT (C),A
00000FFD:	INC HL
00000FFE:	DEC C
00000FFF:	LD D,07h
00001001:	OUT (C),D
00001003:	INC C
00001004:	IN A,(C)
00001006:	AND (HL)
00001007:	OUT (C),A
00001009:	INC HL
0000100A:	INC HL
0000100B:	LD (HL),E
0000100C:	POP DE
0000100D:	RET
0000100E:	DEC BC
0000100F:	DEC BC
00001010:	DEC BC
00001011:	DEC BC
00001012:	DEC BC
00001013:	LD A,(DE)
00001014:	SUB 30h
00001016:	JR C,+09h
00001018:	CP 0Ah
0000101A:	JR NC,+05h
0000101C:	CALL 1088h
0000101F:	INC DE
00001020:	LD (BC),A
00001021:	LD A,(BC)
00001022:	INC BC
00001023:	INC BC
00001024:	INC BC
00001025:	INC BC
00001026:	INC BC
00001027:	INC BC
00001028:	LD (BC),A
00001029:	DEC BC
0000102A:	DEC BC
0000102B:	LD A,(BC)
0000102C:	CPL
0000102D:	LD BC,4000h
00001030:	LD L,07h
00001032:	OUT (C),L
00001034:	INC C
00001035:	IN H,(C)
00001037:	OR H
00001038:	OUT (C),A
0000103A:	RET
0000103B:	LD A,(BC)
0000103C:	OR A
0000103D:	JR Z,-16h
0000103F:	DEC A
00001040:	LD (BC),A
00001041:	RET
00001042:	LD BC,4000h
00001045:	LD L,07h
00001047:	OUT (C),L
00001049:	INC C
0000104A:	IN A,(C)
0000104C:	OR 07h
0000104E:	OUT (C),A
00001050:	XOR A
00001051:	RET
00001052:	LD A,80h
00001054:	INA (00h)
00001056:	AND 12h
00001058:	JR Z,-18h
0000105A:	LD A,(BC)
0000105B:	CP 3Ah
0000105D:	RET NZ
0000105E:	LD A,(DE)
0000105F:	CP 3Ah
00001061:	RET NZ
00001062:	LD A,(HL)
00001063:	CP 3Ah
00001065:	RET NZ
00001066:	LD A,(1111h)
00001069:	OR A
0000106A:	RET NZ
0000106B:	LD A,(1119h)
0000106E:	OR A
0000106F:	RET NZ
00001070:	LD A,(1121h)
00001073:	OR A
00001074:	RET NZ
00001075:	JR -35h
00001077:	LD HL,(10FEh)
0000107A:	LD DE,0098h
0000107D:	DEC DE
0000107E:	LD A,D
0000107F:	OR E
00001080:	JR NZ,-05h
00001082:	DEC HL
00001083:	LD A,H
00001084:	OR L
00001085:	JR NZ,-0Dh
00001087:	RET
00001088:	PUSH BC
00001089:	PUSH HL
0000108A:	LD C,A
0000108B:	LD B,00h
0000108D:	LD HL,1101h
00001090:	ADD HL,BC
00001091:	LD A,(HL)
00001092:	POP HL
00001093:	POP BC
00001094:	RET

; XTEMPO
00001095:	LD (10FEh),A
00001098:	RET

; SOUNDS
00001099:	LD A,E
0000109A:	OR A
0000109B:	LD HL,00FEh
0000109E:	JR Z,+09h
000010A0:	DEC A
000010A1:	LD HL,02FDh
000010A4:	JR Z,+03h
000010A6:	LD HL,04FBh
000010A9:	LD A,D
000010AA:	AND 07h
000010AC:	JR Z,+40h
000010AE:	PUSH HL
000010AF:	LD BC,1123h
000010B2:	BIT 3,D
000010B4:	JR Z,+03h
000010B6:	LD BC,1131h
000010B9:	DEC A
000010BA:	LD L,A
000010BB:	LD H,00h
000010BD:	ADD HL,HL
000010BE:	ADD HL,BC
000010BF:	LD A,D
000010C0:	LD E,(HL)
000010C1:	INC HL
000010C2:	LD D,(HL)
000010C3:	RRCA
000010C4:	RRCA
000010C5:	RRCA
000010C6:	RRCA
000010C7:	AND 0Fh
000010C9:	JR Z,+07h
000010CB:	SRL D
000010CD:	RR E
000010CF:	DEC A
000010D0:	JR NZ,-07h
000010D2:	POP HL
000010D3:	LD BC,4000h
000010D6:	OUT (C),H
000010D8:	INC C
000010D9:	OUT (C),E
000010DB:	INC H
000010DC:	DEC C
000010DD:	OUT (C),H
000010DF:	INC C
000010E0:	OUT (C),D
000010E2:	DEC C
000010E3:	LD A,07h
000010E5:	OUT (C),A
000010E7:	INC C
000010E8:	IN A,(C)
000010EA:	AND L
000010EB:	OUT (C),A
000010ED:	RET
000010EE:	LD BC,4000h
000010F1:	LD A,07h
000010F3:	OUT (C),A
000010F5:	INC C
000010F6:	IN H,(C)
000010F8:	LD A,L
000010F9:	CPL
000010FA:	OR H
000010FB:	OUT (C),A
000010FD:	RET

000010FE:	LD A,00h
00001100:	LD A,(0201h)
00001103:	INC BC
00001104:	INC B
00001105:	LD B,08h
00001107:	INC C
00001108:	DJNZ +18h
0000110A:	JR NZ,+08h
0000110C:	NOP
0000110D:	NOP
0000110E:	NOP
0000110F:	CP 03h
00001111:	NOP
00001112:	EX AF,AF'
00001113:	EX AF,AF'
00001114:	LD (BC),A
00001115:	NOP
00001116:	NOP
00001117:	INC BC
00001119:	NOP
0000111A:	ADD HL,BC
0000111B:	EX AF,AF'
0000111C:	INC B
0000111D:	NOP
0000111E:	NOP
0000111F:	EI
00001120:	INC BC
00001121:	NOP
00001122:	LD A,(BC)
00001123:	JP P,1407h
00001126:	RLCA
00001127:	LD E,L
00001128:	DEC C
00001129:	RST 20h
0000112A:	DEC BC
0000112B:	SBC E
0000112C:	LD A,(BC)
0000112D:	LD (BC),A
0000112E:	LD A,(BC)
0000112F:	EX DE,HL
00001130:	EX AF,AF'
00001131:	ADD B
00001132:	RLCA
00001133:	INC D
00001134:	RLCA
00001135:	SBC H
00001136:	INC C
00001137:	INC A
00001138:	DEC BC
00001139:	SBC E
0000113A:	LD A,(BC)
0000113B:	LD (HL),E
0000113C:	ADD HL,BC
0000113D:	LD L,E
0000113E:	EX AF,AF'
0000113F:	CALL Z,CC0Eh
00001142:	LD C,9Ch
00001144:	DEC BC
00001145:	LD H,D
00001146:	DEC BC
00001147:	JP PE,1D09h
0000114A:	INC C
0000114B:	OR H
0000114C:	DEC BC
0000114D:	SUB C
0000114E:	DEC BC
0000114F:	ADC (HL)
00001150:	LD A,(BC)
00001151:	EX AF,AF'
00001152:	INC C
00001153:	CALL Z,030Eh
00001156:	DEC BC
00001157:	PUSH DE
00001158:	LD A,(BC)
00001159:	LD H,D
0000115A:	DEC BC
0000115B:	CALL Z,CC0Eh
0000115E:	LD C,CCh
00001160:	LD C,CCh
00001162:	LD C,09h
00001164:	DEC BC
00001165:	CALL Z,FB0Eh
00001168:	DEC BC
00001169:	SUB C
0000116A:	ADD HL,BC
0000116B:	CCF
0000116C:	DEC BC
0000116D:	LD B,L
0000116E:	DEC BC
0000116F:	CALL Z,F70Eh
00001172:	DEC BC
00001173:	DEC H
00001174:	INC C
00001175:	CALL Z,6B0Eh
00001178:	DEC BC
00001179:	LD C,B
0000117A:	DEC BC
0000117B:	ADD A
0000117C:	DEC BC
0000117D:	ADC H
0000117E:	DEC BC
0000117F:	NOP
; COLORF
00001180:	NOP
00001181:	NOP
00001182:	NOP
00001183:	NOP
00001184:	NOP
00001185:	NOP
00001186:	NOP
00001187:	NOP
00001188:	NOP
00001189:	NOP
0000118A:	NOP
0000118B:	NOP
0000118C:	NOP
0000118D:	NOP
0000118E:	NOP
0000118F:	NOP
00001190:	NOP
00001191:	NOP
00001192:	NOP
00001193:	NOP
00001194:	NOP
00001195:	NOP
00001196:	NOP
00001197:	NOP
00001198:	NOP
00001199:	NOP
0000119A:	NOP
0000119B:	NOP
0000119C:	NOP
0000119D:	NOP
0000119E:	NOP
0000119F:	NOP
000011A0:	NOP
000011A1:	NOP
000011A2:	NOP
000011A3:	NOP
000011A4:	NOP
000011A5:	NOP
000011A6:	NOP
000011A7:	NOP
000011A8:	NOP
000011A9:	NOP
000011AA:	NOP
000011AB:	NOP
000011AC:	NOP
000011AD:	NOP
000011AE:	NOP
000011AF:	NOP
000011B0:	NOP
000011B1:	NOP
000011B2:	NOP
000011B3:	NOP
000011B4:	NOP
000011B5:	NOP
000011B6:	NOP
000011B7:	NOP
000011B8:	NOP
000011B9:	NOP
000011BA:	NOP
000011BB:	NOP
000011BC:	NOP
000011BD:	NOP
000011BE:	NOP
000011BF:	NOP
000011C0:	NOP
000011C1:	NOP
000011C2:	NOP
000011C3:	NOP
000011C4:	NOP
000011C5:	NOP
000011C6:	NOP
000011C7:	NOP
000011C8:	NOP
000011C9:	NOP
000011CA:	NOP
000011CB:	NOP
000011CC:	NOP
000011CD:	NOP
000011CE:	NOP
000011CF:	NOP
000011D0:	NOP
000011D1:	NOP
000011D2:	NOP
000011D3:	NOP
000011D4:	NOP
000011D5:	NOP
000011D6:	NOP
000011D7:	NOP
000011D8:	NOP
000011D9:	NOP
000011DA:	NOP
000011DB:	NOP
000011DC:	NOP
000011DD:	NOP
000011DE:	NOP
000011DF:	NOP
000011E0:	NOP
000011E1:	NOP
000011E2:	NOP
000011E3:	NOP
000011E4:	NOP
000011E5:	NOP
000011E6:	NOP
000011E7:	NOP
000011E8:	NOP
000011E9:	NOP
000011EA:	NOP
000011EB:	LD BC,0000h
; Y text coordinate
000011EE:	NOP
000011EF:	NOP
000011F0:	NOP
000011F1:	NOP
000011F2:	NOP
000011F3:	NOP
000011F4:	NOP
000011F5:	NOP
000011F6:	NOP
000011F7:	NOP
000011F8:	NOP
000011F9:	NOP
000011FA:	NOP
000011FB:	NOP
000011FC:	NOP
000011FD:	NOP
000011FE:	NOP
000011FF:	NOP
00001200:	NOP
00001201:	NOP
00001202:	RST 38h
00001203:	NOP
00001204:	NOP
00001205:	NOP
00001206:	NOP
00001207:	NOP
00001208:	NOP
00001209:	NOP
0000120A:	NOP
0000120B:	NOP
0000120C:	NOP
0000120D:	NOP
0000120E:	NOP
0000120F:	NOP
00001210:	NOP
00001211:	NOP
00001212:	NOP
00001213:	NOP
00001214:	NOP
00001215:	NOP
00001216:	NOP
00001217:	NOP
00001218:	NOP
00001219:	NOP
0000121A:	NOP
0000121B:	NOP
0000121C:	NOP
0000121D:	NOP
0000121E:	NOP
0000121F:	NOP
00001220:	NOP
00001221:	NOP
00001222:	NOP
00001223:	NOP
00001224:	NOP
00001225:	NOP
00001226:	NOP
00001227:	NOP
00001228:	NOP
00001229:	NOP
0000122A:	NOP
0000122B:	NOP
0000122C:	NOP
0000122D:	NOP
0000122E:	NOP
0000122F:	NOP
00001230:	NOP
00001231:	NOP
00001232:	NOP
00001233:	NOP
00001234:	NOP
00001235:	NOP
00001236:	NOP
00001237:	NOP
00001238:	NOP
00001239:	NOP
0000123A:	NOP
0000123B:	NOP
0000123C:	NOP
0000123D:	NOP
0000123E:	NOP
0000123F:	NOP
00001240:	NOP
00001241:	NOP
00001242:	NOP
00001243:	NOP
00001244:	NOP
00001245:	NOP
00001246:	NOP
00001247:	NOP
00001248:	NOP
00001249:	NOP
0000124A:	NOP
0000124B:	NOP
0000124C:	NOP
0000124D:	NOP
0000124E:	NOP
0000124F:	NOP
00001250:	NOP
00001251:	NOP
00001252:	NOP
00001253:	NOP
00001254:	NOP
00001255:	NOP
00001256:	NOP
00001257:	NOP
00001258:	NOP
00001259:	NOP
0000125A:	NOP
0000125B:	NOP
0000125C:	NOP
0000125D:	NOP
0000125E:	NOP
0000125F:	NOP
00001260:	NOP
00001261:	NOP
00001262:	NOP
00001263:	NOP
00001264:	NOP
00001265:	NOP

; FUNBUF - FN key configuration
00001266:	DEC B
00001267:	LD B,C
00001268:	LD D,L
00001269:	LD D,H
0000126A:	LD C,A
0000126B:	DEC C
0000126C:	NOP
0000126D:	NOP
0000126E:	NOP
0000126F:	NOP
00001270:	NOP
00001271:	NOP
00001272:	NOP
00001273:	NOP
00001274:	NOP
00001275:	NOP
00001276:	LD B,53h
00001278:	LD B,E
00001279:	LD D,D
0000127A:	LD B,L
0000127B:	LD B,L
0000127C:	LD C,(HL)
0000127D:	NOP
0000127E:	NOP
0000127F:	NOP
00001280:	NOP
00001281:	NOP
00001282:	NOP
00001283:	NOP
00001284:	NOP
00001285:	NOP
00001286:	INC BC
00001287:	LD C,E
00001288:	LD B,L
00001289:	LD E,C
0000128A:	NOP
0000128B:	NOP
0000128C:	NOP
0000128D:	NOP
0000128E:	NOP
0000128F:	NOP
00001290:	NOP
00001291:	NOP
00001292:	NOP
00001293:	NOP
00001294:	NOP
00001295:	NOP
00001296:	DEC B
00001297:	LD C,H
00001298:	LD C,C
00001299:	LD D,E
0000129A:	LD D,H
0000129B:	DEC C
0000129C:	NOP
0000129D:	NOP
0000129E:	NOP
0000129F:	NOP
000012A0:	NOP
000012A1:	NOP
000012A2:	NOP
000012A3:	NOP
000012A4:	NOP
000012A5:	NOP
000012A6:	INC B
000012A7:	LD D,D
000012A8:	LD D,L
000012A9:	LD C,(HL)
000012AA:	DEC C
000012AB:	NOP
000012AC:	NOP
000012AD:	NOP
000012AE:	NOP
000012AF:	NOP
000012B0:	NOP
000012B1:	NOP
000012B2:	NOP
000012B3:	NOP
000012B4:	NOP
000012B5:	NOP
000012B6:	DEC B
000012B7:	LD C,H
000012B8:	LD C,A
000012B9:	LD B,C
000012BA:	LD B,H
000012BB:	DEC C
000012BC:	NOP
000012BD:	NOP
000012BE:	NOP
000012BF:	NOP
000012C0:	NOP
000012C1:	NOP
000012C2:	NOP
000012C3:	NOP
000012C4:	NOP
000012C5:	NOP
000012C6:	DEC B
000012C7:	LD B,D
000012C8:	LD B,L
000012C9:	LD B,L
000012CA:	LD D,B
000012CB:	DEC C
000012CC:	NOP
000012CD:	NOP
000012CE:	NOP
000012CF:	NOP
000012D0:	NOP
000012D1:	NOP
000012D2:	NOP
000012D3:	NOP
000012D4:	NOP
000012D5:	NOP
000012D6:	DEC B
000012D7:	LD B,E
000012D8:	LD C,B
000012D9:	LD D,D
000012DA:	INC H
000012DB:	JR Z,+00h
000012DD:	NOP
000012DE:	NOP
000012DF:	NOP
000012E0:	NOP
000012E1:	NOP
000012E2:	NOP
000012E3:	NOP
000012E4:	NOP
000012E5:	NOP
000012E6:	INC B
000012E7:	LD B,L
000012E8:	LD B,H
000012E9:	LD C,C
000012EA:	LD D,H
000012EB:	NOP
000012EC:	NOP
000012ED:	NOP
000012EE:	NOP
000012EF:	NOP
000012F0:	NOP
000012F1:	NOP
000012F2:	NOP
000012F3:	NOP
000012F4:	NOP
000012F5:	NOP
000012F6:	DEC B
000012F7:	LD B,E
000012F8:	LD C,A
000012F9:	LD C,(HL)
000012FA:	LD D,H
000012FB:	DEC C
000012FC:	NOP
000012FD:	NOP
000012FE:	NOP
000012FF:	NOP
00001300:	NOP
00001301:	NOP
00001302:	NOP
00001303:	NOP
00001304:	NOP
00001305:	NOP


; KEYDT1 - first keyboard table
00001306:	NOP
00001307:	PUSH AF
00001308:	DEC L
00001309:	JR NC,+3Bh
0000130B:	LD L,H
0000130C:	LD L,A
0000130D:	ADD HL,SP
0000130E:	NOP
0000130F:	CALL P,3A1Fh
00001312:	CPL
00001313:	LD L,E
00001314:	LD L,C
00001315:	JR C,+00h
00001317:	DI
00001318:	LD E,70h
0000131A:	LD L,6Ah
0000131C:	LD (HL),L
0000131D:	SCF
0000131E:	NOP
0000131F:	JP P,7840h
00001322:	INC L
00001323:	LD L,B
00001324:	LD A,C
00001325:	LD (HL),00h
00001327:	POP AF
00001328:	DEC E
00001329:	LD E,L
0000132A:	LD L,L
0000132B:	LD H,A
0000132C:	LD (HL),H
0000132D:	DEC (HL)
0000132E:	NOP
0000132F:	NOP
00001330:	INC E
00001331:	LD A,H
00001332:	LD L,(HL)
00001333:	LD H,(HL)
00001334:	LD (HL),D
00001335:	INC (HL)
00001336:	EX AF,AF'
00001337:	NOP
00001338:	DEC DE
00001339:	LD E,E
0000133A:	LD H,D
0000133B:	LD H,H
0000133C:	LD H,L
0000133D:	INC SP
0000133E:	LD D,00h
00001340:	LD A,D
00001341:	LD E,L
00001342:	HALT
00001343:	LD (HL),E
00001344:	LD (HL),A
00001345:	LD (0B5Eh),A
00001348:	JR NZ,+0Dh
0000134A:	LD H,E
0000134B:	LD H,C
0000134C:	LD (HL),C
;0000134D:	LD SP,FA00h

		; KEYDT2 - second keyboard table
0000134E:
00001350:	DEC A
00001351:	JR NC,+2Bh
00001353:	LD C,H
00001354:	LD C,A
00001355:	ADD HL,HL
00001356:	NOP
00001357:	LD SP,HL
00001358:	RRA
00001359:	LD HL,(4B3Fh)
0000135C:	LD C,C
0000135D:	JR Z,+00h
0000135F:	RET M
00001360:	LD E,50h
00001362:	LD A,4Ah
00001364:	LD D,L
00001365:	DAA
00001366:	NOP
00001367:	RST 30h
00001368:	LD H,B
00001369:	LD E,B
0000136A:	INC A
0000136B:	LD C,B
0000136C:	LD E,C
0000136D:	LD H,00h
0000136F:	OR 1Dh
00001371:	LD A,L
00001372:	LD C,L
00001373:	LD B,A
00001374:	LD D,H
00001375:	DEC H
00001376:	NOP
00001377:	NOP
00001378:	INC E
00001379:	LD A,A
0000137A:	LD C,(HL)
0000137B:	LD B,(HL)
0000137C:	LD D,D
0000137D:	INC H
0000137E:	LD (DE),A
0000137F:	NOP
00001380:	DEC DE
00001381:	LD A,E
00001382:	LD B,D
00001383:	LD B,H
00001384:	LD B,L
00001385:	INC HL
00001386:	RLA
00001387:	NOP
00001388:	LD E,D
00001389:	LD A,L
0000138A:	LD D,(HL)
0000138B:	LD D,E
0000138C:	LD D,A
0000138D:	LD (0C7Eh),HL
00001390:	JR NZ,+0Dh
00001392:	LD B,E
00001393:	LD B,C
00001394:	LD D,C
;00001395:	LD HL,0001h

; File Control Block
; FILMOD
00001396:	NOP
; FILNAM
00001397:	NOP
00001398:	NOP
00001399:	NOP
0000139A:	NOP
0000139B:	NOP
0000139C:	NOP
0000139D:	NOP
0000139E:	NOP
0000139F:	NOP
000013A0:	NOP
000013A1:	NOP
000013A2:	NOP
000013A3:	NOP
000013A4:	NOP
000013A5:	NOP
000013A6:	NOP
000013A7:	NOP
; MTBYTE (size in File Control Block)
000013A8:	defw 0
; MTADRS (data position in File Control Block)
000013AA:	defw 0
; MTEXEC (Exec address in File Control Block)
000013AC:	NOP
000013AD:	NOP
; PROTCT (File protection flag in File Control Block)
000013AE:	NOP
; 102 BYTES (FCB buffer)
000013AF:	NOP
000013B0:	NOP
000013B1:	NOP
000013B2:	NOP
000013B3:	NOP
000013B4:	NOP
000013B5:	NOP
000013B6:	NOP
000013B7:	NOP
000013B8:	NOP
000013B9:	NOP
000013BA:	NOP
000013BB:	NOP
000013BC:	NOP
000013BD:	NOP
000013BE:	NOP
000013BF:	NOP
000013C0:	NOP
000013C1:	NOP
000013C2:	NOP
000013C3:	NOP
000013C4:	NOP
000013C5:	NOP
000013C6:	NOP
000013C7:	NOP
000013C8:	NOP
000013C9:	NOP
000013CA:	NOP
000013CB:	NOP
000013CC:	NOP
000013CD:	NOP
000013CE:	NOP
000013CF:	NOP
000013D0:	NOP
000013D1:	NOP
000013D2:	NOP
000013D3:	NOP
000013D4:	NOP
000013D5:	NOP
000013D6:	NOP
000013D7:	NOP
000013D8:	NOP
000013D9:	NOP
000013DA:	NOP
000013DB:	NOP
000013DC:	NOP
000013DD:	NOP
000013DE:	NOP
000013DF:	NOP
000013E0:	NOP
000013E1:	NOP
000013E2:	NOP
000013E3:	NOP
000013E4:	NOP
000013E5:	NOP
000013E6:	NOP
000013E7:	NOP
000013E8:	NOP
000013E9:	NOP
000013EA:	NOP
000013EB:	NOP
000013EC:	NOP
000013ED:	NOP
000013EE:	NOP
000013EF:	NOP
000013F0:	NOP
000013F1:	NOP
000013F2:	NOP
000013F3:	NOP
000013F4:	NOP
000013F5:	NOP
000013F6:	NOP
000013F7:	NOP
000013F8:	NOP
000013F9:	NOP
000013FA:	NOP
000013FB:	NOP
000013FC:	NOP
000013FD:	NOP
000013FE:	NOP
000013FF:	NOP
00001400:	NOP
00001401:	NOP
00001402:	NOP
00001403:	NOP
00001404:	NOP
00001405:	NOP
00001406:	NOP
00001407:	NOP
00001408:	NOP
00001409:	NOP
0000140A:	NOP
0000140B:	NOP
0000140C:	NOP
0000140D:	NOP
0000140E:	NOP
0000140F:	NOP
00001410:	NOP
00001411:	NOP
00001412:	NOP
00001413:	NOP
00001414:	NOP
00001415:	NOP
00001416:	JR +2Eh

; boot
00001418:	LD DE,7A4Fh
0000141B:	LD B,40h
0000141D:	CALL 07E1h
00001420:	LD A,01h
00001422:	LD (141Dh),A
00001425:	LD HL,7A4Fh
00001428:	LD D,FFh
0000142A:	XOR A
0000142B:	LD (HL),A
0000142C:	CP (HL)
0000142D:	JR NZ,+05h
0000142F:	INC HL
00001430:	LD A,H
00001431:	CP D
00001432:	JR NZ,-0Ah
00001434:	LD (7A49h),HL
00001437:	CALL 33E9h
0000143A:	CALL 1BEAh		; 'CGINIT'

; 'NEW'
0000143D:	CALL 39ACh
00001440:	LD HL,0000h
00001443:	LD (13AEh),HL	; PROTCT (File protection flag in File Control Block)
00001446:	CALL 1951h
00001449:	LD SP,(7A41h)
0000144D:	LD HL,FFFFh
00001450:	PUSH HL
00001451:	LD (2225h),SP	; STACK
00001455:	XOR A
00001456:	LD (2208h),A	; CONTFG
00001459:	LD (2250h),A	; ERRORF  ..current error condition
0000145C:	LD (3383h),A
0000145F:	CALL 32EAh

; 'END'
00001462:	CALL 0823h
00001465:	LD A,01h
00001467:	LD (11EBh),A
0000146A:	LD DE,21F7h
0000146D:	LD B,02h
0000146F:	CALL 07E1h
00001472:	LD B,20h
00001474:	LD A,(2208h)	; CONTFG
00001477:	OR A
00001478:	JR Z,+02h
0000147A:	LD B,2Eh
0000147C:	LD A,B
0000147D:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001480:	LD A,(1C06h)
00001483:	CP 02h
00001485:	CALL NC,1B93h
00001488:	CALL 0823h
0000148B:	LD SP,(2225h)	; STACK
0000148F:	CALL 21F9h
00001492:	LD HL,1492h
00001495:	PUSH HL
00001496:	CALL 2237h
00001499:	LD DE,7A4Fh
0000149C:	CALL 1593h
0000149F:	JP C,222Ah
000014A2:	LD A,(DE)
000014A3:	CP 20h
000014A5:	INC DE
000014A6:	JR Z,-06h
000014A8:	DEC DE
000014A9:	OR A
000014AA:	RET Z
000014AB:	CP 27h
000014AD:	RET Z
000014AE:	CP 30h
000014B0:	JR NC,+09h
000014B2:	LD HL,FFFFh
000014B5:	LD (16CCh),HL	; current program line
000014B8:	JP 173Ah		; ERROR: Syntax error

000014BB:	CP 3Ah
000014BD:	JP C,30F2h		; EDITOR:

000014C0:	POP HL
000014C1:	LD HL,7B4Eh		; IMDBUF - Direct command
000014C4:	PUSH HL
000014C5:	CALL 6325h		; CVIMTX: convert immediate buffer for direct execution
000014C8:	XOR A
000014C9:	INC HL
000014CA:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
000014CD:	LD (HL),A
000014CE:	INC HL
000014CF:	LD (HL),A
000014D0:	INC A
000014D1:	LD (11EBh),A
000014D4:	LD HL,FFFFh
000014D7:	LD (16CCh),HL	; current program line
000014DA:	POP HL

000014DB:	LD (2225h),SP	; STACK

000014DF:	LD A,(HL)
000014E0:	CP 20h
000014E2:	INC HL
000014E3:	JR Z,-06h
000014E5:	CP 3Ah
000014E7:	JR Z,-0Ah
000014E9:	OR A
000014EA:	JP Z,1611h
000014ED:	LD (217Bh),HL
000014F0:	LD C,A
000014F1:	LD A,80h
000014F3:	INA (00h)
000014F5:	AND 12h
000014F7:	JP Z,16A2h
000014FA:	LD A,C
000014FB:	LD DE,14DFh
000014FE:	PUSH DE

; ..continued from 'LET'
000014FF:	CP 27h
00001501:	JP Z,183Ah		; 'REM', 'ELSE'
00001504:	CP 81h
00001506:	JP NC,1720h		; eval BASIC token
00001509:	CP 41h
0000150B:	JP C,173Ah		; ERROR: Syntax error
0000150E:	LD C,L
0000150F:	LD B,H
00001510:	LD DE,(7A4Bh)
00001514:	CALL 1EDAh
00001517:	CP 03h
00001519:	JR Z,+2Bh
0000151B:	PUSH AF
0000151C:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000151F:	CP F5h			; Token code for '='
00001521:	JP NZ,173Ah		; ERROR: Syntax error
00001524:	EX HL,(SP)
00001525:	PUSH HL
00001526:	CALL 2299h
00001529:	POP AF
0000152A:	CP 02h
0000152C:	JR Z,+0Eh
0000152E:	POP DE
0000152F:	PUSH BC
00001530:	LD B,A
00001531:	LD A,(HL)
00001532:	LD (DE),A
00001533:	INC HL
00001534:	INC DE
00001535:	DJNZ -06h
00001537:	POP BC
00001538:	LD L,C
00001539:	LD H,B
0000153A:	DEC HL
0000153B:	RET

0000153C:	CALL 2D97h		; HLFLT_2
0000153F:	POP DE
00001540:	EX DE,HL
00001541:	LD (HL),E
00001542:	INC HL
00001543:	LD (HL),D
00001544:	JR -0Eh
00001546:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001549:	CP F5h			; Token code for '='
0000154B:	JP NZ,173Ah		; ERROR: Syntax error
0000154E:	PUSH HL
0000154F:	CALL 22B2h
00001552:	CALL 6BF6h		; Load a string parameter
00001555:	CALL 170Eh
00001558:	PUSH BC
00001559:	PUSH HL
0000155A:	OR A
0000155B:	JR Z,+11h
0000155D:	LD C,A
0000155E:	LD B,00h
00001560:	EX DE,HL
00001561:	LD DE,7A4Fh
00001564:	PUSH DE
00001565:	LDIR
00001567:	POP DE
00001568:	POP HL
00001569:	PUSH HL
0000156A:	INC HL
0000156B:	LD (HL),E
0000156C:	INC HL
0000156D:	LD (HL),D
0000156E:	POP HL
0000156F:	POP BC
00001570:	POP DE
00001571:	PUSH DE
00001572:	EX DE,HL
00001573:	CALL 6BF2h
00001576:	EX DE,HL
00001577:	PUSH HL
00001578:	INC HL
00001579:	LD E,(HL)
0000157A:	INC HL
0000157B:	LD D,(HL)
0000157C:	LD HL,(7A41h)
0000157F:	OR A
00001580:	SBC HL,DE
00001582:	CCF
00001583:	JR NC,+05h
00001585:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00001588:	SBC HL,DE
0000158A:	POP HL
0000158B:	POP DE
0000158C:	CALL NC,2D9Eh
0000158F:	LD A,03h
00001591:	JR -64h

00001593:	EI
00001594:	CALL 06A4h		; INPUTF -  LINE INPUT,  DE=addr
00001597:	LD A,(DE)
00001598:	CP 03h
0000159A:	SCF
0000159B:	RET Z
0000159C:	PUSH DE
0000159D:	LD A,(DE)
0000159E:	INC DE
0000159F:	CP 0Dh
000015A1:	JR NZ,-06h
000015A3:	DEC DE
000015A4:	XOR A
000015A5:	PUSH BC
000015A6:	LD B,0Ah
000015A8:	LD (DE),A
000015A9:	INC DE
000015AA:	DJNZ -04h
000015AC:	POP BC
000015AD:	POP DE
000015AE:	RET

000015AF:	LD A,(2250h)	; ERRORF  ..current error condition
000015B2:	OR A
000015B3:	JP Z,1462h		; 'END'
000015B6:	LD HL,(16CCh)	; current program line
000015B9:	INC HL
000015BA:	LD A,L
000015BB:	OR H
000015BC:	JR Z,-0Bh
000015BE:	LD A,13h
000015C0:	JP 2196h		; error handling

; 'RUN'
000015C3:	CALL 1951h
000015C6:	XOR A
000015C7:	LD (3383h),A
000015CA:	LD (2208h),A	; CONTFG
000015CD:	LD (2295h),A	; error code
000015D0:	LD (2250h),A	; ERRORF  ..current error condition
000015D3:	PUSH HL
000015D4:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
000015D7:	DEC HL
000015D8:	LD (HL),A
000015D9:	LD (1C60h),HL
000015DC:	LD HL,1593h
000015DF:	LD (149Dh),HL
000015E2:	POP HL
000015E3:	LD SP,(7A41h)
000015E7:	PUSH HL
000015E8:	LD HL,0000h
000015EB:	LD (2265h),HL	; ERRLNO  ..program line where the last error happened
000015EE:	LD (2183h),HL
000015F1:	DEC HL
000015F2:	EX HL,(SP)
000015F3:	LD (2225h),SP	; STACK
000015F7:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000015FA:	CP 0Bh
000015FC:	JR NZ,+0Dh
000015FE:	INC HL
000015FF:	LD E,(HL)
00001600:	INC HL
00001601:	LD D,(HL)
00001602:	EX DE,HL
00001603:	CALL 3F8Eh
00001606:	JP C,43DCh		; ERROR: Undefined label

00001609:	JR +03h
0000160B:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
0000160E:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
00001611:	LD HL,0000h		;  1612 = NXTLPT (Self Modifying Code)
00001614:	LD E,(HL)
00001615:	INC HL
00001616:	LD D,(HL)
00001617:	INC HL
00001618:	LD A,D
00001619:	OR E
0000161A:	JR Z,-6Dh

0000161C:	LD (1612h),DE	; NXTLPT: ptr for BASIC interpreter
00001620:	LD E,(HL)
00001621:	INC HL
00001622:	LD D,(HL)
00001623:	INC HL
00001624:	LD (16CCh),DE	; current program line
00001628:	LD A,00h
0000162A:	OR A
0000162B:	CALL NZ,1631h
0000162E:	JP 14DBh

00001631:	PUSH AF
00001632:	XOR A
00001633:	LD (11EBh),A
00001636:	LD (169Fh),A
00001639:	POP AF
0000163A:	RRCA
0000163B:	JR NC,+18h
0000163D:	LD C,L
0000163E:	LD B,H
0000163F:	PUSH HL
00001640:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00001643:	PUSH HL
00001644:	LD HL,0000h
00001647:	LD (11EDh),HL		; CSRXY: X,Y text coordinates
0000164A:	LD L,C
0000164B:	LD H,B
0000164C:	CALL 1655h
0000164F:	POP HL
00001650:	LD (11EDh),HL
00001653:	POP HL
00001654:	RET

00001655:	PUSH HL
00001656:	RRCA
00001657:	JR NC,+0Ch
00001659:	PUSH AF
0000165A:	LD A,02h
0000165C:	LD (11EBh),A
0000165F:	LD A,23h
00001661:	LD (169Fh),A
00001664:	POP AF
00001665:	RRCA
00001666:	JR NC,+11h
00001668:	PUSH AF
00001669:	LD A,5Bh
0000166B:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
0000166E:	EX DE,HL
0000166F:	CALL 16E5h
00001672:	EX DE,HL
00001673:	LD A,5Dh
00001675:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001678:	POP AF
00001679:	RRCA
0000167A:	JR NC,+0Fh
0000167C:	POP HL
0000167D:	PUSH HL
0000167E:	PUSH AF
0000167F:	CALL 4128h
00001682:	LD A,05h
00001684:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001687:	CALL 0843h
0000168A:	POP AF
0000168B:	RRCA
0000168C:	PUSH AF
0000168D:	CALL C,0D3Ch
00001690:	POP AF
00001691:	RRCA
00001692:	LD HL,169Fh
00001695:	CALL C,3D2Fh	; 'DUMP'
00001698:	LD A,01h
0000169A:	LD (11EBh),A
0000169D:	POP HL
0000169E:	RET

0000169F:	NOP

; 'STOP'
000016A0:	POP BC
000016A1:	INC HL
000016A2:	DEC HL
000016A3:	LD (2222h),HL
000016A6:	LD HL,(16CCh)	; current program line
000016A9:	LD A,H
000016AA:	AND L
000016AB:	INC A
000016AC:	JR Z,+02h

000016AE:	LD A,01h

000016B0:	LD (2216h),HL
000016B3:	LD (2225h),SP	; STACK
000016B7:	LD (2208h),A	; CONTFG
000016BA:	LD HL,(1612h)	; NXTLPT: ptr for BASIC interpreter
000016BD:	LD (221Ch),HL
000016C0:	CALL 0823h
000016C3:	LD DE,1705h
000016C6:	LD B,05h
000016C8:	CALL 07E1h
000016CB:	LD HL,0000h
000016CE:	LD A,H
000016CF:	AND L
000016D0:	INC A
000016D1:	JP Z,1462h		; 'END'
000016D4:	LD (372Ah),HL	; EDLINE
000016D7:	LD DE,170Ah
000016DA:	LD B,04h
000016DC:	CALL 07E1h
000016DF:	CALL 16E5h
000016E2:	JP 1462h		; 'END'

000016E5:	PUSH DE
000016E6:	LD DE,7A4Fh
000016E9:	CALL 62A8h
000016EC:	LD B,04h
000016EE:	LD A,(DE)
000016EF:	CP 30h
000016F1:	JR NZ,+09h
000016F3:	INC DE
000016F4:	DJNZ -08h
000016F6:	LD A,(DE)
000016F7:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
000016FA:	POP DE
000016FB:	RET

000016FC:	LD A,(DE)
000016FD:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001700:	INC DE
00001701:	DJNZ -07h
00001703:	JR -0Fh
00001705:	LD B,D
00001706:	LD D,D
00001707:	LD B,L
00001708:	LD B,C
00001709:	LD C,E
0000170A:	JR NZ,+49h
0000170C:	LD C,(HL)
0000170D:	JR NZ,-1Bh
0000170F:	CALL 2AA3h		; LD HL,(HL)
00001712:	LD A,(HL)
00001713:	INC HL
00001714:	LD E,(HL)
00001715:	INC HL
00001716:	LD D,(HL)
00001717:	POP HL
00001718:	LD (HL),A
00001719:	INC HL
0000171A:	LD (HL),E
0000171B:	INC HL
0000171C:	LD (HL),D
0000171D:	DEC HL
0000171E:	DEC HL
0000171F:	RET

; eval BASIC token
00001720:	CP FFh			; prefix ?
00001722:	JR Z,+1Bh
00001724:	CP D0h
00001726:	JP NC,173Ah		; ERROR: Syntax error
00001729:	PUSH HL
0000172A:	LD HL,2F68h		; BASIC COMMAND jump table
0000172D:	CALL 289Fh		; get value from jump table, token code in A
00001730:	EX HL,(SP)
00001731:	RET



00001732:	LD A,0Dh
00001734:	JR +06h
; ERROR: Illegal function call
00001736:	LD A,05h
00001738:	JR +02h
; ERROR: Syntax error
0000173A:	LD A,02h
0000173C:	JP 2196h		; error handling

; Token prefix is FFh
0000173F:	LD A,(HL)
00001740:	CP B4h			; Token code for 'MID$'
00001742:	JP Z,177Eh

00001745:	CP B8h			; Token code for 'MEM$'
00001747:	JP NZ,173Ah		; ERROR: Syntax error

; Found token code for 'MEM$'
0000174A:	LD C,L
0000174B:	LD B,H
0000174C:	INC BC
0000174D:	CALL 2D58h		; check for '('
00001750:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001753:	PUSH HL
00001754:	CALL 2D61h		; CH2CH: Check for comma ','
00001757:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
0000175A:	CALL 2D66h		; check for ')'
0000175D:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00001760:	PUSH AF
00001761:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001764:	CP F5h			; Token code for '='
00001766:	JR NZ,-21h
00001768:	CALL 459Dh
0000176B:	DEC BC
0000176C:	POP HL
0000176D:	CP H
0000176E:	JR C,+01h
00001770:	LD A,H
00001771:	POP HL
00001772:	PUSH BC
00001773:	OR A
00001774:	JR Z,+06h
00001776:	LD C,A
00001777:	LD B,00h
00001779:	EX DE,HL
0000177A:	LDIR
0000177C:	POP HL
0000177D:	RET

; Found token code for 'MID$'
0000177E:	INC HL
0000177F:	LD C,L
00001780:	LD B,H
00001781:	CALL 2D58h		; check for '('
00001784:	LD DE,(7A4Bh)
00001788:	CALL 1ED7h		; GETVAR:
0000178B:	CP 03h
0000178D:	JP NZ,1732h		; ERROR: Type mismatch
00001790:	PUSH HL
00001791:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001794:	CALL 2D61h		; CH2CH: Check for comma ','
00001797:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
0000179A:	PUSH AF
0000179B:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000179E:	LD D,A
0000179F:	LD E,FFh
000017A1:	POP AF
000017A2:	CP 29h
000017A4:	JR Z,+0Fh
000017A6:	CALL 2D61h		; CH2CH: Check for comma ','
000017A9:	PUSH DE
000017AA:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000017AD:	CALL 2D66h		; check for ')'
000017B0:	CALL 22D8h		; Check byte overflow for value in DE and put in A
000017B3:	POP DE
000017B4:	LD E,A
000017B5:	PUSH DE
000017B6:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000017B9:	CP F5h			; Token code for '='
000017BB:	JP NZ,173Ah		; ERROR: Syntax error

000017BE:	CALL 459Dh
000017C1:	EXX
000017C2:	POP DE
000017C3:	POP HL
000017C4:	LD A,(HL)
000017C5:	OR A
000017C6:	LD B,A
000017C7:	LD C,A
000017C8:	PUSH HL
000017C9:	JR Z,+56h
000017CB:	PUSH DE
000017CC:	INC HL
000017CD:	CALL 2AA3h		; LD HL,(HL)
000017D0:	LD DE,7A4Fh
000017D3:	PUSH DE
000017D4:	LD A,(HL)
000017D5:	LD (DE),A
000017D6:	INC DE
000017D7:	INC HL
000017D8:	DJNZ -06h
000017DA:	POP HL
000017DB:	POP DE
000017DC:	LD A,D
000017DD:	DEC A
000017DE:	CP C
000017DF:	JR NC,+40h
000017E1:	ADD L
000017E2:	LD L,A
000017E3:	LD A,00h
000017E5:	ADC H
000017E6:	LD H,A
000017E7:	LD A,C
000017E8:	SUB D
000017E9:	INC A
000017EA:	CP E
000017EB:	JR C,+01h
000017ED:	LD A,E
000017EE:	LD B,A
000017EF:	PUSH HL
000017F0:	PUSH BC
000017F1:	EXX
000017F2:	POP AF
000017F3:	POP DE
000017F4:	PUSH BC
000017F5:	PUSH AF
000017F6:	POP BC
000017F7:	LD A,(HL)
000017F8:	CP B
000017F9:	JR NC,+01h
000017FB:	LD B,A
000017FC:	LD A,B
000017FD:	OR A
000017FE:	JR Z,+1Ch
00001800:	INC HL
00001801:	CALL 2AA3h		; LD HL,(HL)
00001804:	LD A,(HL)
00001805:	LD (DE),A
00001806:	INC HL
00001807:	INC DE
00001808:	DJNZ -06h
0000180A:	LD B,C
0000180B:	LD DE,0008h
0000180E:	LD HL,(7A4Bh)
00001811:	ADD HL,DE
00001812:	LD DE,7A4Fh
00001815:	CALL 2B1Ah
00001818:	POP BC
00001819:	JP 1552h
0000181C:	POP BC
0000181D:	POP HL
0000181E:	JP 1B39h
00001821:	EXX
00001822:	JR -07h
00001824:	PUSH BC
00001825:	LD A,04h
00001827:	LD B,1Ah
00001829:	LD DE,3088h
0000182C:	CALL 6211h
0000182F:	XOR A
00001830:	LD DE,30A2h
00001833:	LD B,14h
00001835:	CALL 6211h
00001838:	POP BC
00001839:	RET

; 'REM', 'ELSE'
0000183A:	POP HL
0000183B:	JP 1611h

0000183E:	LD A,1Fh
00001840:	JP 2196h		; error handling

00001843:	PUSH BC
00001844:	CALL 6BF6h		; Load a string parameter
00001847:	CALL 170Eh
0000184A:	LD B,A
0000184B:	CALL 07E1h
0000184E:	JP 18D6h

00001851:	PUSH AF
00001852:	JP 18CAh

; 'PRINT'
00001855:	LD A,01h
00001857:	LD (11EBh),A
0000185A:	LD C,L
0000185B:	LD B,H
0000185C:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000185F:	CP 23h
00001861:	JR NZ,+2Eh
00001863:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001866:	DEC BC
00001867:	OR A
00001868:	JR Z,+0Ah
0000186A:	CP 3Ah	 ; ':'
0000186C:	JR Z,+06h
0000186E:	CP 2Ch	; ','
00001870:	JP NZ,173Ah		; ERROR: Syntax error
00001873:	INC BC
00001874:	LD A,H
00001875:	OR L
00001876:	JR Z,+1Bh
00001878:	INC HL
00001879:	LD A,H
0000187A:	OR L
0000187B:	JR NZ,+0Dh
0000187D:	LD A,(3383h)
00001880:	CP 02h
00001882:	JR NZ,-46h
00001884:	INC A
00001885:	LD (11EBh),A
00001888:	JR +09h
0000188A:	LD A,02h
0000188C:	LD (11EBh),A
0000188F:	JR +02h
00001891:	LD C,L
00001892:	LD B,H
00001893:	CALL 21F9h
00001896:	LD (IY+00h),00h		; data type, aka PRCSON
0000189A:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000189D:	CP E2h			; Token code for 'USING'
0000189F:	JP Z,3410h
000018A2:	OR A
000018A3:	JR Z,+55h
000018A5:	CP 3Ah
000018A7:	JR Z,+51h
000018A9:	CP 2Ch		; ','
000018AB:	JP Z,1851h
000018AE:	CP 3Bh
000018B0:	JP Z,1851h
000018B3:	CP E7h			; Token code for 'TAB'
000018B5:	JR Z,+5Bh
000018B7:	CP E8h			; Token code for 'SPC'
000018B9:	JP Z,1940h
000018BC:	DEC BC
000018BD:	CALL 22F2h		; --
000018C0:	PUSH AF
000018C1:	LD A,(IY+00h)	; data type, aka PRCSON
000018C4:	CP 03h			; string type ?
000018C6:	JP Z,1843h
000018C9:	OR A
000018CA:	PUSH BC
000018CB:	JR Z,+09h
000018CD:	CALL 5D58h
000018D0:	CALL 07E1h
000018D3:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
000018D6:	POP HL
000018D7:	POP AF
000018D8:	OR A
000018D9:	JR Z,+21h
000018DB:	CP 3Ah
000018DD:	JR Z,+1Dh
000018DF:	CP 3Bh
000018E1:	JR Z,+07h
000018E3:	CP 2Ch		; ','
000018E5:	JR NZ,+1Bh
000018E7:	CALL 0802h
000018EA:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000018ED:	OR A
000018EE:	JR Z,+04h
000018F0:	CP 3Ah
000018F2:	JR NZ,-63h
000018F4:	LD A,01h
000018F6:	LD (11EBh),A
000018F9:	RET

000018FA:	LD H,B
000018FB:	LD L,C
000018FC:	CALL 0843h
000018FF:	DEC HL
00001900:	JR -0Eh
00001902:	DEC HL
00001903:	CP 22h
00001905:	JR Z,-76h
00001907:	CP 41h
00001909:	JR NC,-7Ah
0000190B:	CP 21h
0000190D:	JR C,-7Eh
0000190F:	JP 173Ah		; ERROR: Syntax error

00001912:	CALL 2D58h		; check for '('
00001915:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001918:	CALL 2D66h		; check for ')'
0000191B:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000191E:	LD A,(11EBh)
00001921:	CP 02h
00001923:	JR C,+05h
00001925:	LD A,(11ECh)
00001928:	JR +03h
0000192A:	LD A,(11EDh)		; CSRXY: X,Y text coordinates
0000192D:	SUB L
0000192E:	JR NC,+09h
00001930:	NEG
00001932:	LD D,A
00001933:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00001936:	DEC D
00001937:	JR NZ,-06h
00001939:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000193C:	LD L,C
0000193D:	LD H,B
0000193E:	JR -68h
00001940:	CALL 2D58h		; check for '('
00001943:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001946:	CALL 2D66h		; check for ')'
00001949:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000194C:	OR A
0000194D:	JR Z,-16h
0000194F:	JR -1Fh


00001951:	PUSH HL
00001952:	PUSH DE
00001953:	LD HL,(7A3Bh)		; VARED
00001956:	XOR A
00001957:	LD (HL),A
00001958:	LD (7A3Fh),HL		; TMPEND
0000195B:	LD HL,(7A45h)
0000195E:	LD (7A3Dh),HL
00001961:	LD DE,07D0h
00001964:	SBC HL,DE
00001966:	LD (7A41h),HL
00001969:	CALL 1824h
0000196C:	POP DE
0000196D:	POP HL
0000196E:	RET

; 'FOR'
0000196F:	POP BC
00001970:	LD (19F9h),BC	; Self Modifying Code (at bottom of this code block)
00001974:	LD C,L
00001975:	LD B,H
00001976:	LD DE,(7A4Bh)
0000197A:	CALL 1ED7h		; GETVAR:
0000197D:	LD (19F1h),A
00001980:	EX DE,HL
00001981:	LD HL,0000h
00001984:	ADD HL,SP
00001985:	LD A,(HL)
00001986:	OR A
00001987:	JR NZ,+24h
00001989:	PUSH DE
0000198A:	LD DE,0006h
0000198D:	ADD HL,DE
0000198E:	POP DE
0000198F:	PUSH HL
00001990:	CALL 2AA3h		; LD HL,(HL)
00001993:	OR A
00001994:	SBC HL,DE
00001996:	POP HL
00001997:	JR NZ,+0Ch
00001999:	PUSH DE
0000199A:	LD DE,0012h
0000199D:	ADD HL,DE
0000199E:	POP DE
0000199F:	LD (2225h),HL	; STACK
000019A2:	LD SP,HL
000019A3:	JR +08h
000019A5:	PUSH DE
000019A6:	LD DE,0010h
000019A9:	ADD HL,DE
000019AA:	POP DE
000019AB:	JR -28h
000019AD:	EX DE,HL
000019AE:	PUSH HL
000019AF:	LD A,(19F1h)
000019B2:	CALL 151Bh
000019B5:	LD A,(HL)
000019B6:	CP DFh			; Token code for 'TO'
000019B8:	JP NZ,173Ah		; ERROR: Syntax error
000019BB:	INC HL
000019BC:	LD C,L
000019BD:	LD B,H
000019BE:	CALL 2299h
000019C1:	POP DE
000019C2:	PUSH HL
000019C3:	EXX
000019C4:	POP DE
000019C5:	LD HL,FFF8h			; -8 (normal precision BASICs would have '-5')
000019C8:	ADD HL,SP
000019C9:	LD SP,HL
000019CA:	EX DE,HL
000019CB:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000019CE:	EXX
000019CF:	CP E0h			; Token code for 'STEP'
000019D1:	LD HL,6298h		; FLONE
000019D4:	JR NZ,+05h
000019D6:	PUSH DE
000019D7:	CALL 2299h
000019DA:	POP DE
000019DB:	PUSH HL
000019DC:	EXX
000019DD:	POP DE
000019DE:	LD HL,FFF8h			; -8 (normal precision BASICs would have '-5')
000019E1:	ADD HL,SP
000019E2:	LD SP,HL
000019E3:	EX DE,HL
000019E4:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000019E7:	EXX
000019E8:	PUSH DE
000019E9:	DEC BC
000019EA:	PUSH BC
000019EB:	LD HL,(1612h)	; NXTLPT: ptr for BASIC interpreter
000019EE:	PUSH HL
000019EF:	LD HL,0000h
000019F2:	PUSH HL
000019F3:	LD L,C
000019F4:	LD H,B
000019F5:	CALL 1EB0h		; MEMECK: (SBC SP,DE)
000019F8:	JP 0000h

000019FB:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000019FE:	OR A
000019FF:	JR Z,+04h
00001A01:	CP 3Ah
00001A03:	JR NZ,+16h
00001A05:	LD A,01h
00001A07:	JP 2196h		; error handling

; 'NEXT'
00001A0A:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00001A0D:	OR A
00001A0E:	JP Z,1A62h
00001A11:	CP 3Ah
00001A13:	JP Z,1A62h
00001A16:	LD C,L
00001A17:	LD B,H
00001A18:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001A1B:	LD DE,(7A4Bh)
00001A1F:	CALL 1EDAh
00001A22:	EX DE,HL
00001A23:	LD HL,0002h
00001A26:	ADD HL,SP
00001A27:	LD A,(HL)
00001A28:	OR A
00001A29:	JR NZ,-30h
00001A2B:	PUSH DE
00001A2C:	LD DE,0006h
00001A2F:	ADD HL,DE
00001A30:	POP DE
00001A31:	PUSH HL
00001A32:	CALL 2AA3h		; LD HL,(HL)
00001A35:	OR A
00001A36:	SBC HL,DE
00001A38:	POP HL
00001A39:	JR NZ,+1Fh
00001A3B:	LD DE,0006h
00001A3E:	OR A
00001A3F:	SBC HL,DE
00001A41:	POP DE
00001A42:	LD SP,HL
00001A43:	LD (1A4Dh),DE
00001A47:	LD L,C
00001A48:	LD H,B
00001A49:	CALL 1A62h
00001A4C:	LD DE,0000h
00001A4F:	PUSH DE
00001A50:	RET NC
00001A51:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00001A54:	CP 2Ch		; ','
00001A56:	RET NZ
00001A57:	INC HL
00001A58:	JR -44h
00001A5A:	PUSH DE
00001A5B:	LD DE,0012h
00001A5E:	ADD HL,DE
00001A5F:	POP DE
00001A60:	JR -3Bh
00001A62:	PUSH HL
00001A63:	LD HL,0004h
00001A66:	ADD HL,SP
00001A67:	XOR A
00001A68:	CP (HL)
00001A69:	JR NZ,-66h
00001A6B:	INC HL
00001A6C:	LD A,F0h
00001A6E:	AND (HL)
00001A6F:	JR NZ,-6Ch
00001A71:	LD A,(HL)
00001A72:	INC HL
00001A73:	LD E,(HL)
00001A74:	INC HL
00001A75:	LD D,(HL)
00001A76:	PUSH DE
00001A77:	INC HL
00001A78:	LD E,(HL)
00001A79:	INC HL
00001A7A:	LD D,(HL)
00001A7B:	PUSH DE
00001A7C:	INC HL
00001A7D:	LD E,(HL)
00001A7E:	INC HL
00001A7F:	LD D,(HL)
00001A80:	INC HL
00001A81:	EX DE,HL
00001A82:	CP 02h			; integer type ?
00001A84:	JP Z,1AC1h
00001A87:	LD (IY+00h),A	; data type, aka PRCSON
00001A8A:	CALL 6CA6h		; ADD:
00001A8D:	INC DE
00001A8E:	LD A,(DE)
00001A8F:	DEC DE
00001A90:	EX AF,AF'
00001A91:	PUSH HL
00001A92:	LD HL,0008h
00001A95:	ADD HL,DE
00001A96:	EX DE,HL
00001A97:	POP HL
00001A98:	EX AF,AF'
00001A99:	RLCA
00001A9A:	JR NC,+07h
00001A9C:	CALL 61D6h		; CMP:
00001A9F:	JR C,+12h
00001AA1:	JR +07h
00001AA3:	CALL 61D6h		; CMP:
00001AA6:	JR Z,+02h
00001AA8:	JR NC,+09h
00001AAA:	POP DE
00001AAB:	POP HL
00001AAC:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
00001AAF:	EX DE,HL
00001AB0:	POP BC
00001AB1:	OR A
00001AB2:	RET

00001AB3:	LD HL,0008h
00001AB6:	ADD HL,DE
00001AB7:	POP BC
00001AB8:	POP BC
00001AB9:	POP DE
00001ABA:	POP IX
00001ABC:	LD SP,HL
00001ABD:	EX DE,HL
00001ABE:	SCF
00001ABF:	LD PC,IX
00001AC1:	PUSH DE
00001AC2:	PUSH HL
00001AC3:	EX DE,HL
00001AC4:	CALL 2D97h		; HLFLT_2
00001AC7:	LD A,H
00001AC8:	EX AF,AF'
00001AC9:	EX DE,HL
00001ACA:	POP HL
00001ACB:	PUSH HL
00001ACC:	CALL 2AA3h		; LD HL,(HL)
00001ACF:	ADD HL,DE
00001AD0:	EX DE,HL
00001AD1:	POP HL
00001AD2:	LD (HL),E
00001AD3:	INC HL
00001AD4:	LD (HL),D
00001AD5:	POP HL
00001AD6:	LD BC,0008h
00001AD9:	ADD HL,BC
00001ADA:	PUSH HL
00001ADB:	CALL 2D97h		; HLFLT_2
00001ADE:	EX AF,AF'
00001ADF:	RLCA
00001AE0:	JR NC,+0Ah
00001AE2:	CALL 1AF4h
00001AE5:	POP DE
00001AE6:	JR Z,-3Eh
00001AE8:	JR C,-40h
00001AEA:	JR -39h
00001AEC:	CALL 1AF4h
00001AEF:	POP DE
00001AF0:	JR NC,-48h
00001AF2:	JR -41h
00001AF4:	LD A,H
00001AF5:	RLCA
00001AF6:	JR C,+0Ch
00001AF8:	LD A,D
00001AF9:	RLCA
00001AFA:	CCF
00001AFB:	JR NC,+13h
00001AFD:	OR A
00001AFE:	SBC HL,DE
00001B00:	RET C
00001B01:	LD A,H
00001B02:	OR L
00001B03:	RET

00001B04:	LD A,D
00001B05:	RLCA
00001B06:	CCF
00001B07:	JR C,+02h
00001B09:	JR -0Eh
00001B0B:	LD A,01h
00001B0D:	OR A
00001B0E:	SCF
00001B0F:	RET

00001B10:	LD A,01h
00001B12:	OR A
00001B13:	RET

; 'ERROR'
00001B14:	LD C,L
00001B15:	LD B,H
00001B16:	CALL 22DFh		; IBYTE: load BASIC argument in A
00001B19:	JP 2196h		; error handling

; 'LET'
00001B1C:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00001B1F:	INC HL
00001B20:	JP 14FFh

; 'POKE'
00001B23:	LD C,L
00001B24:	LD B,H
00001B25:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001B28:	CP 2Ch		; ','
00001B2A:	JR NZ,+0Dh
00001B2C:	PUSH HL
00001B2D:	CALL 22DFh		; IBYTE: load BASIC argument in A
00001B30:	POP HL
00001B31:	LD (HL),A
00001B32:	INC HL
00001B33:	DEC BC
00001B34:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001B37:	JR -11h

00001B39:	LD L,C
00001B3A:	LD H,B
00001B3B:	DEC HL
00001B3C:	LD A,01h
00001B3E:	LD (11EBh),A
00001B41:	RET

; 'CLS'
00001B42:	LD A,(1C06h)
00001B45:	CP 02h
00001B47:	LD A,0Ch
00001B49:	JP C,0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001B4C:	LD BC,1800h
00001B4F:	LD D,00h
00001B51:	DEC BC
00001B52:	OUT (C),D
00001B54:	LD A,B
00001B55:	OR C
00001B56:	JR NZ,-07h
00001B58:	RET

;'SCREEN'
00001B59:	LD C,L
00001B5A:	LD B,H
00001B5B:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001B5E:	CALL 2D61h		; CH2CH: Check for comma ','
00001B61:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00001B64:	CP 05h
00001B66:	JP NC,1736h		; ERROR: Illegal function call
00001B69:	PUSH AF
00001B6A:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001B6D:	CALL 2D61h		; CH2CH: Check for comma ','
00001B70:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00001B73:	CP 05h
00001B75:	JP NC,1736h		; ERROR: Illegal function call
00001B78:	PUSH AF
00001B79:	CALL 22DFh		; IBYTE: load BASIC argument in A
00001B7C:	CP 06h
00001B7E:	JP NC,1736h		; ERROR: Illegal function call
00001B81:	POP DE
00001B82:	LD E,D
00001B83:	LD L,A
00001B84:	POP AF
00001B85:	LD D,A
00001B86:	PUSH BC
00001B87:	PUSH DE
00001B88:	CALL 1B95h
00001B8B:	POP BC
00001B8C:	CALL 05D6h
00001B8F:	POP BC
00001B90:	JP 1B39h

00001B93:	LD L,00h
00001B95:	LD A,(1C06h)
00001B98:	CP L
00001B99:	JR Z,+1Dh
00001B9B:	CP 02h
00001B9D:	JR NC,+0Ch
00001B9F:	LD A,L
00001BA0:	CP 02h
00001BA2:	JR C,+14h
00001BA4:	PUSH AF
00001BA5:	CALL 1B4Ch
00001BA8:	POP AF
00001BA9:	JR +0Dh
00001BAB:	LD A,L
00001BAC:	CP 02h
00001BAE:	JR NC,+08h
00001BB0:	PUSH AF
00001BB1:	CALL 1B4Ch
00001BB4:	CALL 1BEAh		; 'CGINIT'
00001BB7:	POP AF
00001BB8:	LD (1C06h),A
00001BBB:	LD L,A
00001BBC:	LD E,A
00001BBD:	LD H,00h
00001BBF:	LD D,H
00001BC0:	ADD HL,HL
00001BC1:	ADD HL,HL
00001BC2:	ADD HL,DE
00001BC3:	LD DE,1C07h
00001BC6:	ADD HL,DE
00001BC7:	LD A,(HL)
00001BC8:	LD (4825h),A
00001BCB:	INC HL
00001BCC:	LD A,(HL)
00001BCD:	LD (482Dh),A
00001BD0:	LD A,FFh
00001BD2:	LD (4826h),A
00001BD5:	LD (482Eh),A
00001BD8:	INC HL
00001BD9:	LD E,(HL)
00001BDA:	INC HL
00001BDB:	LD D,(HL)
00001BDC:	LD (4834h),DE
00001BE0:	INC HL
00001BE1:	LD A,(11EAh)
00001BE4:	AND 30h
00001BE6:	OR (HL)
00001BE7:	JP 0062h

; 'CGINIT'
00001BEA:	PUSH HL
00001BEB:	LD HL,554Ah
00001BEE:	LD BC,1000h
00001BF1:	LD D,80h
00001BF3:	LD E,0Ch
00001BF5:	LD A,(HL)
00001BF6:	OUT (C),A
00001BF8:	INC HL
00001BF9:	INC BC
00001BFA:	DEC E
00001BFB:	JR NZ,-08h
00001BFD:	INC BC
00001BFE:	INC BC
00001BFF:	INC BC
00001C00:	INC BC
00001C01:	DEC D
00001C02:	JR NZ,-11h
00001C04:	POP HL
00001C05:	RET

00001C06:	NOP
00001C07:	RET PO
00001C08:	RET NZ
00001C09:	LD (HL),48h
00001C0B:	NOP
00001C0C:	RET NC
00001C0D:	RET NZ
00001C0E:	LD (HL),L
00001C0F:	LD C,B
00001C10:	NOP
00001C11:	LD B,B
00001C12:	ADD B
00001C13:	JP Z,0A48h
00001C16:	LD B,B
00001C17:	ADD B
00001C18:	JP Z,8A48h
00001C1B:	LD B,B
00001C1C:	NOP
00001C1D:	DI
00001C1E:	LD C,B
00001C1F:	LD C,40h
00001C21:	NOP
00001C22:	DI
00001C23:	LD C,B
00001C24:	ADC (HL)

; 'LOCATE'
00001C25:	LD C,L
00001C26:	LD B,H
00001C27:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001C2A:	CALL 2D61h		; CH2CH: Check for comma ','
00001C2D:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00001C30:	CP 20h
00001C32:	JP NC,1736h		; ERROR: Illegal function call
00001C35:	LD (11EDh),A		; CSRXY: X,Y text coordinates
00001C38:	CALL 22DFh		; IBYTE: load BASIC argument in A
00001C3B:	CP 10h
00001C3D:	JR NC,-0Dh
00001C3F:	LD (11EEh),A	; Y text coordinate
00001C42:	JP 1B39h

; 'READ'
00001C45:	LD C,L
00001C46:	LD B,H
00001C47:	LD HL,1C5Fh
00001C4A:	LD (1E5Ah),HL
00001C4D:	LD HL,4528h
00001C50:	LD (1DFCh),HL
00001C53:	LD HL,0000h
00001C56:	LD (1DE2h),HL
00001C59:	LD HL,0428h
00001C5C:	LD (1E81h),HL
00001C5F:	LD HL,0000h
00001C62:	LD A,(HL)
00001C63:	CP 3Ah
00001C65:	JR Z,+11h
00001C67:	OR A
00001C68:	JR NZ,+20h
00001C6A:	INC HL
00001C6B:	LD E,(HL)		; {LDDEMI:}
00001C6C:	INC HL
00001C6D:	LD D,(HL)
00001C6E:	LD A,E
00001C6F:	OR D			; ...{LDDEMI:}
00001C70:	LD A,04h
00001C72:	JP Z,2196h		; error handling
00001C75:	INC HL
00001C76:	INC HL
00001C77:	INC HL
00001C78:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00001C7B:	OR A
00001C7C:	JR Z,-1Ch
00001C7E:	CP 8Fh			; Token code for 'DATA'
00001C80:	JR Z,+08h
00001C82:	CALL 1CC8h		; 'DATA', 'LABEL'
00001C85:	JR C,-25h
00001C87:	INC HL
00001C88:	JR -12h
00001C8A:	INC HL
00001C8B:	LD (1C60h),HL
00001C8E:	EX DE,HL
00001C8F:	JP 1DDFh
00001C92:	PUSH HL
00001C93:	CALL 42BEh
00001C96:	LD HL,(4353h)
00001C99:	DEC HL
00001C9A:	LD (1C60h),HL
00001C9D:	POP HL
00001C9E:	CALL 4464h
00001CA1:	OR A
00001CA2:	RET Z
00001CA3:	INC HL
00001CA4:	RET

; 'RESTORE'
00001CA5:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00001CA8:	CP 22h
00001CAA:	JR Z,-1Ah
00001CAC:	CP 0Bh
00001CAE:	PUSH HL
00001CAF:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00001CB2:	JR NZ,+0Eh
00001CB4:	POP HL
00001CB5:	INC HL
00001CB6:	LD E,(HL)
00001CB7:	INC HL
00001CB8:	LD D,(HL)
00001CB9:	INC HL
00001CBA:	PUSH HL
00001CBB:	EX DE,HL
00001CBC:	CALL 3F8Eh
00001CBF:	JP C,43DCh		; ERROR: Undefined label
00001CC2:	DEC HL
00001CC3:	LD (1C60h),HL
00001CC6:	POP HL
00001CC7:	RET

; 'DATA', 'LABEL'
; Move to the next program line
00001CC8:	DEC HL
; -0Bh
00001CC9:	CALL 4440h		; Parse the content of a 'DATA' line
00001CCC:	OR A
00001CCD:	SCF
00001CCE:	RET Z
00001CCF:	CP 3Ah	; ':'
00001CD1:	RET Z
00001CD2:	JR -0Bh

; HCH2CH: Skip spaces and check for comma ','
00001CD4:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
; CH2CH: Check for comma ','
00001CD7:	CP 2Ch		; ','
00001CD9:	JP NZ,173Ah		; ERROR: Syntax error
00001CDC:	LD HL,39F8h
00001CDF:	LD (1D30h),HL
00001CE2:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001CE5:	JR +35h

; 'LINE'
00001CE7:	LD (1D4Ch),HL
00001CEA:	LD C,L
00001CEB:	LD B,H
00001CEC:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001CEF:	CP 8Dh			; Token code for 'INPUT'
00001CF1:	JP NZ,4979h		; 'draw LINE'

; 'LINE INPUT'
00001CF4:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001CF7:	CP 23h
00001CF9:	JR Z,-27h
00001CFB:	LD HL,1593h
00001CFE:	LD (1D30h),HL
00001D01:	CP 22h
00001D03:	JR NZ,+17h
00001D05:	LD A,(BC)
00001D06:	INC BC
00001D07:	OR A
00001D08:	JP Z,173Ah		; ERROR: Syntax error
00001D0B:	CP 22h
00001D0D:	JR Z,+05h
00001D0F:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001D12:	JR -0Fh
00001D14:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001D17:	CP 3Bh
00001D19:	CALL Z,25C4h		; skip SPACEs in (BC), A=next char
00001D1C:	LD DE,(7A4Bh)
00001D20:	CALL 1EDAh
00001D23:	CP 03h
00001D25:	JP NZ,1732h		; ERROR: Type mismatch
00001D28:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001D2B:	PUSH HL
00001D2C:	LD DE,7A4Fh
00001D2F:	CALL 1593h
00001D32:	JR C,+15h
00001D34:	PUSH BC
00001D35:	PUSH DE
00001D36:	LD B,00h
00001D38:	LD A,(DE)
00001D39:	OR A
00001D3A:	JR Z,+04h
00001D3C:	INC DE
00001D3D:	INC B
00001D3E:	JR -08h
00001D40:	EX DE,HL
00001D41:	POP DE
00001D42:	CALL 2B1Ah
00001D45:	POP BC
00001D46:	JP 1552h

00001D49:	POP HL
00001D4A:	POP HL
00001D4B:	LD HL,0000h
00001D4E:	JP 16A2h

;  ..used by INPUT #
00001D51:	LD HL,1D6Ch
00001D54:	LD (1DC3h),HL
00001D57:	INC BC
00001D58:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00001D5B:	CP 2Ch		; ','
00001D5D:	JP NZ,173Ah		; ERROR: Syntax error
00001D60:	LD A,(3383h)
00001D63:	DEC A
00001D64:	JP NZ,183Eh
00001D67:	LD A,C3h
00001D69:	LD (3A30h),A
00001D6C:	LD DE,7A4Fh
00001D6F:	CALL 39F8h
00001D72:	JR +6Bh

; 'INPUT'
00001D74:	PUSH HL
00001D75:	LD (1D4Ch),HL
00001D78:	LD HL,1DC2h
00001D7B:	LD (1E5Ah),HL
00001D7E:	LD HL,0000h
00001D81:	LD (1DFCh),HL
00001D84:	LD (1E81h),HL
00001D87:	LD HL,0418h
00001D8A:	LD (1DE2h),HL
00001D8D:	POP HL
00001D8E:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00001D91:	LD C,L
00001D92:	LD B,H
00001D93:	PUSH HL
00001D94:	LD HL,1DC5h
00001D97:	LD (1DC3h),HL
00001D9A:	POP HL
00001D9B:	CP 23h	; '#'
00001D9D:	JP Z,1D51h		;  ..used by INPUT #
00001DA0:	CP 22h
00001DA2:	JR NZ,+1Eh
00001DA4:	INC HL
00001DA5:	LD A,(HL)
00001DA6:	CP 22h
00001DA8:	JR Z,+09h
00001DAA:	OR A
00001DAB:	JP Z,173Ah		; ERROR: Syntax error
00001DAE:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001DB1:	JR -0Fh
00001DB3:	CALL 2986h		; skip SPACEs in (++HL), A=next char
00001DB6:	INC HL
00001DB7:	LD C,L
00001DB8:	LD B,H
00001DB9:	CP 2Ch		; ','
00001DBB:	JR Z,+10h
00001DBD:	CP 3Bh
00001DBF:	JP NZ,173Ah		; ERROR: Syntax error
00001DC2:	JP 0000h

00001DC5:	LD A,3Fh		; '?'
00001DC7:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00001DCA:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00001DCD:	LD HL,(11EDh)		; CSRXY: X,Y text coordinates
00001DD0:	PUSH HL
00001DD1:	LD DE,7A4Fh
00001DD4:	CALL 1593h
00001DD7:	JP C,1D49h
00001DDA:	POP HL
00001DDB:	LD H,00h
00001DDD:	ADD HL,DE
00001DDE:	EX DE,HL
00001DDF:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001DE2:	JR +04h
00001DE4:	LD (1C60h),DE
00001DE8:	OR A
00001DE9:	JP Z,1B39h
00001DEC:	CP 3Ah
00001DEE:	JP Z,1B39h
00001DF1:	EX AF,AF'
00001DF2:	CALL 5D51h			; TSTNUM
00001DF5:	DEC DE
00001DF6:	OR A
00001DF7:	DEC BC
00001DF8:	JR Z,+5Fh
00001DFA:	CP 3Ah
00001DFC:	JR Z,+5Bh
00001DFE:	INC BC
00001DFF:	EX AF,AF'
00001E00:	PUSH DE
00001E01:	LD DE,(7A4Bh)
00001E05:	CALL 1EDAh
00001E08:	POP DE
00001E09:	CP 03h
00001E0B:	JP Z,1E69h
00001E0E:	PUSH HL
00001E0F:	PUSH AF
00001E10:	CALL 5D51h			; TSTNUM
00001E13:	DEC DE
00001E14:	CP 2Eh		; '.'
00001E16:	JR Z,+16h
00001E18:	CP 2Dh
00001E1A:	JR Z,+12h
00001E1C:	CP 26h
00001E1E:	JR Z,+0Eh
00001E20:	CP 2Bh
00001E22:	JR Z,+0Ah
00001E24:	CP 30h
00001E26:	JP C,1732h		; ERROR: Type mismatch
00001E29:	CP 3Ah
00001E2B:	JP NC,1732h		; ERROR: Type mismatch
00001E2E:	LD HL,62F2h
00001E31:	PUSH BC
00001E32:	CALL 5BB8h	; ....get number
00001E35:	POP BC
00001E36:	POP AF
00001E37:	CP 02h
00001E39:	JR Z,+21h
00001E3B:	POP HL
00001E3C:	PUSH BC
00001E3D:	LD C,A
00001E3E:	LD B,00h
00001E40:	PUSH DE
00001E41:	EX DE,HL
00001E42:	LD HL,62F2h
00001E45:	LDIR
00001E47:	POP DE
00001E48:	POP BC
00001E49:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001E4C:	CP 2Ch		; ','
00001E4E:	DEC BC
00001E4F:	JR NZ,-72h
00001E51:	INC BC
00001E52:	CALL 5D51h			; TSTNUM
00001E55:	CP 2Ch		; ','
00001E57:	JR Z,-7Ah
00001E59:	JP 0000h

00001E5C:	CALL 2D97h			; HLFLT_2
00001E5F:	POP IX
00001E61:	LD (IX+00h),L
00001E64:	LD (IX+01h),H
00001E67:	JR -20h
00001E69:	PUSH BC
00001E6A:	PUSH HL
00001E6B:	LD (1EA9h),DE
00001E6F:	LD B,00h
00001E71:	CALL 5D51h			; TSTNUM
00001E74:	CP 22h
00001E76:	JR Z,+20h
00001E78:	DEC DE
00001E79:	LD A,(DE)
00001E7A:	INC DE
00001E7B:	INC B
00001E7C:	OR A
00001E7D:	JR Z,+08h
00001E7F:	CP 3Ah
00001E81:	JR Z,+04h
00001E83:	CP 2Ch		; ','
00001E85:	JR NZ,-0Eh
00001E87:	DEC DE
00001E88:	DEC B
00001E89:	LD HL,1EA8h
00001E8C:	LD (HL),B
00001E8D:	LD C,E
00001E8E:	LD B,D
00001E8F:	POP DE
00001E90:	PUSH BC
00001E91:	CALL 1571h
00001E94:	POP DE
00001E95:	POP BC
00001E96:	JR -4Fh
00001E98:	LD (1EA9h),DE
00001E9C:	LD A,(DE)
00001E9D:	INC B
00001E9E:	OR A
00001E9F:	JR Z,-19h
00001EA1:	INC DE
00001EA2:	CP 22h
00001EA4:	JR NZ,-0Ah
00001EA6:	JR -20h

00001EA8:	NOP
00001EA9:	NOP
00001EAA:	NOP

; MEMECK2: (SBC SP,HL)
00001EAB:	PUSH HL
00001EAC:	PUSH DE
00001EAD:	EX DE,HL
00001EAE:	JR +06h
; MEMECK: (SBC SP,DE)
00001EB0:	PUSH HL
00001EB1:	PUSH DE
00001EB2:	LD DE,(7A3Fh)		; TMPEND
00001EB6:	PUSH AF
00001EB7:	LD HL,0000h
00001EBA:	ADD HL,SP
00001EBB:	DEC H
00001EBC:	OR A
00001EBD:	SBC HL,DE
00001EBF:	JR NC,+0Eh
00001EC1:	CALL 2DE8h
00001EC4:	LD HL,0000h
00001EC7:	ADD HL,SP
00001EC8:	DEC H
00001EC9:	OR A
00001ECA:	SBC HL,DE
00001ECC:	JP C,2188h
00001ECF:	POP AF
00001ED0:	POP DE
00001ED1:	POP HL
00001ED2:	RET

; INTGTV:  get variable
00001ED3:	LD DE,(7A4Bh)
; GETVAR:
00001ED7:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00001EDA:	PUSH DE
00001EDB:	CALL 20FEh		; VSRTST:
00001EDE:	CP 28h
00001EE0:	JP Z,1F41h
00001EE3:	DEC BC
00001EE4:	PUSH BC
00001EE5:	LD A,E
00001EE6:	EX DE,HL
00001EE7:	LD B,A
00001EE8:	LD HL,(7A3Bh)		; VARED
00001EEB:	LD A,(HL)
00001EEC:	OR A
00001EED:	JR Z,+34h
00001EEF:	CP B
00001EF0:	JR NZ,+12h
00001EF2:	INC HL
00001EF3:	LD A,E
00001EF4:	CP (HL)
00001EF5:	LD A,B
00001EF6:	JP NZ,1F18h
00001EF9:	INC HL
00001EFA:	LD A,D
00001EFB:	CP (HL)
00001EFC:	LD A,B
00001EFD:	JP NZ,1F19h
00001F00:	INC HL
00001F01:	POP BC
00001F02:	POP DE
00001F03:	RET

00001F04:	INC A
00001F05:	JP P,1F18h
00001F08:	DEC A
00001F09:	AND C0h
00001F0B:	CP C0h
00001F0D:	LD A,05h
00001F0F:	JR Z,+09h
00001F11:	INC HL
00001F12:	CALL 2AA3h		; LD HL,(HL)
00001F15:	JP 1EEBh
00001F18:	INC A
00001F19:	INC A
00001F1A:	ADD L
00001F1B:	LD L,A
00001F1C:	LD A,00h
00001F1E:	ADC H
00001F1F:	LD H,A
00001F20:	JP 1EEBh
00001F23:	LD (HL),B
00001F24:	INC HL
00001F25:	LD (HL),E
00001F26:	INC HL
00001F27:	LD (HL),D
00001F28:	INC HL
00001F29:	LD C,B
00001F2A:	PUSH HL
00001F2B:	EX DE,HL
00001F2C:	INC B
00001F2D:	XOR A
00001F2E:	LD (DE),A
00001F2F:	INC DE
00001F30:	DJNZ -04h
00001F32:	DEC DE
00001F33:	EX DE,HL
00001F34:	CALL 1EABh		; MEMECK2: (SBC SP,HL)
00001F37:	EX DE,HL
00001F38:	LD (7A3Fh),DE		; TMPEND
00001F3C:	POP HL
00001F3D:	LD A,C
00001F3E:	JP 1F01h

00001F41:	LD D,00h
00001F43:	EXX
00001F44:	POP HL
00001F45:	PUSH HL
00001F46:	PUSH HL
00001F47:	EXX
00001F48:	EX HL,(SP)
00001F49:	PUSH HL
00001F4A:	POP HL
00001F4B:	PUSH HL
00001F4C:	PUSH DE
00001F4D:	DEC IY
00001F4F:	CALL 22C7h
00001F52:	INC IY
00001F54:	CP 29h
00001F56:	JR Z,+12h
00001F58:	CP 2Ch		; ','
00001F5A:	JP NZ,173Ah		; ERROR: Syntax error
00001F5D:	POP DE
00001F5E:	INC D
00001F5F:	EXX
00001F60:	POP HL
00001F61:	POP DE
00001F62:	EXX
00001F63:	PUSH HL
00001F64:	EXX
00001F65:	PUSH DE
00001F66:	PUSH HL
00001F67:	EXX
00001F68:	JR -20h
00001F6A:	POP DE
00001F6B:	EXX
00001F6C:	POP HL
00001F6D:	POP DE
00001F6E:	EXX
00001F6F:	INC D
00001F70:	PUSH HL
00001F71:	PUSH BC
00001F72:	EXX
00001F73:	PUSH DE
00001F74:	EXX
00001F75:	POP BC
00001F76:	LD HL,(7A3Bh)		; VARED
00001F79:	LD A,(HL)
00001F7A:	OR A
00001F7B:	JP Z,20F5h
00001F7E:	JP M,1F8Ch
00001F81:	INC A
00001F82:	INC A
00001F83:	INC A
00001F84:	ADD L
00001F85:	LD L,A
00001F86:	LD A,00h
00001F88:	ADC H
00001F89:	LD H,A
00001F8A:	JR -13h
00001F8C:	AND C0h
00001F8E:	CP C0h
00001F90:	LD A,05h
00001F92:	JR Z,-10h
00001F94:	LD A,(HL)
00001F95:	AND 7Fh
00001F97:	CP E
00001F98:	JR Z,+0Dh
00001F9A:	INC HL
00001F9B:	CALL 2AA3h		; LD HL,(HL)
00001F9E:	JP 1F79h
00001FA1:	DEC HL
00001FA2:	DEC HL
00001FA3:	DEC HL
00001FA4:	JP 1F9Bh
00001FA7:	EXX
00001FA8:	LD C,A
00001FA9:	LD B,00h
00001FAB:	LD HL,0000h
00001FAE:	EXX
00001FAF:	INC HL
00001FB0:	INC HL
00001FB1:	INC HL
00001FB2:	LD A,C
00001FB3:	CP (HL)
00001FB4:	JP NZ,1FA2h
00001FB7:	INC HL
00001FB8:	LD A,B
00001FB9:	CP (HL)
00001FBA:	JP NZ,1FA1h
00001FBD:	INC HL
00001FBE:	LD A,D
00001FBF:	CP (HL)
00001FC0:	JP NZ,20F5h
00001FC3:	POP BC
00001FC4:	LD (1FF1h),BC
00001FC8:	LD B,(HL)
00001FC9:	INC HL
00001FCA:	LD E,(HL)
00001FCB:	INC HL
00001FCC:	LD D,(HL)
00001FCD:	INC HL
00001FCE:	EX HL,(SP)
00001FCF:	PUSH DE
00001FD0:	EXX
00001FD1:	POP DE
00001FD2:	CALL 214Bh
00001FD5:	EXX
00001FD6:	PUSH HL
00001FD7:	SBC HL,DE
00001FD9:	JP NC,20F5h
00001FDC:	EXX
00001FDD:	POP DE
00001FDE:	ADD HL,DE
00001FDF:	EXX
00001FE0:	POP HL
00001FE1:	DJNZ -19h
00001FE3:	PUSH HL
00001FE4:	EXX
00001FE5:	LD E,C
00001FE6:	LD D,B
00001FE7:	LD A,C
00001FE8:	CALL 214Bh
00001FEB:	PUSH HL
00001FEC:	EXX
00001FED:	POP DE
00001FEE:	POP HL
00001FEF:	ADD HL,DE
00001FF0:	LD BC,0000h
00001FF3:	POP DE
00001FF4:	RET
00001FF5:	CP 30h
00001FF7:	RET C
00001FF8:	CP 5Bh
00001FFA:	CCF
00001FFB:	RET C
00001FFC:	CP 41h
00001FFE:	RET NC
00001FFF:	CP 3Ah
00002001:	CCF
00002002:	RET

; 'DIM'
00002003:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00002006:	OR A
00002007:	RET Z
00002008:	CP 3Ah
0000200A:	RET Z
0000200B:	LD C,L
0000200C:	LD B,H
0000200D:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002010:	CALL 20FEh		; VSRTST:
00002013:	CP 28h
00002015:	JP NZ,173Ah		; ERROR: Syntax error
00002018:	PUSH BC
00002019:	PUSH DE
0000201A:	PUSH HL
0000201B:	LD C,L
0000201C:	LD B,H
0000201D:	LD HL,(7A3Bh)		; VARED
00002020:	LD A,(HL)
00002021:	OR A
00002022:	JR Z,+39h
00002024:	JP M,2032h
00002027:	INC A
00002028:	INC A
00002029:	INC A
0000202A:	ADD L
0000202B:	LD L,A
0000202C:	LD A,00h
0000202E:	ADC H
0000202F:	LD H,A
00002030:	JR -12h
00002032:	AND C0h
00002034:	CP C0h
00002036:	LD A,05h
00002038:	JR Z,-10h
0000203A:	LD A,(HL)
0000203B:	AND 7Fh
0000203D:	CP E
0000203E:	JP Z,204Ch
00002041:	INC HL
00002042:	CALL 2AA3h		; LD HL,(HL)
00002045:	JR -27h
00002047:	DEC HL
00002048:	DEC HL
00002049:	DEC HL
0000204A:	JR -0Ah
0000204C:	INC HL
0000204D:	INC HL
0000204E:	INC HL
0000204F:	LD A,C
00002050:	CP (HL)
00002051:	JP NZ,2048h
00002054:	INC HL
00002055:	LD A,B
00002056:	CP (HL)
00002057:	JP NZ,2047h
0000205A:	JP 3B8Bh

0000205D:	POP HL
0000205E:	POP DE
0000205F:	POP BC
00002060:	LD D,00h
00002062:	PUSH HL
00002063:	PUSH DE
00002064:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00002067:	CP 29h
00002069:	JR Z,+09h
0000206B:	CALL 2D61h		; CH2CH: Check for comma ','
0000206E:	POP DE
0000206F:	INC D
00002070:	INC HL
00002071:	PUSH HL
00002072:	JR -11h
00002074:	POP DE
00002075:	INC D
00002076:	INC HL
00002077:	PUSH HL
00002078:	LD HL,(7A3Fh)		; TMPEND
0000207B:	LD A,E
0000207C:	OR 80h
0000207E:	LD (HL),A
0000207F:	EX AF,AF'
00002080:	INC HL
00002081:	INC HL
00002082:	INC HL
00002083:	INC HL
00002084:	INC HL
00002085:	LD (HL),D
00002086:	INC HL
00002087:	LD A,D
00002088:	EXX
00002089:	LD HL,0001h
0000208C:	POP DE
0000208D:	PUSH DE
0000208E:	CALL 214Bh
00002091:	EXX
00002092:	POP DE
00002093:	LD (HL),E
00002094:	INC HL
00002095:	LD (HL),D
00002096:	INC HL
00002097:	DEC A
00002098:	EXX
00002099:	JR NZ,-0Fh
0000209B:	EX AF,AF'
0000209C:	AND 7Fh
0000209E:	LD E,A
0000209F:	LD D,00h
000020A1:	CALL 214Bh
000020A4:	PUSH HL
000020A5:	EXX
000020A6:	POP DE
000020A7:	PUSH HL
000020A8:	ADD HL,DE
000020A9:	JP C,2188h
000020AC:	PUSH DE
000020AD:	CALL 1EABh		; MEMECK2: (SBC SP,HL)
000020B0:	EX DE,HL
000020B1:	LD HL,(7A3Fh)		; TMPEND
000020B4:	INC HL
000020B5:	LD (HL),E
000020B6:	INC HL
000020B7:	LD (HL),D
000020B8:	INC HL
000020B9:	LD (7A3Fh),DE		; TMPEND
000020BD:	POP DE
000020BE:	INC DE
000020BF:	EX HL,(SP)
000020C0:	LD (HL),00h
000020C2:	INC HL
000020C3:	DEC DE
000020C4:	LD A,D
000020C5:	OR E
000020C6:	JR NZ,-08h
000020C8:	POP HL
000020C9:	POP DE
000020CA:	LD (HL),E
000020CB:	INC HL
000020CC:	LD (HL),D
000020CD:	LD L,C
000020CE:	LD H,B

; 'MID$'
000020CF:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000020D2:	INC HL
000020D3:	CP 2Ch			; ','
000020D5:	JP Z,2003h		; 'DIM'
000020D8:	DEC HL
000020D9:	RET

; 'OFF'
000020DA:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000020DD:	CP 9Ch			; Token code for 'OFF'
000020DF:	JR Z,+0Ah
000020E1:	XOR A
000020E2:	LD (06BEh),A
000020E5:	LD A,11h
000020E7:	LD (14F7h),A
000020EA:	RET

000020EB:	LD A,03h
000020ED:	LD (06BEh),A
000020F0:	LD A,CAh
000020F2:	INC HL
000020F3:	JR -0Eh
000020F5:	LD A,09h

000020F7:	JP 2196h		; error handling

; 'STAT' points here..
000020FA:	LD A,1Dh			; ERROR: Reserved feature
000020FC:	JR -07h

; VSRTST:
000020FE:	LD HL,0000h
00002101:	CP 41h
00002103:	JP C,173Ah		; ERROR: Syntax error
00002106:	CP 5Bh			; '['  (some BASIC subtracts "A" and checks for 26)
00002108:	JP NC,173Ah		; ERROR: Syntax error
0000210B:	LD L,A
0000210C:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000210F:	CALL 1FF5h
00002112:	JR C,+09h
00002114:	LD H,A
00002115:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002118:	CALL 1FF5h
0000211B:	JR NC,-08h
0000211D:	CP 28h
0000211F:	JR NC,+20h
00002121:	OR A
00002122:	JP Z,2141h
00002125:	CP 25h
00002127:	LD E,02h
00002129:	JP Z,25C4h		; skip SPACEs in (BC), A=next char
0000212C:	CP 24h
0000212E:	LD E,03h
00002130:	JP Z,25C4h		; skip SPACEs in (BC), A=next char
00002133:	CP 21h
00002135:	LD E,04h
00002137:	JP Z,25C4h		; skip SPACEs in (BC), A=next char
0000213A:	CP 23h
0000213C:	LD E,08h
0000213E:	JP Z,25C4h		; skip SPACEs in (BC), A=next char
00002141:	PUSH HL
00002142:	LD H,00h
00002144:	LD DE,3047h
00002147:	ADD HL,DE
00002148:	LD E,(HL)
00002149:	POP HL
0000214A:	RET

0000214B:	PUSH AF
0000214C:	PUSH BC
0000214D:	LD A,L
0000214E:	LD C,H
0000214F:	LD HL,0000h
00002152:	LD B,08h
00002154:	RRCA
00002155:	JR NC,+03h
00002157:	ADD HL,DE
00002158:	JR C,-65h
0000215A:	RL E
0000215C:	RL D
0000215E:	DJNZ -0Ch
00002160:	LD A,C
00002161:	OR A
00002162:	JR Z,+0Eh
00002164:	LD B,08h
00002166:	RRCA
00002167:	JR NC,+03h
00002169:	ADD HL,DE
0000216A:	JR C,-77h
0000216C:	RL E
0000216E:	RL D
00002170:	DJNZ -0Ch
00002172:	POP BC
00002173:	POP AF
00002174:	RET

00002175:	LD A,02h
00002177:	LD (2250h),A	; ERRORF  ..current error condition
0000217A:	LD HL,0000h
0000217D:	DEC HL
0000217E:	LD (228Ah),HL
00002181:	POP AF
00002182:	LD HL,0000h
00002185:	JP 160Eh

00002188:	CALL 1951h
0000218B:	EI
0000218C:	LD SP,(7A41h)
00002190:	LD (2225h),SP	; STACK
00002194:	LD A,07h

; error handling
00002196:	LD SP,(2225h)	; STACK
0000219A:	PUSH AF
0000219B:	LD HL,(16CCh)	; current program line
0000219E:	LD A,H
0000219F:	AND L
000021A0:	INC A
;000021A1:	JR Z,+14h

000021A2:	INC D
000021A3:	POP AF
000021A4:	LD (2265h),HL	; ERRLNO  ..program line where the last error happened
000021A7:	LD (2295h),A	; error code
000021AA:	LD HL,(1612h)	; NXTLPT: ptr for BASIC interpreter
000021AD:	LD (225Fh),HL
000021B0:	PUSH AF
000021B1:	LD A,(2250h)	; ERRORF  ..current error condition
000021B4:	DEC A
000021B5:	JR Z,-42h
000021B7:	CALL 0823h
000021BA:	LD A,01h
000021BC:	LD (11EBh),A
000021BF:	POP AF
000021C0:	OR A
000021C1:	JR Z,+14h
000021C3:	CP 20h
000021C5:	JR NC,+10h
000021C7:	LD DE,69B2h		; Error message table
000021CA:	LD B,A
000021CB:	LD A,(DE)
000021CC:	INC DE
000021CD:	OR A
000021CE:	JR NZ,-05h
000021D0:	DEC B
000021D1:	JR NZ,-08h
000021D3:	LD A,(DE)
000021D4:	INC A
000021D5:	JR NZ,+03h
000021D7:	LD DE,21E5h
000021DA:	LD A,(DE)
000021DB:	OR A
000021DC:	JP Z,16CBh
000021DF:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
000021E2:	INC DE
000021E3:	JR -0Bh
000021E5:	LD D,L
000021E6:	LD C,(HL)
000021E7:	LD D,B
000021E8:	LD D,D
000021E9:	LD C,C
000021EA:	LD C,(HL)
000021EB:	LD D,H
000021EC:	LD B,C
000021ED:	LD B,D
000021EE:	LD C,H
000021EF:	LD B,L
000021F0:	JR NZ,+45h
000021F2:	LD D,D
000021F3:	LD D,D
000021F4:	LD C,A
000021F5:	LD D,D
000021F6:	NOP
000021F7:	LD C,A
000021F8:	LD C,E

000021F9:	LD HL,0000h
000021FC:	LD (262Fh),HL
000021FF:	LD HL,(7A4Bh)
00002202:	LD IY,(7A43h)
00002206:	RET

; 'CONT'
00002207:	LD A,00h
00002209:	OR A
0000220A:	JR NZ,+05h
0000220C:	LD A,11h
0000220E:	JP 2196h		; error handling

00002211:	XOR A
00002212:	LD (2208h),A	; CONTFG
00002215:	LD HL,0000h
00002218:	LD (16CCh),HL	; current program line
0000221B:	LD HL,0000h
0000221E:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
00002221:	LD HL,0000h
00002224:	LD SP,0000h
00002227:	JP 14DFh

0000222A:	LD A,(2237h)
0000222D:	OR A
0000222E:	RET NZ
0000222F:	LD A,C9h
00002231:	LD (2237h),A
00002234:	JP 1446h
00002237:	RET

00002238:	LD HL,0000h
0000223B:	CALL 16E5h
0000223E:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00002241:	LD HL,(2239h)
00002244:	LD DE,0000h
00002247:	ADD HL,DE
00002248:	LD (2239h),HL
0000224B:	JP C,222Ah
0000224E:	RET

; 'RESUME'
0000224F:	LD A,00h
00002251:	CP 02h
00002253:	LD A,14h
00002255:	JP NZ,2196h
00002258:	LD A,01h
0000225A:	LD (2250h),A	; ERRORF  ..current error condition
0000225D:	PUSH HL
0000225E:	LD HL,0000h
00002261:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
00002264:	LD HL,0000h
00002267:	LD (16CCh),HL	; current program line
0000226A:	POP HL
0000226B:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
0000226E:	CP 3Ah	; ':'
00002270:	JR Z,+17h
00002272:	OR A
00002273:	JR Z,+14h
00002275:	CP B5h			; Token code for 'ERROR'
00002277:	JR Z,+14h
00002279:	CP 8Bh			; Token code for 'NEXT'
0000227B:	JP NZ,43B1h		; 'GOTO'

0000227E:	LD HL,(228Ah)
00002281:	CALL 1CC8h		; 'DATA', 'LABEL'
00002284:	RET NC
00002285:	POP HL
00002286:	JP 1611h

00002289:	LD HL,0000h
0000228C:	RET

; Resume
0000228D:	XOR A
0000228E:	LD (2250h),A	; ERRORF  ..current error condition
00002291:	CALL 2289h
00002294:	LD A,00h
00002296:	JP 2196h		; error handling

00002299:	CALL 21F9h

; DEEXP:
0000229C:	LD (IY+00h),00h	; data type, aka PRCSON
000022A0:	CALL 22F2h		; --
000022A3:	PUSH AF
000022A4:	LD A,(IY+00h)	; data type, aka PRCSON
000022A7:	CP 03h			; string type ?
000022A9:	JP Z,1732h		; ERROR: Type mismatch
000022AC:	OR A
000022AD:	JP Z,25BFh		; ERROR: 16h
000022B0:	POP AF
000022B1:	RET

000022B2:	CALL 21F9h
000022B5:	LD (IY+00h),00h	; data type, aka PRCSON
000022B9:	CALL 22F2h		; --
000022BC:	PUSH AF
000022BD:	LD A,(IY+00h)	; data type, aka PRCSON
000022C0:	CP 03h			; string type ?
000022C2:	JP NZ,1732h		; ERROR: Type mismatch
000022C5:	JR -1Bh

000022C7:	CALL 229Ch		; DEEXP:
000022CA:	JR +03h

; IDEEXP: DE= (HL), A=next character to be parsed
000022CC:	CALL 2299h
000022CF:	PUSH AF
000022D0:	CALL 2D97h		; HLFLT_2
000022D3:	POP AF
000022D4:	RET

000022D5:	CALL 22C7h

; IBYTE2:
000022D8:	LD A,H		; Check byte overflow for value in DE and put in A
000022D9:	OR A
000022DA:	LD A,L
000022DB:	RET Z
000022DC:	JP 1736h		; ERROR: Illegal function call

; IBYTE: load BASIC argument in A
000022DF:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000022E2:	JR -0Ch			; IBYTE2:
000022E4:	LD A,(IY+00h)	; data type, aka PRCSON
000022E7:	CP 03h			; string type ?
000022E9:	RET NZ
000022EA:	JP 1732h		; ERROR: Type mismatch
000022ED:	LD A,10h
000022EF:	JP 2196h		; error handling

; --
000022F2:	EX DE,HL
000022F3:	LD HL,0000h
000022F6:	OR A
000022F7:	SBC HL,DE
000022F9:	EX DE,HL
000022FA:	JR C,-0Fh

000022FC:	CALL 2326h
000022FF:	CP EBh			; Token for 'XOR'
00002301:	RET NZ
00002302:	CALL 22E4h
00002305:	PUSH HL
00002306:	LD (IY+00h),00h	; data type, aka PRCSON
0000230A:	CALL 2326h
0000230D:	PUSH AF
0000230E:	CALL 2D97h		; HLFLT_2
00002311:	POP AF
00002312:	EX DE,HL
00002313:	POP HL
00002314:	PUSH AF
00002315:	PUSH HL
00002316:	CALL 2D97h		; HLFLT_2
00002319:	LD A,H
0000231A:	XOR D				; .XOR.
0000231B:	LD D,A
0000231C:	LD A,L
0000231D:	XOR E				; .XOR.
0000231E:	LD E,A
0000231F:	POP HL
00002320:	CALL 2902h		; FLTHEX:  (HL)=DE
00002323:	POP AF
00002324:	JR -27h

00002326:	CALL 2350h
00002329:	CP ECh			; Token for 'OR'
0000232B:	RET NZ
0000232C:	CALL 22E4h
0000232F:	PUSH HL
00002330:	LD (IY+00h),00h	; data type, aka PRCSON
00002334:	CALL 2350h
00002337:	PUSH AF
00002338:	CALL 2D97h		; HLFLT_2
0000233B:	POP AF
0000233C:	EX DE,HL
0000233D:	POP HL
0000233E:	PUSH AF
0000233F:	PUSH HL
00002340:	CALL 2D97h		; HLFLT_2
00002343:	LD A,H
00002344:	OR D				; .OR.
00002345:	LD D,A
00002346:	LD A,L
00002347:	OR E				; .OR.
00002348:	LD E,A
00002349:	POP HL
0000234A:	CALL 2902h		; FLTHEX:  (HL)=DE
0000234D:	POP AF
0000234E:	JR -27h

00002350:	CALL 237Bh
00002353:	CP EDh			; Token for 'AND'
00002355:	RET NZ
00002356:	CALL 22E4h
00002359:	PUSH HL
0000235A:	LD (IY+00h),00h	; data type, aka PRCSON
0000235E:	CALL 237Bh
00002361:	PUSH AF
00002362:	CALL 2D97h		; HLFLT_2
00002365:	POP AF
00002366:	EX DE,HL
00002367:	POP HL
00002368:	PUSH AF
00002369:	PUSH HL
0000236A:	CALL 2D97h		; HLFLT_2
0000236D:	LD A,H
0000236E:	AND D				; .AND.
0000236F:	LD D,A
00002370:	LD A,L
00002371:	AND E				; .AND.
00002372:	LD E,A
00002373:	POP HL
00002374:	CALL 2902h		; FLTHEX:  (HL)=DE
00002377:	POP AF
00002378:	JP 2353h

0000237B:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000237E:	DEC BC
0000237F:	CP EEh
00002381:	JP NZ,239Dh
00002384:	INC BC
00002385:	CALL 239Dh
00002388:	PUSH AF
00002389:	CALL 22E4h
0000238C:	PUSH HL
0000238D:	CALL 2D97h		; HLFLT_2
00002390:	LD A,L
00002391:	CPL
00002392:	LD L,A
00002393:	LD A,H
00002394:	CPL
00002395:	LD H,A
00002396:	EX DE,HL
00002397:	POP HL
00002398:	CALL 2902h		; FLTHEX:  (HL)=DE
0000239B:	POP AF
0000239C:	RET
0000239D:	CALL 240Eh
000023A0:	CP EFh
000023A2:	RET C
000023A3:	PUSH AF
000023A4:	PUSH HL
000023A5:	CALL 240Eh
000023A8:	EX DE,HL
000023A9:	POP HL
000023AA:	EX AF,AF'
000023AB:	POP AF
000023AC:	EX AF,AF'
000023AD:	PUSH AF
000023AE:	EX AF,AF'
000023AF:	CP F6h
000023B1:	JR C,+2Dh
000023B3:	JR Z,+22h
000023B5:	CALL 61D6h		; CMP:
000023B8:	JR Z,+12h
000023BA:	JR NC,+10h
000023BC:	PUSH DE
000023BD:	PUSH HL
000023BE:	PUSH BC
000023BF:	EX DE,HL
000023C0:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
000023C3:	POP BC
000023C4:	POP HL
000023C5:	CALL 6BEBh		; TOGLE:  toggle number sign
000023C8:	POP DE
000023C9:	POP AF
000023CA:	JR -2Ch

000023CC:	PUSH BC
000023CD:	LD B,08h
000023CF:	EX DE,HL
000023D0:	CALL 6210h
000023D3:	POP BC
000023D4:	EX DE,HL
000023D5:	JR -0Eh
000023D7:	CALL 61D6h		; CMP:
000023DA:	CCF
000023DB:	JR -25h
000023DD:	POP AF
000023DE:	JR -24h
000023E0:	CP F5h			; Token code for '='
000023E2:	JR C,+07h
000023E4:	CALL 61D6h		; CMP:
000023E7:	JR Z,-2Dh
000023E9:	JR -1Fh

000023EB:	CP F1h
000023ED:	JP C,2407h
000023F0:	PUSH AF
000023F1:	CALL 61D6h		; CMP:
000023F4:	JR Z,-19h
000023F6:	EX AF,AF'
000023F7:	POP AF
000023F8:	CP F2h
000023FA:	JR Z,+07h
000023FC:	CP F4h
000023FE:	JR Z,+03h
00002400:	EX AF,AF'
00002401:	JR -4Bh

00002403:	EX AF,AF'
00002404:	CCF
00002405:	JR -4Fh
00002407:	CALL 61D6h		; CMP:
0000240A:	JR Z,-40h
0000240C:	JR -52h
0000240E:	CALL 2433h
00002411:	CP F8h
00002413:	RET C
00002414:	PUSH HL
00002415:	JR Z,+0Fh
00002417:	CALL 2433h
0000241A:	EX DE,HL
0000241B:	POP HL
0000241C:	PUSH BC
0000241D:	PUSH AF
0000241E:	CALL 6BD1h		; SUB:
00002421:	POP AF
00002422:	POP BC
00002423:	JP 2411h

00002426:	CALL 2433h
00002429:	EX DE,HL
0000242A:	POP HL
0000242B:	PUSH BC
0000242C:	PUSH AF
0000242D:	CALL 6CA6h		; ADD:
00002430:	JP 2421h

00002433:	CALL 245Bh
00002436:	CP FAh
00002438:	RET C
00002439:	PUSH HL
0000243A:	JR NZ,+0Fh
0000243C:	CALL 245Bh
0000243F:	EX DE,HL
00002440:	POP HL
00002441:	PUSH BC
00002442:	PUSH AF
00002443:	CALL 614Fh
00002446:	POP AF
00002447:	POP BC
00002448:	JP 2436h

0000244B:	CALL 245Bh
0000244E:	EX DE,HL
0000244F:	POP HL
00002450:	PUSH BC
00002451:	PUSH AF
00002452:	CALL 70BDh		; DIV:
00002455:	CALL 6010h		; 'FIX'
00002458:	JP 2446h

0000245B:	CALL 248Fh
0000245E:	CP FCh
00002460:	RET C
00002461:	PUSH HL
00002462:	JR Z,+0Fh
00002464:	CALL 248Fh
00002467:	EX DE,HL
00002468:	POP HL
00002469:	PUSH BC
0000246A:	PUSH AF
0000246B:	CALL 6FE0h		; MUL:
0000246E:	POP AF
0000246F:	POP BC
00002470:	JP 245Eh
00002473:	CALL 248Fh
00002476:	EX DE,HL
00002477:	POP HL
00002478:	PUSH BC
00002479:	PUSH AF
0000247A:	CALL 70BDh		; DIV:
0000247D:	JP 246Eh

00002480:	POP HL
00002481:	PUSH HL
00002482:	EX DE,HL
00002483:	PUSH BC
00002484:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00002487:	POP BC
00002488:	POP HL
00002489:	DEC BC
0000248A:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000248D:	JR +03h
0000248F:	CALL 255Fh
00002492:	CP FEh
00002494:	RET NZ
00002495:	PUSH HL
00002496:	CALL 255Fh
00002499:	LD A,(HL)
0000249A:	OR A
0000249B:	JR Z,-1Dh
0000249D:	INC HL
0000249E:	BIT 7,(HL)
000024A0:	RES 7,(HL)
000024A2:	DEC HL
000024A3:	JR NZ,+07h
000024A5:	EX DE,HL
000024A6:	POP HL
000024A7:	CALL 24C6h
000024AA:	JR -23h
000024AC:	EX DE,HL
000024AD:	POP HL
000024AE:	PUSH HL
000024AF:	PUSH DE
000024B0:	CALL 24C6h
000024B3:	POP DE
000024B4:	PUSH DE
000024B5:	PUSH BC
000024B6:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
000024B9:	POP BC
000024BA:	POP DE
000024BB:	POP HL
000024BC:	CALL 2542h
000024BF:	PUSH BC
000024C0:	CALL 70BDh		; DIV:
000024C3:	POP BC
000024C4:	JR -3Dh

000024C6:	PUSH BC
000024C7:	PUSH HL
000024C8:	PUSH DE
000024C9:	LD HL,0008h
000024CC:	ADD HL,DE
000024CD:	EX DE,HL
000024CE:	PUSH DE
000024CF:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000024D2:	POP HL
000024D3:	CALL 6010h		; 'FIX'
000024D6:	EX DE,HL
000024D7:	POP HL
000024D8:	CALL 61D6h		; CMP:
000024DB:	JR Z,+12h
000024DD:	POP DE
000024DE:	PUSH DE
000024DF:	CALL 2542h
000024E2:	CALL 78BDh
000024E5:	EX DE,HL
000024E6:	POP HL
000024E7:	CALL 6FE0h		; MUL:
000024EA:	CALL 77CAh		; 'EXP'
000024ED:	POP BC
000024EE:	RET

000024EF:	LD A,(HL)
000024F0:	CP 86h			; Token code for 'LIST'
000024F2:	JR NC,-17h
000024F4:	EX HL,(SP)
000024F5:	LD A,(HL)
000024F6:	EX HL,(SP)
000024F7:	CP 88h			; Token code for 'AUTO'
000024F9:	JR NC,-1Eh
000024FB:	CALL 2D97h		; HLFLT_2
000024FE:	LD A,L
000024FF:	POP HL
00002500:	PUSH AF
00002501:	PUSH HL
00002502:	LD DE,7A4Fh
00002505:	PUSH DE
00002506:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00002509:	POP HL
0000250A:	LD B,04h
0000250C:	PUSH BC
0000250D:	EX DE,HL
0000250E:	LD HL,0008h
00002511:	ADD HL,DE
00002512:	EX DE,HL
00002513:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00002516:	LD E,L
00002517:	LD D,H
00002518:	CALL 6FE0h		; MUL:
0000251B:	POP BC
0000251C:	DJNZ -12h
0000251E:	POP HL
0000251F:	PUSH HL
00002520:	EX DE,HL
00002521:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00002524:	POP HL
00002525:	POP AF
00002526:	LD DE,7A4Fh
00002529:	LD B,05h
0000252B:	RRCA
0000252C:	JR NC,+09h
0000252E:	PUSH AF
0000252F:	PUSH BC
00002530:	PUSH DE
00002531:	CALL 6FE0h		; MUL:
00002534:	POP DE
00002535:	POP BC
00002536:	POP AF
00002537:	PUSH HL
00002538:	LD HL,0008h
0000253B:	ADD HL,DE
0000253C:	EX DE,HL
0000253D:	POP HL
0000253E:	DJNZ -15h
00002540:	POP BC
00002541:	RET
00002542:	PUSH BC
00002543:	PUSH HL
00002544:	PUSH DE
00002545:	EX DE,HL
00002546:	LD DE,62F2h
00002549:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000254C:	POP DE
0000254D:	POP HL
0000254E:	PUSH DE
0000254F:	PUSH HL
00002550:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00002553:	POP DE
00002554:	PUSH DE
00002555:	LD HL,62F2h
00002558:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000255B:	POP HL
0000255C:	POP DE
0000255D:	POP BC
0000255E:	RET
0000255F:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002562:	CP 20h
00002564:	JP C,25CCh
00002567:	CP F8h
00002569:	JR Z,-0Ch
0000256B:	CP F9h			; Token code for '-'
0000256D:	JP Z,2585h
00002570:	CP 41h
00002572:	JP NC,2624h
00002575:	CP 28h
00002577:	JR Z,+1Dh
00002579:	CP 29h
0000257B:	JP Z,173Ah		; ERROR: Syntax error
0000257E:	CP 22h
00002580:	JP Z,28B5h
00002583:	JR +32h
00002585:	CALL 255Fh
00002588:	PUSH AF
00002589:	LD A,(IY+00h)	; data type, aka PRCSON
0000258C:	CP 03h			; string type ?
0000258E:	JP Z,1732h		; ERROR: Type mismatch
00002591:	CALL 6BEBh		; TOGLE:  toggle number sign
00002594:	POP AF
00002595:	RET

00002596:	DEC IY
00002598:	LD (IY+00h),00h	; data type, aka PRCSON
0000259C:	CALL 22F2h		; --
0000259F:	CALL 2D66h		; check for ')'
000025A2:	LD A,(IY+00h)	; data type, aka PRCSON
000025A5:	INC IY
000025A7:	CP 03h			; string type ?
000025A9:	JR Z,+06h
000025AB:	CALL 28EBh
000025AE:	JP 25C4h		; skip SPACEs in (BC), A=next char
000025B1:	CALL 28D9h
000025B4:	JP 25C4h		; skip SPACEs in (BC), A=next char

000025B7:	LD D,A
000025B8:	XOR A
000025B9:	CP (IY+00h)	; data type, aka PRCSON
000025BC:	LD A,D
000025BD:	DEC BC
000025BE:	RET Z

000025BF:	LD A,16h
000025C1:	JP 2196h		; error handling

; skip SPACEs in (BC), A=next char
000025C4:	LD A,(BC)
000025C5:	INC BC
000025C6:	CP 20h
000025C8:	RET NZ
000025C9:	JP 25C4h	; skip SPACEs in (BC), A=next char

000025CC:	CP 0Bh
000025CE:	JR NC,+16h
000025D0:	OR A
000025D1:	JR Z,-14h
000025D3:	DEC A
000025D4:	LD DE,0008h
000025D7:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000025D8:	LD E,A
000025D9:	LD D,00h
000025DB:	LD A,04h
000025DD:	CALL 28EBh
000025E0:	CALL 2902h		; FLTHEX:  (HL)=DE
000025E3:	JP 25C4h		; skip SPACEs in (BC), A=next char

000025E6:	CP 14h
000025E8:	JR NC,+19h
000025EA:	CP 0Bh
000025EC:	LD DE,0008h
000025EF:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000025F0:	JR Z,+08h
000025F2:	LD A,(BC)
000025F3:	LD E,A
000025F4:	INC BC
000025F5:	LD A,(BC)
000025F6:	LD D,A
000025F7:	INC BC
000025F8:	JR -1Fh
000025FA:	CALL 25F2h
000025FD:	PUSH AF
000025FE:	CALL 3778h
00002601:	POP AF
00002602:	RET

00002603:	CP 19h
00002605:	JP NC,173Ah		; ERROR: Syntax error
00002608:	LD DE,0008h
0000260B:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
0000260C:	AND 0Fh
0000260E:	CALL 28EBh
00002611:	CP 04h		; single precision variable type?
00002613:	CALL Z,28A9h		; CLRFAC: Set FP accumulator to 0
00002616:	PUSH HL
00002617:	EX DE,HL
00002618:	LD L,C
00002619:	LD H,B
0000261A:	LD B,00h
0000261C:	LD C,A
0000261D:	LDIR
0000261F:	LD C,L
00002620:	LD B,H
00002621:	POP HL
00002622:	JR -41h

00002624:	CP FFh
00002626:	JP Z,2761h
00002629:	CP 5Ch
0000262B:	JP NC,173Ah		; ERROR: Syntax error
0000262E:	LD DE,0000h
00002631:	EX AF,AF'
00002632:	LD A,E
00002633:	OR D
00002634:	JR NZ,+3Dh
00002636:	EX AF,AF'
00002637:	LD DE,0008h
0000263A:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
0000263B:	EX DE,HL
0000263C:	CALL 1EDAh
0000263F:	EX DE,HL
00002640:	CALL 28A9h		; CLRFAC: Set FP accumulator to 0
00002643:	PUSH HL
00002644:	PUSH BC
00002645:	CP 03h
00002647:	JR Z,+13h
00002649:	CP 02h
0000264B:	JR Z,+17h
0000264D:	CALL 28EBh
00002650:	LD B,A
00002651:	LD A,(DE)
00002652:	LD (HL),A
00002653:	INC HL
00002654:	INC DE
00002655:	DJNZ -06h
00002657:	POP BC
00002658:	POP HL
00002659:	JP 25C4h		; skip SPACEs in (BC), A=next char

0000265C:	CALL 28D9h
0000265F:	LD (HL),E
00002660:	INC HL
00002661:	LD (HL),D
00002662:	JR -0Dh
00002664:	LD A,04h		; single precision variable type
00002666:	CALL 28EBh
00002669:	EX DE,HL
0000266A:	CALL 2AA3h		; LD HL,(HL)
0000266D:	EX DE,HL
0000266E:	CALL 2902h		; FLTHEX:  (HL)=DE
00002671:	JR -1Ch
00002673:	EX AF,AF'
00002674:	PUSH HL
00002675:	PUSH AF
00002676:	PUSH BC
00002677:	CALL 20FEh		; VSRTST:
0000267A:	LD (26C3h),BC
0000267E:	CP 28h
00002680:	JR NZ,+05h
00002682:	POP BC
00002683:	POP AF
00002684:	POP HL
00002685:	JR -50h
00002687:	LD A,E
00002688:	LD (26ADh),A
0000268B:	LD (26BAh),A
0000268E:	XOR A
0000268F:	EX AF,AF'
00002690:	EX DE,HL
00002691:	LD HL,(262Fh)
00002694:	LD C,(HL)
00002695:	INC HL
00002696:	LD B,(HL)
00002697:	PUSH DE
00002698:	EX AF,AF'
00002699:	INC A
0000269A:	EX AF,AF'
0000269B:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000269E:	CALL 20FEh		; VSRTST:
000026A1:	CP 29h
000026A3:	JR Z,+12h
000026A5:	CP 2Ch		; ','
000026A7:	JP NZ,173Ah		; ERROR: Syntax error
000026AA:	LD A,E
000026AB:	POP DE
000026AC:	CP 00h
000026AE:	JR NZ,-19h
000026B0:	OR A
000026B1:	SBC HL,DE
000026B3:	JR NZ,-1Eh
000026B5:	JR +0Bh
000026B7:	LD A,E
000026B8:	POP DE
000026B9:	CP 00h
000026BB:	JR NZ,-3Bh
000026BD:	OR A
000026BE:	SBC HL,DE
000026C0:	JR NZ,-40h
000026C2:	LD BC,0000h
000026C5:	EX AF,AF'
000026C6:	LD E,A
000026C7:	LD A,(26BAh)
000026CA:	CP 03h
000026CC:	JR Z,+05h
000026CE:	CALL 28EBh
000026D1:	JR +03h
000026D3:	CALL 28D9h
000026D6:	POP HL
000026D7:	POP HL
000026D8:	POP HL
000026D9:	DEC BC
000026DA:	PUSH BC
000026DB:	PUSH HL
000026DC:	LD HL,(262Fh)
000026DF:	INC HL
000026E0:	INC HL
000026E1:	LD C,(HL)
000026E2:	INC HL
000026E3:	LD B,(HL)
000026E4:	DEC E
000026E5:	JR Z,+05h
000026E7:	CALL 2708h
000026EA:	JR -08h
000026EC:	LD HL,(262Fh)
000026EF:	POP DE
000026F0:	PUSH HL
000026F1:	INC HL
000026F2:	INC HL
000026F3:	INC HL
000026F4:	INC HL
000026F5:	CALL 2AA3h		; LD HL,(HL)
000026F8:	LD (262Fh),HL
000026FB:	EX DE,HL
000026FC:	CALL 22F2h		; --
000026FF:	POP DE
00002700:	LD (262Fh),DE
00002704:	POP BC
00002705:	JP 25C4h		; skip SPACEs in (BC), A=next char

00002708:	CALL 2710h
0000270B:	CP 2Ch		; ','
0000270D:	JR NZ,-07h
0000270F:	RET

00002710:	CALL 272Dh
00002713:	CP 28h
00002715:	RET NZ
00002716:	CALL 2710h
00002719:	CP 29h
0000271B:	RET Z
0000271C:	JR -08h
0000271E:	CALL 272Dh
00002721:	CP 29h
00002723:	RET Z
00002724:	CP 28h
00002726:	JR NZ,-0Ah
00002728:	CALL 271Eh
0000272B:	JR -0Fh
0000272D:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002730:	OR A
00002731:	JP Z,173Ah		; ERROR: Syntax error
00002734:	CP 3Ah
00002736:	JR Z,-07h
00002738:	CP 22h
0000273A:	JR Z,+19h
0000273C:	CP 20h
0000273E:	RET NC
0000273F:	CP 12h
00002741:	JR C,+0Ah
00002743:	AND 0Fh
00002745:	ADD C
00002746:	LD C,A
00002747:	LD A,00h
00002749:	ADC B
0000274A:	LD B,A
0000274B:	JR -20h
0000274D:	CP 0Bh
0000274F:	JR C,-24h
00002751:	LD A,02h
00002753:	JR -10h
00002755:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002758:	CP 22h
0000275A:	JR Z,-2Fh
0000275C:	OR A
0000275D:	JR Z,-2Eh
0000275F:	JR -0Ch
00002761:	LD A,(BC)
00002762:	INC BC
00002763:	CP A0h
00002765:	JP NC,278Ch
00002768:	PUSH HL
00002769:	LD HL,2781h
0000276C:	EX HL,(SP)
0000276D:	PUSH HL
0000276E:	CALL 289Ch		; parse FN jump table
00002771:	EX HL,(SP)
00002772:	CALL 2D58h		; check for '('
00002775:	DEC IY
00002777:	LD (IY+00h),00h	; data type, aka PRCSON
0000277B:	CALL 229Ch		; DEEXP:
0000277E:	JP 2D66h		; check for ')'
00002781:	LD A,(IY+00h)	; data type, aka PRCSON
00002784:	INC IY
00002786:	CALL 28EBh
00002789:	JP 25C4h		; skip SPACEs in (BC), A=next char

0000278C:	CP A9h			; Token code for 'DEF'
0000278E:	JP NC,279Ch
00002791:	PUSH HL
00002792:	LD HL,2797h
00002795:	JR -2Bh
00002797:	INC IY
00002799:	JP 25B1h

0000279C:	CP B2h			; >=?
0000279E:	JP NC,27C5h
000027A1:	PUSH HL
000027A2:	LD HL,27BAh
000027A5:	EX HL,(SP)
000027A6:	PUSH HL
000027A7:	CALL 289Ch		; parse FN jump table
000027AA:	EX HL,(SP)
000027AB:	CALL 2D58h		; check for '('
000027AE:	DEC IY
000027B0:	LD (IY+00h),00h	; data type, aka PRCSON
000027B4:	CALL 22B5h
000027B7:	JP 2D66h		; check for ')'

000027BA:	LD A,(IY+00h)	; data type, aka PRCSON
000027BD:	INC IY
000027BF:	CALL 28EBh
000027C2:	JP 25C4h		; skip SPACEs in (BC), A=next char

000027C5:	PUSH HL
000027C6:	CALL 289Ch		; parse FN jump table
000027C9:	EX HL,(SP)
000027CA:	RET

; 'LEN'
000027CB:	PUSH BC
000027CC:	PUSH DE
000027CD:	PUSH HL
000027CE:	CALL 6BF6h		; Load a string parameter
000027D1:	CALL 2AA3h		; LD HL,(HL)
000027D4:	JR +12h

; 'ASC'
000027D6:	PUSH BC
000027D7:	PUSH DE
000027D8:	PUSH HL
000027D9:	CALL 6BF6h		; Load a string parameter
000027DC:	CALL 2AA3h		; LD HL,(HL)
000027DF:	LD A,(HL)
000027E0:	OR A
000027E1:	JP Z,1736h		; ERROR: Illegal function call
000027E4:	INC HL
000027E5:	CALL 2AA3h		; LD HL,(HL)
000027E8:	LD E,(HL)
000027E9:	LD D,00h
000027EB:	POP HL
000027EC:	LD (IY+00h),04h	; data type, aka PRCSON: single precision
000027F0:	CALL 28A9h		; CLRFAC: Set FP accumulator to 0
000027F3:	CALL 2902h		; FLTHEX:  (HL)=DE
000027F6:	POP DE
000027F7:	POP BC
000027F8:	RET

; 'VAL'
000027F9:	PUSH BC
000027FA:	PUSH DE
000027FB:	PUSH HL
000027FC:	CALL 6BF6h		; Load a string parameter
000027FF:	CALL 2AA3h		; LD HL,(HL)
00002802:	LD A,(HL)
00002803:	OR A
00002804:	JR Z,+1Ah

00002806:	INC HL
00002807:	CALL 2AA3h		; LD HL,(HL)
0000280A:	LD B,A
0000280B:	LD DE,7A4Fh
0000280E:	LD A,(HL)
0000280F:	LD (DE),A
00002810:	INC HL
00002811:	INC DE
00002812:	DJNZ -06h
00002814:	XOR A
00002815:	LD (DE),A
00002816:	LD DE,7A4Fh
00002819:	POP HL
0000281A:	CALL 5BB8h	; ....get number
0000281D:	POP DE
0000281E:	POP BC
0000281F:	RET

00002820:	LD DE,7A4Fh
00002823:	JR -11h
00002825:	NOP
00002826:	NOP
00002827:	NOP

; 'INKEY$'
00002828:	LD DE,0008h
0000282B:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
0000282C:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000282F:	CP 28h
00002831:	DEC BC
00002832:	JR NZ,+20h
00002834:	INC BC
00002835:	PUSH HL
00002836:	DEC IY
00002838:	LD (IY+00h),00h	; data type, aka PRCSON
0000283C:	CALL 229Ch		; DEEXP:
0000283F:	CALL 2D66h		; check for ')'
00002842:	INC IY
00002844:	CALL 2D97h		; HLFLT_2
00002847:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000284A:	POP HL
0000284B:	LD (0C7Fh),A
0000284E:	CALL 0C62h			; ASCGET:
00002851:	JP 2862h

00002854:	XOR A
00002855:	LD (0C7Fh),A
00002858:	CALL 0C62h			; ASCGET:
0000285B:	CP 00h
0000285D:	JR Z,+06h
0000285F:	LD (285Ch),A
00002862:	OR A
00002863:	JR NZ,+0Ah
00002865:	LD DE,2825h
00002868:	LD (HL),E
00002869:	INC HL
0000286A:	LD (HL),D
0000286B:	DEC HL
0000286C:	JP 25B1h
0000286F:	CALL 287Ch
00002872:	JR -08h

; 'CHR$'
00002874:	PUSH HL
00002875:	CALL 2D97h		; HLFLT_2
00002878:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000287B:	POP HL
0000287C:	PUSH HL
0000287D:	PUSH DE
0000287E:	LD E,L
0000287F:	LD D,H
00002880:	INC DE
00002881:	INC DE
00002882:	LD (HL),E
00002883:	INC HL
00002884:	LD (HL),D
00002885:	INC HL
00002886:	PUSH HL
00002887:	LD (HL),01h
00002889:	INC HL
0000288A:	INC DE
0000288B:	INC DE
0000288C:	INC DE
0000288D:	INC DE
0000288E:	INC DE
0000288F:	LD (HL),E
00002890:	INC HL
00002891:	LD (HL),D
00002892:	LD (DE),A
00002893:	POP HL
00002894:	LD E,L
00002895:	LD D,H
00002896:	CALL 2D9Eh
00002899:	POP DE
0000289A:	POP HL
0000289B:	RET

; parse FN jump table
0000289C:	LD HL,3006h	; FN Jump table

; get value from jump table, token code in A
0000289F:	SUB 81h
000028A1:	ADD A
000028A2:	LD E,A
000028A3:	LD D,00h
000028A5:	ADD HL,DE
000028A6:	JP 2AA3h		; LD HL,(HL)

; CLRFAC: Set FP accumulator to 0
000028A9:	PUSH HL
000028AA:	PUSH BC
000028AB:	LD B,08h
000028AD:	LD (HL),00h
000028AF:	INC HL
000028B0:	DJNZ -05h
000028B2:	POP BC
000028B3:	POP HL
000028B4:	RET

000028B5:	LD DE,0008h
000028B8:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000028B9:	INC HL
000028BA:	INC HL
000028BB:	LD (HL),00h
000028BD:	INC HL
000028BE:	LD (HL),C
000028BF:	INC HL
000028C0:	LD (HL),B
000028C1:	DEC HL
000028C2:	DEC HL
000028C3:	LD A,(BC)
000028C4:	INC (HL)
000028C5:	OR A
000028C6:	JR Z,+05h
000028C8:	INC BC
000028C9:	CP 22h
000028CB:	JR NZ,-0Ah
000028CD:	DEC (HL)
000028CE:	PUSH DE
000028CF:	LD E,L
000028D0:	LD D,H
000028D1:	DEC HL
000028D2:	LD (HL),D
000028D3:	DEC HL
000028D4:	LD (HL),E
000028D5:	POP DE
000028D6:	JP 25B1h

000028D9:	PUSH AF
000028DA:	LD A,(IY+00h)	; data type, aka PRCSON
000028DD:	OR A
000028DE:	JR Z,+05h
000028E0:	CP 03h
000028E2:	JP NZ,1732h		; ERROR: Type mismatch
000028E5:	POP AF
000028E6:	LD (IY+00h),03h	; data type, aka PRCSON, string type
000028EA:	RET

000028EB:	PUSH AF
000028EC:	LD A,(IY+00h)	; data type, aka PRCSON
000028EF:	OR A
000028F0:	JR Z,+0Bh
000028F2:	CP 03h
000028F4:	JP Z,1732h		; ERROR: Type mismatch
000028F7:	POP AF
000028F8:	CP 04h		; single precision variable type?
000028FA:	RET Z
000028FB:	JR +01h
000028FD:	POP AF
000028FE:	LD (IY+00h),A	; data type, aka PRCSON
00002901:	RET

; FLTHEX:  (HL)=DE
00002902:	CALL 28A9h		; CLRFAC: Set FP accumulator to 0
00002905:	LD A,E
00002906:	OR D
00002907:	RET Z
00002908:	BIT 7,D
0000290A:	JR Z,+0Dh
0000290C:	LD A,D
0000290D:	CPL
0000290E:	LD D,A
0000290F:	LD A,E
00002910:	CPL
00002911:	LD E,A
00002912:	INC DE
00002913:	CALL 2919h
00002916:	JP 6BEBh		; TOGLE:  toggle number sign

00002919:	LD A,91h
0000291B:	DEC A
0000291C:	BIT 7,D
0000291E:	JR NZ,+06h
00002920:	RL E
00002922:	RL D
00002924:	JR -0Bh
00002926:	LD (HL),A
00002927:	INC HL
00002928:	RES 7,D
0000292A:	LD (HL),D
0000292B:	INC HL
0000292C:	LD (HL),E
0000292D:	DEC HL
0000292E:	DEC HL
0000292F:	RET

; 'DEFINT'
00002930:	LD C,02h		; integer variable type
00002932:	JR +0Ah
; 'DEFSTR'
00002934:	LD C,03h		; string variable type
00002936:	JR +06h
; 'DEFSGN'
00002938:	LD C,04h		; single precision variable type
0000293A:	JR +02h
; 'DEFDBL'
0000293C:	LD C,08h		; double precision variable type
0000293E:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00002941:	CP 5Bh			; '['  (some BASIC subtracts "A" and checks for 26)
00002943:	RET NC
00002944:	SUB 41h
00002946:	RET C
00002947:	LD E,A
00002948:	LD D,00h
0000294A:	LD B,A
0000294B:	PUSH HL
0000294C:	LD HL,3088h
0000294F:	ADD HL,DE
00002950:	LD (HL),C
00002951:	EX DE,HL
00002952:	POP HL
00002953:	CALL 2986h		; skip SPACEs in (++HL), A=next char
00002956:	INC HL
00002957:	CP 2Ch		; ','
00002959:	JR Z,-1Dh
0000295B:	DEC HL
0000295C:	CP F9h			; Token code for '-'
0000295E:	RET NZ
0000295F:	CALL 2986h		; skip SPACEs in (++HL), A=next char
00002962:	CP 5Bh			; '['  (some BASIC subtracts "A" and checks for 26)
00002964:	RET NC
00002965:	SUB 41h
00002967:	RET C
00002968:	SUB B
00002969:	RET C
0000296A:	RET Z
0000296B:	EX DE,HL
0000296C:	INC HL
0000296D:	LD (HL),C
0000296E:	DEC A
0000296F:	JR NZ,-05h
00002971:	EX DE,HL
00002972:	JR -21h

; 'CALL'
00002974:	LD C,L
00002975:	LD B,H
00002976:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00002979:	PUSH BC
0000297A:	PUSH IY
0000297C:	LD BC,2981h		; RET address
0000297F:	PUSH BC
00002980:	LD PC,HL

00002981:	POP IY			; <-- RETurn here
00002983:	POP HL
00002984:	DEC HL
00002985:	RET

; skip SPACEs in (++HL), A=next char
00002986:	INC HL
; IDEEXP: DE= (HL), A=next character to be parsed
00002987:	LD A,(HL)
00002988:	CP 20h
0000298A:	RET NZ
0000298B:	JR -07h

; 'INT'
0000298D:	INC HL
0000298E:	BIT 7,(HL)
00002990:	DEC HL
00002991:	JP Z,6010h		; 'FIX'
00002994:	PUSH DE
00002995:	PUSH HL
00002996:	LD DE,0008h
00002999:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
0000299A:	EX DE,HL
0000299B:	POP HL
0000299C:	PUSH HL
0000299D:	PUSH DE
0000299E:	PUSH BC
0000299F:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000029A2:	POP BC
000029A3:	POP HL
000029A4:	CALL 6010h		; 'FIX'
000029A7:	EX DE,HL
000029A8:	POP HL
000029A9:	CALL 61D6h		; CMP:
000029AC:	JR Z,+08h
000029AE:	CALL 6010h		; 'FIX'
000029B1:	PUSH BC
000029B2:	CALL 6BCEh		; ONESUB:
000029B5:	POP BC
000029B6:	POP DE
000029B7:	RET

; 'STRING$'
000029B8:	CALL 2D58h		; check for '('
000029BB:	DEC IY
000029BD:	PUSH HL
000029BE:	CALL 229Ch		; DEEXP:
000029C1:	CALL 2D61h		; CH2CH: Check for comma ','
000029C4:	CALL 2D97h		; HLFLT_2
000029C7:	CALL 22D8h		; Check byte overflow for value in DE and put in A
000029CA:	POP HL
000029CB:	PUSH AF
000029CC:	CALL 229Ch		; DEEXP:
000029CF:	INC IY
000029D1:	PUSH HL
000029D2:	CALL 2D97h		; HLFLT_2
000029D5:	CALL 22D8h		; Check byte overflow for value in DE and put in A
000029D8:	LD (29FFh),A		; Character set with Self Modifying code (in space$)
000029DB:	POP HL
000029DC:	POP AF
000029DD:	CALL 29E3h
000029E0:	JP 25B1h

000029E3:	PUSH BC
000029E4:	PUSH DE
000029E5:	PUSH HL
000029E6:	JR +0Eh

; 'SPACE$'
000029E8:	LD A,20h
000029EA:	LD (29FFh),A		; Character set with Self Modifying code
000029ED:	PUSH BC
000029EE:	PUSH DE
000029EF:	PUSH HL
000029F0:	CALL 2D97h		; HLFLT_2
000029F3:	CALL 22D8h		; Check byte overflow for value in DE and put in A
000029F6:	OR A
000029F7:	JR Z,+0Ah
000029F9:	LD B,A
000029FA:	LD C,B
000029FB:	LD HL,7A4Fh
000029FE:	LD (HL),20h		; Character set with Self Modifying code
00002A00:	INC HL
00002A01:	DJNZ -05h
00002A03:	POP HL
00002A04:	LD DE,7A4Fh
00002A07:	LD B,C
00002A08:	CALL 2B1Ah
00002A0B:	POP DE
00002A0C:	POP BC
00002A0D:	RET

; 'FRAC'
00002A0E:	PUSH BC
00002A0F:	CALL 6095h
00002A12:	POP BC
00002A13:	RET

; 'PEEK'
00002A14:	PUSH DE
00002A15:	PUSH HL
00002A16:	CALL 2D97h		; HLFLT_2
00002A19:	LD E,(HL)
00002A1A:	LD D,00h
00002A1C:	POP HL
00002A1D:	CALL 2902h		; FLTHEX:  (HL)=DE
00002A20:	POP DE
00002A21:	LD (IY+00h),04h	; data type, aka PRCSON,  single precision
00002A25:	RET

; 'HEX$'
00002A26:	PUSH BC
00002A27:	PUSH DE
00002A28:	PUSH HL
00002A29:	PUSH HL
00002A2A:	LD DE,7A4Fh
00002A2D:	CALL 2D97h		; HLFLT_2
00002A30:	CALL 6712h
00002A33:	LD B,04h
00002A35:	LD A,(DE)
00002A36:	CP 30h
00002A38:	JR NZ,+20h
00002A3A:	INC DE
00002A3B:	DEC B
00002A3C:	JR NZ,-09h
00002A3E:	INC B
00002A3F:	DEC DE
00002A40:	JR +18h

; 'OCT$'
00002A42:	PUSH BC
00002A43:	PUSH DE
00002A44:	PUSH HL
00002A45:	PUSH HL
00002A46:	LD DE,7A4Fh
00002A49:	CALL 2D97h		; HLFLT_2
00002A4C:	CALL 66DBh
00002A4F:	LD B,06h
00002A51:	JR -1Eh

; 'STR$'
00002A53:	PUSH BC
00002A54:	PUSH DE
00002A55:	PUSH HL
00002A56:	PUSH HL
00002A57:	CALL 5D58h
00002A5A:	EX DE,HL
00002A5B:	EX HL,(SP)
00002A5C:	LD E,L
00002A5D:	LD D,H
00002A5E:	INC DE
00002A5F:	INC DE
00002A60:	LD (HL),E
00002A61:	INC HL
00002A62:	LD (HL),D
00002A63:	INC HL
00002A64:	LD (HL),B
00002A65:	INC HL
00002A66:	POP DE
00002A67:	LD (HL),E
00002A68:	INC HL
00002A69:	LD (HL),D
00002A6A:	DEC HL
00002A6B:	DEC HL
00002A6C:	LD E,L
00002A6D:	LD D,H
00002A6E:	CALL 2D9Eh
00002A71:	POP HL
00002A72:	POP DE
00002A73:	POP BC
00002A74:	RET

; 'MKI$'
00002A75:	PUSH BC
00002A76:	PUSH DE
00002A77:	PUSH HL
00002A78:	PUSH HL
00002A79:	CALL 2D97h		; HLFLT_2
00002A7C:	LD (1EA9h),HL
00002A7F:	LD B,02h
00002A81:	LD DE,1EA9h
00002A84:	POP HL
00002A85:	PUSH HL
00002A86:	JR -2Eh

; 'MKS$'
00002A88:	PUSH BC
00002A89:	LD BC,0004h
00002A8C:	JR +04h

; 'MKD$'
00002A8E:	PUSH BC
00002A8F:	LD BC,0008h
00002A92:	PUSH DE
00002A93:	PUSH HL
00002A94:	PUSH HL
00002A95:	LD DE,62F2h
00002A98:	PUSH DE
00002A99:	PUSH BC
00002A9A:	LDIR
00002A9C:	POP BC
00002A9D:	POP DE
00002A9E:	POP HL
00002A9F:	PUSH HL
00002AA0:	LD B,C
00002AA1:	JR -49h

00002AA3:	PUSH DE
00002AA4:	LD E,(HL)
00002AA5:	INC HL
00002AA6:	LD D,(HL)
00002AA7:	EX DE,HL
00002AA8:	POP DE
00002AA9:	RET

; 'CVI'
00002AAA:	PUSH BC
00002AAB:	PUSH HL
00002AAC:	CALL 6BF6h		; Load a string parameter
00002AAF:	CALL 2AA3h		; LD HL,(HL)
00002AB2:	LD A,(HL)
00002AB3:	CP 02h			; integer type ?
00002AB5:	JP NZ,1736h		; ERROR: Illegal function call
00002AB8:	INC HL
00002AB9:	CALL 2AA3h		; LD HL,(HL)
00002ABC:	CALL 2AA3h		; LD HL,(HL)
00002ABF:	EX DE,HL
00002AC0:	POP HL
00002AC1:	CALL 2902h		; FLTHEX:  (HL)=DE
00002AC4:	POP BC
00002AC5:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00002AC9:	RET

;'CVD'
00002ACA:	PUSH BC
00002ACB:	LD C,08h		; double precision variable type
00002ACD:	JR +03h

;'CVS'
00002ACF:	PUSH BC
00002AD0:	LD C,04h		; single precision variable type
00002AD2:	PUSH HL
00002AD3:	CALL 6BF6h		; Load a string parameter
00002AD6:	CALL 2AA3h		; LD HL,(HL)
00002AD9:	LD A,(HL)
00002ADA:	CP C
00002ADB:	JP NZ,1736h		; ERROR: Illegal function call
00002ADE:	INC HL
00002ADF:	CALL 2AA3h		; LD HL,(HL)
00002AE2:	EX DE,HL
00002AE3:	POP HL
00002AE4:	PUSH HL
00002AE5:	CALL 28A9h		; CLRFAC: Set FP accumulator to 0
00002AE8:	LD B,C
00002AE9:	LD A,(DE)
00002AEA:	LD (HL),A
00002AEB:	INC HL
00002AEC:	INC DE
00002AED:	DJNZ -06h
00002AEF:	POP HL
00002AF0:	LD (IY+00h),C	; data type, aka PRCSON
00002AF3:	POP BC
00002AF4:	RET

; 'PAR'
00002AF5:	PUSH BC
00002AF6:	PUSH DE
00002AF7:	PUSH HL
00002AF8:	CALL 6BF6h		; Load a string parameter
00002AFB:	CALL 2AA3h		; LD HL,(HL)
00002AFE:	LD A,(HL)
00002AFF:	JP Z,1736h		; ERROR: Illegal function call
00002B02:	INC HL
00002B03:	CALL 2AA3h		; LD HL,(HL)
00002B06:	LD A,(HL)
00002B07:	AND A
00002B08:	LD DE,0001h
00002B0B:	JP PO,2B0Fh
00002B0E:	DEC DE
00002B0F:	POP HL
00002B10:	CALL 2902h		; FLTHEX:  (HL)=DE
00002B13:	POP DE
00002B14:	POP BC
00002B15:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00002B19:	RET

00002B1A:	PUSH BC
00002B1B:	PUSH DE
00002B1C:	PUSH HL
00002B1D:	PUSH HL
00002B1E:	JP 2A5Ah

; 'CDBL'
00002B21:	LD A,08h
00002B23:	JP 28EBh

00002B26:	LD A,(HL)
00002B27:	OR A
00002B28:	JR Z,+51h
00002B2A:	LD A,(IY+00h)	; data type, aka PRCSON
00002B2D:	CP 04h		; single precision variable type?
00002B2F:	JR Z,+4Ah
00002B31:	INC HL
00002B32:	LD A,(HL)
00002B33:	RES 7,(HL)
00002B35:	DEC HL
00002B36:	PUSH AF
00002B37:	LD A,(HL)
00002B38:	PUSH AF
00002B39:	LD (HL),99h
00002B3B:	PUSH BC
00002B3C:	CALL 73ACh		; ONEADD:
00002B3F:	POP BC
00002B40:	LD A,(HL)
00002B41:	CP 9Ah			; Token code for 'NEW'
00002B43:	JR NZ,+06h
00002B45:	POP AF
00002B46:	INC A
00002B47:	JP Z,30B8h		; ERROR: 06h
00002B4A:	PUSH AF
00002B4B:	POP AF
00002B4C:	LD (HL),A
00002B4D:	POP AF
00002B4E:	INC HL
00002B4F:	AND 80h
00002B51:	OR (HL)
00002B52:	LD (HL),A
00002B53:	DEC HL
00002B54:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00002B58:	JR +21h

; 'CINT'
00002B5A:	LD A,(HL)
00002B5B:	OR A
00002B5C:	JR Z,+1Dh
00002B5E:	PUSH HL
00002B5F:	INC HL
00002B60:	LD A,(HL)
00002B61:	PUSH AF
00002B62:	RES 7,(HL)
00002B64:	DEC HL
00002B65:	PUSH BC
00002B66:	INC (HL)
00002B67:	CALL 73ACh		; ONEADD:
00002B6A:	DEC (HL)
00002B6B:	POP BC
00002B6C:	INC HL
00002B6D:	POP AF
00002B6E:	AND 80h
00002B70:	ADD (HL)
00002B71:	LD (HL),A
00002B72:	DEC HL
00002B73:	CALL 2D97h		; HLFLT_2
00002B76:	EX DE,HL
00002B77:	POP HL
00002B78:	CALL 2902h		; FLTHEX:  (HL)=DE
00002B7B:	LD A,04h
00002B7D:	JP 28EBh

; 'LEFT$'
00002B80:	CALL 2D58h		; check for '('
00002B83:	LD DE,0008h
00002B86:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00002B87:	PUSH HL
00002B88:	CALL 22B5h
00002B8B:	CALL 2D61h		; CH2CH: Check for comma ','
00002B8E:	PUSH HL
00002B8F:	DEC IY
00002B91:	LD (IY+00h),00h	; data type, aka PRCSON
00002B95:	CALL 22C7h
00002B98:	INC IY
00002B9A:	CALL 2D66h		; check for ')'
00002B9D:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00002BA0:	POP HL
00002BA1:	PUSH HL
00002BA2:	CALL 2AA3h		; LD HL,(HL)
00002BA5:	CP (HL)
00002BA6:	JR C,+01h
00002BA8:	LD A,(HL)
00002BA9:	INC HL
00002BAA:	CALL 2AA3h		; LD HL,(HL)
00002BAD:	EX DE,HL
00002BAE:	POP IX
00002BB0:	POP HL
00002BB1:	PUSH BC
00002BB2:	LD B,A
00002BB3:	OR A
00002BB4:	JR Z,+0Fh
00002BB6:	PUSH HL
00002BB7:	PUSH BC
00002BB8:	EX DE,HL
00002BB9:	LD DE,7A4Fh
00002BBC:	PUSH DE
00002BBD:	LD C,B
00002BBE:	LD B,00h
00002BC0:	LDIR
00002BC2:	POP DE
00002BC3:	POP BC
00002BC4:	POP HL
00002BC5:	CALL 2B1Ah
00002BC8:	PUSH HL
00002BC9:	PUSH IX
00002BCB:	POP HL
00002BCC:	CALL 6BF6h		; Load a string parameter
00002BCF:	POP HL
00002BD0:	POP BC
00002BD1:	JP 25B1h

00002BD4:	CALL 2D58h		; check for '('
00002BD7:	LD DE,0008h
00002BDA:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00002BDB:	PUSH HL
00002BDC:	CALL 22B5h
00002BDF:	CALL 2D61h		; CH2CH: Check for comma ','
00002BE2:	PUSH HL
00002BE3:	DEC IY
00002BE5:	LD (IY+00h),00h	; data type, aka PRCSON
00002BE9:	CALL 22C7h
00002BEC:	INC IY
00002BEE:	CALL 2D66h		; check for ')'
00002BF1:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00002BF4:	POP HL
00002BF5:	PUSH HL
00002BF6:	CALL 2AA3h		; LD HL,(HL)
00002BF9:	CP (HL)
00002BFA:	JR C,+01h
00002BFC:	LD A,(HL)
00002BFD:	PUSH AF
00002BFE:	SUB (HL)
00002BFF:	NEG
00002C01:	INC HL
00002C02:	CALL 2AA3h		; LD HL,(HL)
00002C05:	ADD L
00002C06:	LD L,A
00002C07:	LD A,00h
00002C09:	ADC H
00002C0A:	LD H,A
00002C0B:	EX DE,HL
00002C0C:	POP AF
00002C0D:	JR -61h

00002C0F:	CALL 2D58h		; check for '('
00002C12:	LD DE,0008h
00002C15:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00002C16:	PUSH HL
00002C17:	CALL 22B5h
00002C1A:	CALL 2D61h		; CH2CH: Check for comma ','
00002C1D:	PUSH HL
00002C1E:	DEC IY
00002C20:	LD (IY+00h),00h	; data type, aka PRCSON
00002C24:	CALL 22C7h
00002C27:	INC IY
00002C29:	EX AF,AF'
00002C2A:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00002C2D:	OR A
00002C2E:	JP Z,1736h		; ERROR: Illegal function call
00002C31:	LD D,A
00002C32:	EX AF,AF'
00002C33:	CP 29h
00002C35:	LD E,FFh
00002C37:	JR Z,+19h
00002C39:	CALL 2D61h		; CH2CH: Check for comma ','
00002C3C:	POP HL
00002C3D:	PUSH HL
00002C3E:	PUSH DE
00002C3F:	DEC IY
00002C41:	LD (IY+00h),00h	; data type, aka PRCSON
00002C45:	CALL 22C7h
00002C48:	INC IY
00002C4A:	CALL 2D66h		; check for ')'
00002C4D:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00002C50:	POP DE
00002C51:	LD E,A
00002C52:	POP HL
00002C53:	PUSH HL
00002C54:	CALL 2AA3h		; LD HL,(HL)
00002C57:	LD A,D
00002C58:	DEC A
00002C59:	CP (HL)
00002C5A:	JR NC,+18h
00002C5C:	EX AF,AF'
00002C5D:	LD A,(HL)
00002C5E:	SUB D
00002C5F:	INC A
00002C60:	EX AF,AF'
00002C61:	INC HL
00002C62:	CALL 2AA3h		; LD HL,(HL)
00002C65:	ADD L
00002C66:	LD L,A
00002C67:	LD A,00h
00002C69:	ADC H
00002C6A:	LD H,A
00002C6B:	EX AF,AF'
00002C6C:	CP E
00002C6D:	JR C,+01h
00002C6F:	LD A,E
00002C70:	EX DE,HL
00002C71:	JP 2BAEh

00002C74:	LD DE,0000h
00002C77:	XOR A
00002C78:	JR -09h

; 'INSTR'
00002C7A:	PUSH HL
00002C7B:	CALL 2D58h		; check for '('
00002C7E:	LD D,01h
00002C80:	DEC IY
00002C82:	LD (IY+00h),00h	; data type, aka PRCSON
00002C86:	PUSH DE
00002C87:	CALL 22F2h		; --
00002C8A:	POP DE
00002C8B:	CALL 2D61h		; CH2CH: Check for comma ','
00002C8E:	LD A,(IY+00h)	; data type, aka PRCSON
00002C91:	CP 03h			; string type ?
00002C93:	JR Z,+11h
00002C95:	CALL 2D97h		; HLFLT_2
00002C98:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00002C9B:	LD D,A
00002C9C:	POP HL
00002C9D:	PUSH HL
00002C9E:	PUSH DE
00002C9F:	CALL 22B5h
00002CA2:	POP DE
00002CA3:	CALL 2D61h		; CH2CH: Check for comma ','
00002CA6:	PUSH DE
00002CA7:	PUSH HL
00002CA8:	CALL 22B5h
00002CAB:	CALL 2D66h		; check for ')'
00002CAE:	LD (2D11h),BC
00002CB2:	INC IY
00002CB4:	CALL 6BF6h		; Load a string parameter
00002CB7:	CALL 2AA3h		; LD HL,(HL)
00002CBA:	LD A,(HL)
00002CBB:	OR A
00002CBC:	JR Z,+5Bh
00002CBE:	INC HL
00002CBF:	CALL 2AA3h		; LD HL,(HL)
00002CC2:	EX DE,HL
00002CC3:	LD C,A
00002CC4:	POP HL
00002CC5:	CALL 6BF6h		; Load a string parameter
00002CC8:	CALL 2AA3h		; LD HL,(HL)
00002CCB:	LD A,(HL)
00002CCC:	OR A
00002CCD:	JR Z,+4Bh
00002CCF:	CP C
00002CD0:	JR C,+48h
00002CD2:	LD B,A
00002CD3:	INC HL
00002CD4:	CALL 2AA3h		; LD HL,(HL)
00002CD7:	POP AF
00002CD8:	DEC A
00002CD9:	CP B
00002CDA:	JR NC,+3Fh
00002CDC:	PUSH AF
00002CDD:	SUB B
00002CDE:	NEG
00002CE0:	CP C
00002CE1:	JR C,+37h
00002CE3:	POP AF
00002CE4:	PUSH BC
00002CE5:	PUSH DE
00002CE6:	PUSH HL
00002CE7:	PUSH AF
00002CE8:	ADD L
00002CE9:	LD L,A
00002CEA:	LD A,00h
00002CEC:	ADC H
00002CED:	LD H,A
00002CEE:	LD B,C
00002CEF:	LD A,(DE)
00002CF0:	CP (HL)
00002CF1:	JR NZ,+06h
00002CF3:	INC HL
00002CF4:	INC DE
00002CF5:	DJNZ -08h
00002CF7:	JR +07h
00002CF9:	POP AF
00002CFA:	POP HL
00002CFB:	POP DE
00002CFC:	POP BC
00002CFD:	INC A
00002CFE:	JR -27h

00002D00:	POP AF
00002D01:	POP HL
00002D02:	POP DE
00002D03:	POP BC
00002D04:	INC A
00002D05:	LD DE,0008h
00002D08:	POP HL
00002D09:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00002D0A:	LD E,A
00002D0B:	CALL 2902h		; FLTHEX:  (HL)=DE
00002D0E:	LD A,04h
00002D10:	LD BC,0000h
00002D13:	CALL 28EBh
00002D16:	JP 25C4h		; skip SPACEs in (BC), A=next char

00002D19:	POP HL
00002D1A:	POP AF
00002D1B:	XOR A
00002D1C:	JR -19h

; 'FRE'
00002D1E:	CALL 2D58h		; check for '('
00002D21:	CALL 229Ch		; DEEXP:
00002D24:	CALL 2D66h		; check for ')'
00002D27:	PUSH HL
00002D28:	LD DE,(7A3Fh)		; TMPEND
00002D2C:	LD HL,0000h
00002D2F:	ADD HL,SP
00002D30:	OR A
00002D31:	SBC HL,DE
00002D33:	EX DE,HL
00002D34:	POP HL
00002D35:	CALL 2902h		; FLTHEX:  (HL)=DE
00002D38:	LD A,04h
00002D3A:	CALL 28EBh
00002D3D:	JP 25C4h		; skip SPACEs in (BC), A=next char

; 'VARPTR'
00002D40:	CALL 2D58h		; check for '('
00002D43:	PUSH HL
00002D44:	EX DE,HL
00002D45:	CALL 1ED7h		; GETVAR:
00002D48:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002D4B:	CALL 2D66h		; check for ')'
00002D4E:	EX DE,HL
00002D4F:	POP HL
00002D50:	PUSH DE
00002D51:	LD DE,0008h
00002D54:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00002D55:	POP DE
00002D56:	JR -23h

; check for '('
00002D58:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00002D5B:	CP 28h		; '('
00002D5D:	RET Z
00002D5E:	JP 173Ah		; ERROR: Syntax error

00002D61:	CP 2Ch		; ','
00002D63:	RET Z
00002D64:	JR -08h

; check for ')'
00002D66:	CP 29h
00002D68:	RET Z
00002D69:	JR -0Dh

; 'MEM$'
00002D6B:	CALL 2D58h		; check for '('
00002D6E:	DEC IY
00002D70:	PUSH HL
00002D71:	CALL 229Ch		; DEEXP:
00002D74:	CALL 2D61h		; CH2CH: Check for comma ','
00002D77:	CALL 2D97h		; HLFLT_2
00002D7A:	EX DE,HL
00002D7B:	POP HL
00002D7C:	PUSH DE
00002D7D:	CALL 229Ch		; DEEXP:
00002D80:	CALL 2D66h		; check for ')'
00002D83:	INC IY
00002D85:	PUSH HL
00002D86:	CALL 2D97h		; HLFLT_2
00002D89:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00002D8C:	POP HL
00002D8D:	POP DE
00002D8E:	PUSH BC
00002D8F:	LD B,A
00002D90:	CALL 2B1Ah
00002D93:	POP BC
00002D94:	JP 25B1h

; HLFLT_2
00002D97:	CALL 6167h		; HLFLT
00002D9A:	RET NC
00002D9B:	JP 30B8h		; ERROR: 06h

00002D9E:	PUSH BC
00002D9F:	PUSH HL
00002DA0:	PUSH DE
00002DA1:	XOR A
00002DA2:	LD B,(HL)
00002DA3:	OR B
00002DA4:	JR Z,+3Dh
00002DA6:	INC HL
00002DA7:	LD E,(HL)
00002DA8:	INC HL
00002DA9:	LD D,(HL)
00002DAA:	LD HL,(7A3Dh)
00002DAD:	XOR A
00002DAE:	LD C,B
00002DAF:	LD B,A
00002DB0:	SBC HL,BC
00002DB2:	DEC HL
00002DB3:	DEC HL
00002DB4:	PUSH HL
00002DB5:	PUSH DE
00002DB6:	LD DE,(7A41h)
00002DBA:	OR A
00002DBB:	SBC HL,DE
00002DBD:	POP DE
00002DBE:	POP HL
00002DBF:	JR C,+76h
00002DC1:	LD (7A3Dh),HL
00002DC4:	EX DE,HL
00002DC5:	EX HL,(SP)
00002DC6:	EX DE,HL
00002DC7:	LD (HL),E
00002DC8:	INC HL
00002DC9:	LD (HL),D
00002DCA:	INC HL
00002DCB:	EX DE,HL
00002DCC:	EX HL,(SP)
00002DCD:	EX DE,HL
00002DCE:	LD B,C
00002DCF:	PUSH HL
00002DD0:	LD A,(DE)
00002DD1:	LD (HL),A
00002DD2:	INC HL
00002DD3:	INC DE
00002DD4:	DJNZ -06h
00002DD6:	POP DE
00002DD7:	POP BC
00002DD8:	POP HL
00002DD9:	INC HL
00002DDA:	LD (HL),E
00002DDB:	INC HL
00002DDC:	LD (HL),D
00002DDD:	DEC HL
00002DDE:	DEC HL
00002DDF:	LD D,B
00002DE0:	LD E,C
00002DE1:	POP BC
00002DE2:	RET

00002DE3:	LD DE,0000h
00002DE6:	JR -11h
00002DE8:	LD (2EC1h),HL
00002DEB:	LD (2EC4h),DE
00002DEF:	LD (2EC7h),BC
00002DF3:	POP HL
00002DF4:	LD (2ECAh),HL
00002DF7:	CALL 2ECCh
00002DFA:	LD HL,(7A3Dh)
00002DFD:	LD DE,FC00h
00002E00:	ADD HL,DE
00002E01:	LD DE,(7A41h)
00002E05:	LD (7A41h),HL
00002E08:	EX DE,HL
00002E09:	LD (2E1Dh),HL
00002E0C:	EX DE,HL
00002E0D:	LD HL,0000h
00002E10:	ADD HL,SP
00002E11:	EX DE,HL
00002E12:	OR A
00002E13:	SBC HL,DE
00002E15:	LD C,L
00002E16:	LD B,H
00002E17:	INC BC
00002E18:	LD HL,(7A41h)
00002E1B:	EX DE,HL
00002E1C:	LD HL,0000h
00002E1F:	DI
00002E20:	INC DE
00002E21:	INC HL
00002E22:	INC BC
00002E23:	LDDR
00002E25:	EX DE,HL
00002E26:	INC HL
00002E27:	LD SP,HL
00002E28:	EI
00002E29:	LD DE,(7A41h)
00002E2D:	LD HL,(2E1Dh)
00002E30:	OR A
00002E31:	SBC HL,DE
00002E33:	EX DE,HL
00002E34:	JP 2EA0h
00002E37:	CALL 2ECCh
00002E3A:	LD HL,(7A3Dh)
00002E3D:	SBC HL,BC
00002E3F:	DEC HL
00002E40:	DEC HL
00002E41:	LD DE,(7A41h)
00002E45:	OR A
00002E46:	SBC HL,DE
00002E48:	JR C,+06h
00002E4A:	POP DE
00002E4B:	POP HL
00002E4C:	POP BC
00002E4D:	JP 2D9Eh
00002E50:	CALL 2E55h
00002E53:	JR -14h
00002E55:	PUSH HL
00002E56:	PUSH DE
00002E57:	LD HL,0000h
00002E5A:	ADD HL,SP
00002E5B:	EX DE,HL
00002E5C:	LD HL,(7A3Fh)		; TMPEND
00002E5F:	INC H
00002E60:	INC H
00002E61:	INC H
00002E62:	OR A
00002E63:	SBC HL,DE
00002E65:	JP NC,2188h
00002E68:	POP DE
00002E69:	POP HL
00002E6A:	LD (2EC1h),HL
00002E6D:	LD (2EC4h),DE
00002E71:	LD (2EC7h),BC

; 'KEY'
00002E75:	POP HL
00002E76:	LD (2ECAh),HL
00002E79:	LD HL,0000h
00002E7C:	ADD HL,SP
00002E7D:	EX DE,HL
00002E7E:	LD HL,(7A41h)
00002E81:	OR A
00002E82:	SBC HL,DE
00002E84:	LD C,L
00002E85:	LD B,H
00002E86:	INC BC
00002E87:	INC BC
00002E88:	LD HL,FE00h
00002E8B:	ADD HL,DE
00002E8C:	EX DE,HL
00002E8D:	DI
00002E8E:	LDIR
00002E90:	LD HL,FE00h
00002E93:	ADD HL,SP
00002E94:	LD SP,HL
00002E95:	EI
00002E96:	LD DE,FE00h
00002E99:	LD HL,(7A41h)
00002E9C:	ADD HL,DE
00002E9D:	LD (7A41h),HL
00002EA0:	LD HL,(2225h)	; STACK
00002EA3:	ADD HL,DE
00002EA4:	LD (2225h),HL	; STACK
00002EA7:	LD BC,262Fh
00002EAA:	LD A,(BC)
00002EAB:	LD L,A
00002EAC:	INC BC
00002EAD:	LD A,(BC)
00002EAE:	LD H,A
00002EAF:	OR L
00002EB0:	JR Z,+0Eh
00002EB2:	ADD HL,DE
00002EB3:	LD A,H
00002EB4:	LD (BC),A
00002EB5:	DEC BC
00002EB6:	LD A,L
00002EB7:	LD (BC),A
00002EB8:	LD C,L
00002EB9:	LD B,H
00002EBA:	INC BC
00002EBB:	INC BC
00002EBC:	INC BC
00002EBD:	INC BC
00002EBE:	JR -16h
00002EC0:	LD HL,0000h
00002EC3:	LD DE,0000h
00002EC6:	LD BC,0000h
00002EC9:	JP 0000h

00002ECC:	PUSH BC
00002ECD:	PUSH DE
00002ECE:	PUSH HL
00002ECF:	LD HL,(7A3Dh)
00002ED2:	CALL 2F59h
00002ED5:	LD C,(HL)
00002ED6:	INC HL
00002ED7:	LD B,(HL)
00002ED8:	INC HL
00002ED9:	XOR A
00002EDA:	CP B
00002EDB:	JP NZ,2EE5h
00002EDE:	ADD HL,BC
00002EDF:	LD (7A3Dh),HL
00002EE2:	JP 2ED2h
00002EE5:	LD HL,(7A3Dh)
00002EE8:	CALL 2F59h
00002EEB:	LD C,(HL)
00002EEC:	INC HL
00002EED:	LD B,(HL)
00002EEE:	INC HL
00002EEF:	XOR A
00002EF0:	CP B
00002EF1:	JR Z,+0Ch
00002EF3:	LD A,(BC)
00002EF4:	LD E,A
00002EF5:	LD D,00h
00002EF7:	ADD HL,DE
00002EF8:	JP 2EE8h

00002EFB:	POP HL
00002EFC:	POP DE
00002EFD:	POP BC
00002EFE:	RET


00002EFF:	PUSH HL
00002F00:	ADD HL,BC
00002F01:	EX DE,HL
00002F02:	LD HL,(7A45h)
00002F05:	XOR A
00002F06:	SBC HL,DE
00002F08:	EX DE,HL
00002F09:	JR Z,+09h
00002F0B:	LD C,(HL)
00002F0C:	INC HL
00002F0D:	LD B,(HL)
00002F0E:	INC HL
00002F0F:	CP B
00002F10:	JR Z,-12h
00002F12:	DEC HL
00002F13:	DEC HL
00002F14:	POP DE
00002F15:	DEC DE
00002F16:	DEC DE
00002F17:	DEC DE
00002F18:	PUSH HL
00002F19:	DEC HL
00002F1A:	EX DE,HL
00002F1B:	PUSH HL
00002F1C:	LD BC,(7A3Dh)
00002F20:	OR A
00002F21:	SBC HL,BC
00002F23:	LD C,L
00002F24:	LD B,H
00002F25:	INC BC
00002F26:	POP HL
00002F27:	PUSH HL
00002F28:	PUSH DE
00002F29:	EX DE,HL
00002F2A:	OR A
00002F2B:	SBC HL,DE
00002F2D:	EX DE,HL
00002F2E:	LD HL,(7A3Dh)
00002F31:	ADD HL,DE
00002F32:	LD (7A3Dh),HL
00002F35:	POP DE
00002F36:	POP HL
00002F37:	LDDR
00002F39:	LD HL,(7A3Dh)
00002F3C:	POP DE
00002F3D:	LD C,(HL)
00002F3E:	INC HL
00002F3F:	LD B,(HL)
00002F40:	INC HL
00002F41:	LD A,(BC)
00002F42:	EX AF,AF'
00002F43:	INC BC
00002F44:	LD A,L
00002F45:	LD (BC),A
00002F46:	INC BC
00002F47:	LD A,H
00002F48:	LD (BC),A
00002F49:	EX AF,AF'
00002F4A:	ADD L
00002F4B:	LD L,A
00002F4C:	LD A,00h
00002F4E:	ADC H
00002F4F:	LD H,A
00002F50:	PUSH HL
00002F51:	SBC HL,DE
00002F53:	POP HL
00002F54:	JR NZ,-19h
00002F56:	JP 2EE8h
00002F59:	EX DE,HL
00002F5A:	LD HL,(7A45h)
00002F5D:	OR A
00002F5E:	SBC HL,DE
00002F60:	EX DE,HL
00002F61:	JR C,+01h
00002F63:	RET NZ
00002F64:	POP HL
00002F65:	JP 2EFBh

; BASIC COMMAND jump table
00002F68:	----


; BASIC Section
00003005: defb 33h

; FN Jump table
00003006:	--- 



00003089:	NOP
0000308A:	NOP
0000308B:	NOP
0000308C:	NOP
0000308D:	NOP
0000308E:	NOP
0000308F:	NOP
00003090:	NOP
00003091:	NOP
00003092:	NOP
00003093:	NOP
00003094:	NOP
00003095:	NOP
00003096:	NOP
00003097:	NOP
00003098:	NOP
00003099:	NOP
0000309A:	NOP
0000309B:	NOP
0000309C:	NOP
0000309D:	NOP
0000309E:	NOP
0000309F:	NOP
000030A0:	NOP
000030A1:	NOP
000030A2:	NOP
000030A3:	NOP
000030A4:	NOP
000030A5:	NOP
000030A6:	NOP
000030A7:	NOP
000030A8:	NOP
000030A9:	NOP
000030AA:	NOP
000030AB:	NOP
000030AC:	NOP
000030AD:	NOP
000030AE:	NOP
000030AF:	NOP
000030B0:	NOP
000030B1:	NOP
000030B2:	NOP
000030B3:	NOP
000030B4:	NOP
000030B5:	NOP
000030B6:	ADD HL,HL
000030B7:	RET NC

000030B8:	LD A,06h
000030BA:	JP 2196h		; error handling

000030BD:	PUSH HL
000030BE:	CALL 30D0h		; CVBCAS:	Convert ASCII to BC
000030C1:	LD C,L
000030C2:	LD B,H
000030C3:	DEC DE
000030C4:	DEC DE
000030C5:	POP HL
000030C6:	LD A,(DE)
000030C7:	CP 20h
000030C9:	JR NZ,+03h
000030CB:	DEC DE
000030CC:	JR -08h
000030CE:	INC DE
000030CF:	RET

; CVBCAS:	Convert ASCII to BC
000030D0:	LD HL,0000h
000030D3:	CALL 5D51h			; TSTNUM
000030D6:	SUB 30h
000030D8:	RET C
000030D9:	CP 0Ah
000030DB:	RET NC
000030DC:	CALL 30B6h
000030DF:	LD C,L
000030E0:	LD B,H
000030E1:	CALL 30B6h
000030E4:	CALL 30B6h
000030E7:	ADD HL,BC
000030E8:	JR C,-32h
000030EA:	LD C,A
000030EB:	LD B,00h
000030ED:	ADD HL,BC
000030EE:	JR C,-38h
000030F0:	JR -1Fh

; EDITOR:
000030F2:	CALL 1951h
000030F5:	XOR A
000030F6:	LD (2208h),A	; CONTFG
000030F9:	LD (2250h),A	; ERRORF  ..current error condition
000030FC:	CALL 3F0Ah		; REFLNO: ... Line ref = Number
000030FF:	CALL 30D0h		; CVBCAS:	Convert ASCII to BC
00003102:	LD (372Ah),HL	; EDLINE
00003105:	ADD 30h
00003107:	DEC DE
00003108:	JR Z,+0Fh
0000310A:	DEC DE
0000310B:	LD A,(DE)
0000310C:	CP 20h
0000310E:	DEC DE
0000310F:	JR Z,-06h
00003111:	INC DE
00003112:	INC DE
00003113:	LD A,(DE)
00003114:	CP 20h		; ' '
00003116:	JR NZ,+01h
00003118:	INC DE
00003119:	PUSH HL
0000311A:	PUSH AF
0000311B:	LD HL,7B4Eh		; IMDBUF - Direct command
0000311E:	CALL 6325h		; CVIMTX: convert immediate buffer for direct execution
00003121:	LD (312Fh),HL
00003124:	POP AF
00003125:	POP HL
00003126:	LD E,L
00003127:	LD D,H
00003128:	CALL 31A5h			; DELSUB:
0000312B:	OR A
0000312C:	RET Z
0000312D:	PUSH HL
0000312E:	LD HL,0000h
00003131:	LD DE,7B4Eh		; IMDBUF - Direct command
00003134:	OR A
00003135:	SBC HL,DE
00003137:	INC HL
00003138:	INC HL
00003139:	INC HL
0000313A:	INC HL
0000313B:	INC HL
0000313C:	EX HL,(SP)
0000313D:	LD C,L
0000313E:	LD B,H
0000313F:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00003142:	JR +04h
; INSL2:
00003144:	LD E,(HL)
00003145:	INC HL
00003146:	LD D,(HL)
00003147:	EX DE,HL
00003148:	LD E,(HL)		; {LDDEMI:}
00003149:	INC HL
0000314A:	LD D,(HL)
0000314B:	DEC HL
0000314C:	LD A,D
0000314D:	OR E			;	...{LDDEMI:}
0000314E:	JR Z,+0Eh

00003150:	INC HL
00003151:	INC HL

00003152:	LD E,(HL)
00003153:	INC HL
00003154:	LD D,(HL)

00003155:	EX DE,HL
00003156:	SBC HL,BC
00003158:	DEC DE
00003159:	DEC DE
0000315A:	DEC DE
0000315B:	EX DE,HL
0000315C:	JR C,-1Ah		; INSL2:

0000315E:	POP DE
0000315F:	PUSH BC
00003160:	PUSH HL
00003161:	PUSH DE
00003162:	EX DE,HL
00003163:	LD HL,(7A3Bh)		; VARED
00003166:	PUSH HL
00003167:	SBC HL,DE
00003169:	LD C,L
0000316A:	LD B,H
0000316B:	POP HL
0000316C:	POP DE
0000316D:	PUSH DE
0000316E:	EX DE,HL
0000316F:	ADD HL,DE
00003170:	CALL 1EABh			; MEMECK2: (SBC SP,HL)
00003173:	LD (7A3Bh),HL		; VARED
00003176:	EX DE,HL
00003177:	INC BC
00003178:	LDDR
0000317A:	POP BC
0000317B:	POP DE
0000317C:	POP HL
0000317D:	PUSH DE
0000317E:	EX DE,HL
0000317F:	INC HL
00003180:	INC HL
00003181:	LD (HL),E
00003182:	INC HL
00003183:	LD (HL),D
00003184:	INC HL
00003185:	EX DE,HL
00003186:	LD HL,7B4Eh		; IMDBUF - Direct command
00003189:	PUSH BC
0000318A:	DEC BC
0000318B:	DEC BC
0000318C:	DEC BC
0000318D:	DEC BC
0000318E:	LDIR
00003190:	POP BC
00003191:	POP HL
00003192:	LD (HL),E
00003193:	INC HL
00003194:	LD (HL),D
00003195:	EX DE,HL
00003196:	LD E,(HL)		; {LDDEMI:}
00003197:	INC HL
00003198:	LD D,(HL)
00003199:	LD A,D
0000319A:	OR E			; ...{LDDEMI:}
0000319B:	RET Z
0000319C:	EX DE,HL
0000319D:	ADD HL,BC
0000319E:	EX DE,HL
0000319F:	LD (HL),D
000031A0:	DEC HL
000031A1:	LD (HL),E
000031A2:	EX DE,HL
000031A3:	JR -0Fh

; DELSUB:
000031A5:	PUSH AF
000031A6:	PUSH BC
000031A7:	PUSH HL
000031A8:	PUSH DE
000031A9:	LD C,L
000031AA:	LD B,H
000031AB:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
000031AE:	LD E,(HL)		; {LDDEMI:}
000031AF:	INC HL
000031B0:	LD D,(HL)
000031B1:	INC HL
000031B2:	LD A,E
000031B3:	OR D
000031B4:	JR NZ,+08h		; {LDDEMI:}
000031B6:	POP DE
000031B7:	POP HL
000031B8:	POP BC
000031B9:	POP AF
000031BA:	RET

000031BB:	POP DE
000031BC:	JR -08h
000031BE:	PUSH DE
000031BF:	LD E,(HL)
000031C0:	INC HL
000031C1:	LD D,(HL)
000031C2:	EX DE,HL
000031C3:	LD (31D3h),HL
000031C6:	SBC HL,BC
000031C8:	POP HL
000031C9:	JR C,-1Dh
000031CB:	DEC DE
000031CC:	DEC DE
000031CD:	DEC DE
000031CE:	POP BC
000031CF:	PUSH BC
000031D0:	PUSH DE
000031D1:	PUSH HL
000031D2:	LD HL,0000h
000031D5:	SBC HL,BC
000031D7:	POP HL
000031D8:	JR Z,+1Ah
000031DA:	JR NC,-21h
000031DC:	LD E,(HL)		; {LDDEMI:}
000031DD:	INC HL
000031DE:	LD D,(HL)
000031DF:	INC HL
000031E0:	LD A,D
000031E1:	OR E
000031E2:	JR Z,+0Eh		;...{LDDEMI:}
000031E4:	PUSH DE
000031E5:	LD E,(HL)
000031E6:	INC HL
000031E7:	LD D,(HL)
000031E8:	EX DE,HL
000031E9:	SBC HL,BC
000031EB:	POP HL
000031EC:	JR C,-12h
000031EE:	JR Z,+04h
000031F0:	EX DE,HL
000031F1:	DEC HL
000031F2:	DEC HL
000031F3:	DEC HL
000031F4:	POP DE
000031F5:	PUSH DE
000031F6:	PUSH HL
000031F7:	OR A
000031F8:	SBC HL,DE
000031FA:	LD C,L
000031FB:	LD B,H
000031FC:	POP HL
000031FD:	POP DE
000031FE:	PUSH BC
000031FF:	PUSH DE

00003200:	PUSH DE
00003201:	PUSH HL
00003202:	EX DE,HL
00003203:	LD HL,(7A3Bh)		; VARED
00003206:	OR A
00003207:	SBC HL,DE
00003209:	LD C,L
0000320A:	LD B,H
0000320B:	POP HL
0000320C:	POP DE
0000320D:	LDIR
0000320F:	EX DE,HL
00003210:	LD (7A3Bh),HL		; VARED

00003213:	CALL 1951h
00003216:	POP HL
00003217:	POP BC
00003218:	LD E,(HL)		; {LDDEMI:}
00003219:	INC HL
0000321A:	LD D,(HL)
0000321B:	LD A,D
0000321C:	OR E				; ..{LDDEMI:}
0000321D:	JP Z,31B6h
00003220:	EX DE,HL
00003221:	OR A
00003222:	SBC HL,BC
00003224:	EX DE,HL
00003225:	LD (HL),D
00003226:	DEC HL
00003227:	LD (HL),E
00003228:	EX DE,HL
00003229:	JR -13h

; 'SEARCH'
0000322B:	XOR A
0000322C:	LD (11EBh),A
0000322F:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003232:	CP 23h
00003234:	JR NZ,+06h
00003236:	LD A,02h
00003238:	LD (11EBh),A
0000323B:	INC HL
0000323C:	CALL 459Bh
0000323F:	OR A
00003240:	JP Z,1736h		; ERROR: Illegal function call
00003243:	PUSH BC
00003244:	LD (3290h),A
00003247:	LD (3262h),A
0000324A:	LD (3295h),DE
0000324E:	LD (325Ch),DE
00003252:	CALL 4050h
00003255:	POP HL
00003256:	DEC HL
00003257:	RET
00003258:	PUSH DE
00003259:	PUSH HL
0000325A:	LD B,A
0000325B:	LD HL,0000h
0000325E:	CP (HL)
0000325F:	JR NZ,+11h
00003261:	LD A,00h
00003263:	DEC A
00003264:	LD (3262h),A
00003267:	JR Z,+0Eh
00003269:	INC HL
0000326A:	LD (325Ch),HL
0000326D:	POP HL
0000326E:	POP DE
0000326F:	JP 4100h
00003272:	CALL 328Fh
00003275:	JR -0Ah
00003277:	LD DE,0000h
0000327A:	LD A,(DE)
0000327B:	OR A
0000327C:	JR Z,+06h
0000327E:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003281:	INC DE
00003282:	JR -0Ah
00003284:	CALL 0823h
00003287:	JR -1Ch
00003289:	CALL 328Fh
0000328C:	JP 4111h
0000328F:	LD A,00h
00003291:	LD (3262h),A
00003294:	LD HL,0000h
00003297:	LD (325Ch),HL
0000329A:	RET

; 'TRACE'
0000329B:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
0000329E:	OR A
0000329F:	JR Z,+49h
000032A1:	CP 3Ah
000032A3:	JR Z,+45h
000032A5:	CALL 459Bh
000032A8:	LD A,(HL)
000032A9:	OR A
000032AA:	JR Z,+38h
000032AC:	PUSH BC
000032AD:	INC HL
000032AE:	LD B,A
000032AF:	CALL 2AA3h		; LD HL,(HL)
000032B2:	CALL 32EAh
000032B5:	EX DE,HL
000032B6:	LD HL,1629h
000032B9:	LD A,(DE)
000032BA:	CP 48h
000032BC:	JR NZ,+02h
000032BE:	SET 0,(HL)
000032C0:	CP 50h
000032C2:	JR NZ,+02h
000032C4:	SET 1,(HL)
000032C6:	CP 4Eh
000032C8:	JR NZ,+02h
000032CA:	SET 2,(HL)
000032CC:	CP 4Ch
000032CE:	JR NZ,+02h
000032D0:	SET 3,(HL)
000032D2:	CP 53h
000032D4:	JR NZ,+02h
000032D6:	SET 4,(HL)
000032D8:	CP 44h
000032DA:	JR NZ,+02h
000032DC:	SET 5,(HL)
000032DE:	INC DE
000032DF:	DJNZ -28h
000032E1:	POP BC
000032E2:	JR +03h
000032E4:	CALL 32EAh
000032E7:	JP 1B39h
000032EA:	XOR A
000032EB:	LD (1629h),A
000032EE:	RET

; 'SWAP'
000032EF:	LD C,L
000032F0:	LD B,H
000032F1:	CALL 1ED3h		; INTGTV:  get variable
000032F4:	PUSH HL
000032F5:	PUSH AF
000032F6:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000032F9:	CALL 2D61h		; CH2CH: Check for comma ','
000032FC:	CALL 1ED3h		; INTGTV:  get variable
000032FF:	POP DE
00003300:	CP D
00003301:	JP NZ,1732h		; ERROR: Type mismatch
00003304:	POP DE
00003305:	PUSH AF
00003306:	PUSH BC
00003307:	LD B,A
00003308:	LD C,B
00003309:	PUSH HL
0000330A:	PUSH DE
0000330B:	LD (3349h),DE
0000330F:	LD HL,62F2h
00003312:	LD A,(DE)
00003313:	LD (HL),A
00003314:	INC HL
00003315:	INC DE
00003316:	DJNZ -06h
00003318:	POP DE
00003319:	POP HL
0000331A:	PUSH HL
0000331B:	PUSH BC
0000331C:	LDIR
0000331E:	POP BC
0000331F:	POP DE
00003320:	PUSH DE
00003321:	LD HL,62F2h
00003324:	LDIR
00003326:	POP DE
00003327:	POP HL
00003328:	POP AF
00003329:	CP 03h
0000332B:	RET NZ
0000332C:	PUSH HL
0000332D:	EX DE,HL
0000332E:	LD A,(HL)
0000332F:	OR A
00003330:	JR Z,+16h
00003332:	LD E,L
00003333:	LD D,H
00003334:	INC HL
00003335:	CALL 2AA3h		; LD HL,(HL)
00003338:	PUSH DE
00003339:	EX DE,HL
0000333A:	LD HL,(7A3Dh)
0000333D:	OR A
0000333E:	SBC HL,DE
00003340:	EX DE,HL
00003341:	POP DE
00003342:	JR NC,+04h
00003344:	DEC HL
00003345:	LD (HL),H
00003346:	DEC HL
00003347:	LD (HL),L
00003348:	LD HL,0000h
0000334B:	LD A,(HL)
0000334C:	OR A
0000334D:	JR Z,+16h
0000334F:	LD E,L
00003350:	LD D,H
00003351:	INC HL
00003352:	CALL 2AA3h		; LD HL,(HL)
00003355:	PUSH DE
00003356:	EX DE,HL
00003357:	LD HL,(7A3Dh)
0000335A:	OR A
0000335B:	SBC HL,DE
0000335D:	EX DE,HL
0000335E:	POP DE
0000335F:	JR NC,+04h
00003361:	DEC HL
00003362:	LD (HL),H
00003363:	DEC HL
00003364:	LD (HL),L
00003365:	POP HL
00003366:	RET

; 'OUT'
00003367:	LD C,L
00003368:	LD B,H
00003369:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
0000336C:	CALL 2D61h		; CH2CH: Check for comma ','
0000336F:	LD (337Ah),HL
00003372:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003375:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00003378:	PUSH BC
00003379:	LD BC,0000h
0000337C:	OUT (C),A
0000337E:	POP BC
0000337F:	JP 1B39h

; 'CLOSE'
00003382:	LD A,00h
00003384:	CP 02h
00003386:	LD A,00h
00003388:	LD (3383h),A
0000338B:	JR NZ,+10h
0000338D:	LD A,0Dh
0000338F:	CALL 4558h
00003392:	XOR A
00003393:	CALL 4558h
00003396:	XOR A
00003397:	CALL 4558h
0000339A:	CALL 4586h
0000339D:	PUSH HL
0000339E:	LD HL,1593h
000033A1:	LD (149Dh),HL
000033A4:	POP HL
000033A5:	LD A,01h
000033A7:	LD (11EBh),A
000033AA:	RET

; 'CLEAR'
000033AB:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000033AE:	OR A
000033AF:	JP Z,1951h

000033B2:	CP 3Ah
000033B4:	JP Z,1951h

000033B7:	LD C,L
000033B8:	LD B,H
000033B9:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000033BC:	PUSH HL
000033BD:	LD DE,(7A49h)
000033C1:	SCF
000033C2:	SBC HL,DE
000033C4:	JP NC,2188h
000033C7:	LD DE,(7A3Bh)		; VARED
000033CB:	LD HL,0800h
000033CE:	ADD HL,DE
000033CF:	POP DE
000033D0:	PUSH DE
000033D1:	OR A
000033D2:	SBC HL,DE
000033D4:	JP NC,2188h
000033D7:	POP HL
000033D8:	CALL 33E9h
000033DB:	LD SP,(7A41h)
000033DF:	LD DE,FFFFh
000033E2:	PUSH DE
000033E3:	LD L,C
000033E4:	LD H,B
000033E5:	DEC HL
000033E6:	JP 14DBh

000033E9:	LD (7A47h),HL
000033EC:	LD DE,0010h
000033EF:	OR A
000033F0:	SBC HL,DE
000033F2:	LD (22F4h),HL
000033F5:	LD DE,00F1h
000033F8:	SBC HL,DE
000033FA:	LD (7A43h),HL
000033FD:	LD DE,0007h
00003400:	SBC HL,DE
00003402:	LD (7A4Bh),HL
00003405:	LD DE,0018h
00003408:	SBC HL,DE
0000340A:	LD (7A45h),HL
0000340D:	JP 1951h

00003410:	CALL 459Dh
00003413:	DEC BC
00003414:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003417:	CP 2Ch		; ','
00003419:	JR Z,+05h
0000341B:	CP 3Bh
0000341D:	JP NZ,173Ah		; ERROR: Syntax error
00003420:	LD A,(HL)
00003421:	CP 19h
00003423:	JP NC,1736h		; ERROR: Illegal function call
00003426:	OR A
00003427:	JR Z,-06h
00003429:	INC HL
0000342A:	CALL 2AA3h		; LD HL,(HL)
0000342D:	LD DE,46B1h
00003430:	PUSH BC
00003431:	LD C,A
00003432:	LD B,00h
00003434:	LDIR
00003436:	POP BC
00003437:	XOR A
00003438:	LD (DE),A
00003439:	INC DE
0000343A:	LD (DE),A
0000343B:	LD DE,46B1h
0000343E:	XOR A
0000343F:	LD (3475h),A
00003442:	LD A,(DE)
00003443:	INC DE
00003444:	OR A
00003445:	JP Z,3474h
00003448:	CP C4h			; Token code for 'SCREEN'
0000344A:	JR Z,+38h
0000344C:	CP 21h
0000344E:	JP Z,3488h
00003451:	CP 26h
00003453:	JP Z,34E9h
00003456:	CP 23h
00003458:	JP Z,3581h
0000345B:	CP 2Ah
0000345D:	JP Z,3534h
00003460:	CP 7Ch
00003462:	JP Z,3559h
00003465:	CP 2Eh		; '.'
00003467:	JP Z,3579h
0000346A:	CP 2Bh
0000346C:	JP Z,356Bh
0000346F:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003472:	JR -32h
00003474:	LD A,00h
00003476:	OR A
00003477:	JP Z,1736h		; ERROR: Illegal function call
0000347A:	LD DE,46B1h
0000347D:	XOR A
0000347E:	LD (3475h),A
00003481:	JP 1B39h
00003484:	LD A,(DE)
00003485:	INC DE
00003486:	JR -19h
00003488:	PUSH DE
00003489:	CALL 459Dh
0000348C:	CALL 34A2h
0000348F:	POP DE
00003490:	LD A,01h
00003492:	LD (3475h),A
00003495:	LD A,(HL)
00003496:	OR A
00003497:	LD A,20h
00003499:	JR Z,-2Ch
0000349B:	INC HL
0000349C:	CALL 2AA3h		; LD HL,(HL)
0000349F:	LD A,(HL)
000034A0:	JR -33h
000034A2:	DEC BC
000034A3:	LD A,(BC)
000034A4:	INC BC
000034A5:	CP 3Bh
000034A7:	JR Z,+0Ah
000034A9:	CP 2Ch		; ','
000034AB:	JR Z,+1Ah
000034AD:	PUSH HL
000034AE:	LD HL,34E3h
000034B1:	JR +0Fh
000034B3:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000034B6:	OR A
000034B7:	JR Z,+24h
000034B9:	CP 3Ah
000034BB:	JR Z,+20h
000034BD:	DEC BC
000034BE:	PUSH HL
000034BF:	LD HL,3442h
000034C2:	LD (3482h),HL
000034C5:	POP HL
000034C6:	RET
000034C7:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000034CA:	OR A
000034CB:	JR Z,+04h
000034CD:	CP 3Ah
000034CF:	JR NZ,-14h
000034D1:	PUSH HL
000034D2:	LD HL,34D7h
000034D5:	JR -15h
000034D7:	CALL 0802h
000034DA:	JP 1B39h
000034DD:	PUSH HL
000034DE:	LD HL,1B39h
000034E1:	JR -21h
000034E3:	CALL 0843h
000034E6:	JP 1B39h
000034E9:	LD H,01h
000034EB:	LD A,(DE)
000034EC:	INC H
000034ED:	INC DE
000034EE:	CP 26h
000034F0:	JR Z,+07h
000034F2:	CP 20h
000034F4:	JR Z,-0Bh
000034F6:	JP 1736h		; ERROR: Illegal function call

000034F9:	PUSH DE
000034FA:	PUSH HL
000034FB:	CALL 459Dh
000034FE:	CALL 34A2h
00003501:	POP AF
00003502:	CP (HL)
00003503:	PUSH BC
00003504:	JR NC,+16h
00003506:	LD B,A
00003507:	INC HL
00003508:	CALL 2AA3h		; LD HL,(HL)
0000350B:	LD A,(HL)
0000350C:	INC HL
0000350D:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003510:	DJNZ -07h
00003512:	POP BC
00003513:	POP DE
00003514:	LD A,01h
00003516:	LD (3475h),A
00003519:	JP 3442h
0000351C:	JR Z,-18h
0000351E:	SUB (HL)
0000351F:	PUSH AF
00003520:	LD B,(HL)
00003521:	INC HL
00003522:	CALL 2AA3h		; LD HL,(HL)
00003525:	LD A,(HL)
00003526:	INC HL
00003527:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
0000352A:	DJNZ -07h
0000352C:	POP BC
0000352D:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00003530:	DJNZ -05h
00003532:	JR -22h
00003534:	LD A,(DE)
00003535:	CP 2Ah
00003537:	LD A,2Ah
00003539:	JP NZ,346Fh
0000353C:	LD A,01h
0000353E:	LD (36C5h),A
00003541:	INC DE
00003542:	LD A,(DE)
00003543:	INC DE
00003544:	LD H,02h
00003546:	CP 7Ch
00003548:	LD A,00h
0000354A:	JR NZ,+3Dh
0000354C:	INC DE
0000354D:	INC H
0000354E:	LD A,01h
00003550:	LD (36AEh),A
00003553:	XOR A
00003554:	LD (3680h),A
00003557:	JR +33h
00003559:	LD A,(DE)
0000355A:	CP 7Ch
0000355C:	LD A,7Ch
0000355E:	JP NZ,346Fh
00003561:	XOR A
00003562:	LD (36C5h),A
00003565:	INC DE
00003566:	INC DE
00003567:	LD H,02h
00003569:	JR -1Dh
0000356B:	LD A,01h
0000356D:	LD (3680h),A
00003570:	XOR A
00003571:	LD (36C5h),A
00003574:	INC DE
00003575:	LD H,01h
00003577:	JR +10h
00003579:	LD A,(DE)
0000357A:	CP 23h
0000357C:	LD A,2Eh
0000357E:	JP NZ,346Fh
00003581:	XOR A
00003582:	LD H,A
00003583:	LD (3680h),A
00003586:	LD (36C5h),A
00003589:	LD (36AEh),A
0000358C:	LD (3675h),A
0000358F:	LD (3631h),A
00003592:	LD (365Dh),A
00003595:	LD (3621h),A
00003598:	LD (367Bh),A
0000359B:	LD (3624h),A
0000359E:	DEC DE
0000359F:	INC H
000035A0:	LD A,(DE)
000035A1:	INC DE
000035A2:	CP 23h	; '#'
000035A4:	JR Z,-07h
000035A6:	CP 2Ch		; ','
000035A8:	JR NZ,+07h
000035AA:	LD A,01h
000035AC:	LD (3631h),A
000035AF:	JR -12h
000035B1:	CP 2Eh		; '.'
000035B3:	JR Z,+1Eh
000035B5:	CP 2Dh
000035B7:	JR NZ,+08h
000035B9:	LD A,01h
000035BB:	LD (3675h),A
000035BE:	INC DE
000035BF:	JR +0Ah
000035C1:	CP 2Bh
000035C3:	JR NZ,+06h
000035C5:	LD A,01h
000035C7:	LD (367Bh),A
000035CA:	INC DE
000035CB:	DEC DE
000035CC:	DEC H
000035CD:	LD A,H
000035CE:	LD (365Dh),A
000035D1:	JR +1Eh
000035D3:	DEC H
000035D4:	LD A,H
000035D5:	LD (365Dh),A
000035D8:	LD H,01h
000035DA:	INC H
000035DB:	LD A,(DE)
000035DC:	INC DE
000035DD:	CP 23h
000035DF:	JR Z,-07h
000035E1:	CP 2Dh
000035E3:	JR NZ,+06h
000035E5:	LD A,01h
000035E7:	LD (3675h),A
000035EA:	INC DE
000035EB:	DEC DE
000035EC:	DEC H
000035ED:	LD A,H
000035EE:	LD (3621h),A
000035F1:	LD (3705h),DE
000035F5:	PUSH BC
000035F6:	LD B,04h
000035F8:	LD A,(DE)
000035F9:	INC DE
000035FA:	CP 5Eh
000035FC:	JR NZ,+0Bh
000035FE:	DJNZ -08h
00003600:	LD (3705h),DE
00003604:	LD A,01h
00003606:	LD (3624h),A
00003609:	POP BC
0000360A:	CALL 2299h
0000360D:	CALL 34A2h
00003610:	LD (3702h),BC
00003614:	INC HL
00003615:	LD A,(HL)
00003616:	RES 7,(HL)
00003618:	DEC HL
00003619:	LD (36A3h),A
0000361C:	LD A,(365Dh)
0000361F:	LD B,A
00003620:	LD A,00h
00003622:	LD C,A
00003623:	LD A,00h
00003625:	CALL 5ED6h
00003628:	PUSH HL
00003629:	LD DE,7A4Fh
0000362C:	LD A,20h
0000362E:	LD (DE),A
0000362F:	INC DE
00003630:	LD A,00h
00003632:	OR A
00003633:	JR Z,+3Fh
00003635:	PUSH DE
00003636:	LD A,(365Dh)
00003639:	LD L,A
0000363A:	LD H,00h
0000363C:	ADD HL,DE
0000363D:	DEC HL
0000363E:	LD DE,62F2h
00003641:	LD C,00h
00003643:	LD B,03h
00003645:	LD A,(HL)
00003646:	CP 20h
00003648:	JR Z,+12h
0000364A:	INC C
0000364B:	LD (DE),A
0000364C:	INC DE
0000364D:	DEC HL
0000364E:	DJNZ -0Bh
00003650:	LD A,(HL)
00003651:	CP 20h		; ' '
00003653:	JR Z,+07h
00003655:	LD A,2Ch		; ','
00003657:	LD (DE),A
00003658:	INC DE
00003659:	INC C
0000365A:	JR -19h
0000365C:	LD A,00h
0000365E:	CP C
0000365F:	JP C,5FA6h
00003662:	LD B,C
00003663:	LD L,A
00003664:	LD H,00h
00003666:	POP DE
00003667:	PUSH DE
00003668:	ADD HL,DE
00003669:	DEC HL
0000366A:	LD DE,62F2h
0000366D:	LD A,(DE)
0000366E:	LD (HL),A
0000366F:	DEC HL
00003670:	INC DE
00003671:	DJNZ -06h
00003673:	POP DE
00003674:	LD A,00h
00003676:	OR A
00003677:	JP NZ,36ADh
0000367A:	LD A,00h
0000367C:	OR A
0000367D:	JR NZ,-08h
0000367F:	LD A,00h
00003681:	OR A
00003682:	JR NZ,+1Eh
00003684:	LD A,(36A3h)
00003687:	RLCA
00003688:	JP NC,36ADh
0000368B:	LD A,(DE)
0000368C:	CP 20h
0000368E:	JP NZ,5FA6h
00003691:	LD B,2Dh
00003693:	PUSH DE
00003694:	LD A,(DE)
00003695:	INC DE
00003696:	CP 20h
00003698:	JR Z,-06h
0000369A:	DEC DE
0000369B:	DEC DE
0000369C:	LD A,B
0000369D:	LD (DE),A
0000369E:	POP DE
0000369F:	JP 36ADh
000036A2:	LD A,00h
000036A4:	RLCA
000036A5:	LD B,2Bh
000036A7:	JR NC,-16h
000036A9:	LD B,2Dh
000036AB:	JR -1Ah
000036AD:	LD A,00h
000036AF:	OR A
000036B0:	JR Z,+12h
000036B2:	LD A,(DE)
000036B3:	CP 20h
000036B5:	JR NZ,+0Dh
000036B7:	PUSH DE
000036B8:	LD A,(DE)
000036B9:	INC DE
000036BA:	CP 20h
000036BC:	JR Z,-06h
000036BE:	DEC DE
000036BF:	DEC DE
000036C0:	LD A,7Ch
000036C2:	LD (DE),A
000036C3:	POP DE
000036C4:	LD A,00h
000036C6:	OR A
000036C7:	JR Z,+0Dh
000036C9:	PUSH DE
000036CA:	LD A,(DE)
000036CB:	CP 20h
000036CD:	JR NZ,+06h
000036CF:	LD A,2Ah
000036D1:	LD (DE),A
000036D2:	INC DE
000036D3:	JR -0Bh
000036D5:	POP DE
000036D6:	POP HL
000036D7:	OR A
000036D8:	SBC HL,DE
000036DA:	LD B,L
000036DB:	CALL 07E1h
000036DE:	LD A,(367Bh)
000036E1:	OR A
000036E2:	JR Z,+0Fh
000036E4:	LD A,(36A3h)
000036E7:	RLCA
000036E8:	LD A,2Bh
000036EA:	JR NC,+02h
000036EC:	LD A,2Dh
000036EE:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
000036F1:	JR +0Eh
000036F3:	LD A,(3675h)
000036F6:	OR A
000036F7:	JR Z,+08h
000036F9:	LD A,(36A3h)
000036FC:	RLCA
000036FD:	LD A,20h
000036FF:	JR -17h
00003701:	LD BC,0000h
00003704:	LD DE,0000h
00003707:	LD A,01h
00003709:	LD (3475h),A
0000370C:	JP 3442h

; 'AUTO'
0000370F:	LD C,L
00003710:	LD B,H
00003711:	LD HL,000Ah
00003714:	LD (2245h),HL
00003717:	LD (2239h),HL
0000371A:	CALL 25C4h		; skip SPACEs in (BC), A=next char
0000371D:	DEC BC
0000371E:	OR A
0000371F:	JR Z,+22h
00003721:	CP 3Ah
00003723:	JR Z,+1Eh
00003725:	CP 2Eh		; '.'
00003727:	JR NZ,+09h
00003729:	LD HL,0000h
0000372C:	INC BC
0000372D:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003730:	JR +03h
00003732:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003735:	CP 2Ch		; ','
00003737:	LD (2239h),HL
0000373A:	JP NZ,3743h
0000373D:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003740:	LD (2245h),HL
00003743:	XOR A
00003744:	LD (2237h),A
00003747:	JP 148Bh

; 'LPOS'
0000374A:	LD A,(11ECh)
0000374D:	JR +03h

; 'POS'
0000374F:	LD A,(11EDh)		; CSRXY: X,Y text coordinates
00003752:	LD E,A
00003753:	LD D,00h
00003755:	JP 2902h		; FLTHEX:  (HL)=DE

; 'ERR'
00003758:	LD A,(2295h)		; error code
0000375B:	LD E,A
0000375C:	LD D,00h
0000375E:	PUSH DE
0000375F:	LD DE,0008h
00003762:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00003763:	POP DE
00003764:	CALL 2902h		; FLTHEX:  (HL)=DE
00003767:	CALL 3778h
0000376A:	LD A,04h		; single precision variable type
0000376C:	CALL 28EBh
0000376F:	JP 25C4h		; skip SPACEs in (BC), A=next char

; 'ERL'
00003772:	LD DE,(2265h)	; ERRLNO  ..program line where the last error happened
00003776:	JR -1Ah

00003778:	INC HL
00003779:	LD A,(HL)
0000377A:	DEC HL
0000377B:	ADD A
0000377C:	RET NC
0000377D:	PUSH BC
0000377E:	LD DE,3786h
00003781:	CALL 6CA6h		; ADD:
00003784:	POP BC
00003785:	RET

00003786:	SUB C
00003787:	NOP
00003788:	NOP
00003789:	NOP
0000378A:	NOP
0000378B:	NOP
0000378C:	NOP
0000378D:	NOP

; 'DELETE'
0000378E:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003791:	OR A
00003792:	RET Z
00003793:	CP 3Ah
00003795:	RET Z
00003796:	PUSH HL
00003797:	CALL 3F0Ah		; REFLNO: ... Line ref = Number
0000379A:	CALL 1951h
0000379D:	POP HL
0000379E:	CALL 3FC7h		; Get arguments for line number range (xxx-yyy), DE to BC.
000037A1:	EX DE,HL
000037A2:	LD E,C
000037A3:	LD D,B
000037A4:	CALL 31A5h			; DELSUB:
000037A7:	JP 1446h

; 'RENUM'
000037AA:	LD C,L
000037AB:	LD B,H
000037AC:	LD HL,000Ah
000037AF:	LD (3834h),HL
000037B2:	LD (3842h),HL
000037B5:	LD L,00h
000037B7:	LD (3823h),HL
000037BA:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000037BD:	DEC BC
000037BE:	OR A
000037BF:	JR Z,+39h
000037C1:	CP 3Ah
000037C3:	JR Z,+35h
000037C5:	CP 2Ch		; ','
000037C7:	JR Z,+0Bh
000037C9:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000037CC:	LD (3834h),HL
000037CF:	CP 2Ch		; ','
000037D1:	JR NZ,+27h
000037D3:	DEC BC
000037D4:	INC BC
000037D5:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000037D8:	DEC BC
000037D9:	CP 2Ch		; ','
000037DB:	JR Z,+0Bh
000037DD:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000037E0:	LD (3823h),HL
000037E3:	CP 2Ch		; ','
000037E5:	JR NZ,+13h
000037E7:	DEC BC
000037E8:	INC BC
000037E9:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000037EC:	DEC BC
000037ED:	OR A
000037EE:	JR Z,+0Ah
000037F0:	CP 3Ah
000037F2:	JR Z,+06h
000037F4:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000037F7:	LD (3842h),HL
000037FA:	PUSH BC
000037FB:	LD HL,(3842h)
000037FE:	LD A,H
000037FF:	OR L
00003800:	JP Z,1736h		; ERROR: Illegal function call
00003803:	LD HL,(3823h)
00003806:	EX DE,HL
00003807:	LD HL,(3834h)
0000380A:	OR A
0000380B:	SBC HL,DE
0000380D:	JP C,1736h		; ERROR: Illegal function call
00003810:	CALL 3EFDh
00003813:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00003816:	LD E,(HL)		; {LDDEMI:}
00003817:	INC HL
00003818:	LD D,(HL)
00003819:	LD A,D
0000381A:	OR E		; ...{LDDEMI:}
0000381B:	JR Z,+2Fh
0000381D:	INC HL
0000381E:	LD C,(HL)
0000381F:	INC HL
00003820:	LD B,(HL)
00003821:	PUSH HL
00003822:	LD HL,0000h
00003825:	OR A
00003826:	SBC HL,BC
00003828:	POP HL
00003829:	JR Z,+05h
0000382B:	JR C,+03h
0000382D:	EX DE,HL
0000382E:	JR -1Ah
00003830:	DEC HL
00003831:	DEC HL
00003832:	DEC HL
00003833:	LD BC,0000h
00003836:	LD E,(HL)		; {LDDEMI:}
00003837:	INC HL
00003838:	LD D,(HL)
00003839:	LD A,D
0000383A:	OR E		; ...{LDDEMI:}
0000383B:	JR Z,+0Fh
0000383D:	INC HL
0000383E:	LD (HL),C
0000383F:	INC HL
00003840:	LD (HL),B
00003841:	LD HL,0000h
00003844:	ADD HL,BC
00003845:	JR C,+0Ah
00003847:	LD C,L
00003848:	LD B,H
00003849:	EX DE,HL
0000384A:	JR -16h
0000384C:	CALL 3F0Ah		; REFLNO: ... Line ref = Number
0000384F:	POP HL
00003850:	RET

00003851:	LD HL,000Ah
00003854:	LD (3842h),HL
00003857:	LD (3834h),HL
0000385A:	LD L,00h
0000385C:	LD (3823h),HL
0000385F:	CALL 37FAh
00003862:	JP 1736h		; ERROR: Illegal function call

00003865:	LD A,(3383h)
00003868:	OR A
00003869:	JP NZ,183Eh
0000386C:	LD (38C3h),A
0000386F:	INC A
00003870:	LD (3383h),A
00003873:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003876:	DEC BC
00003877:	OR A
00003878:	JR Z,+24h
0000387A:	CP 3Ah
0000387C:	JR Z,+20h
0000387E:	LD A,01h
00003880:	LD (38C3h),A
00003883:	CALL 459Dh
00003886:	DEC BC
00003887:	PUSH BC
00003888:	OR A
00003889:	JR Z,+02h
0000388B:	CP 11h
0000388D:	JP NC,1736h		; ERROR: Illegal function call
00003890:	LD B,A
00003891:	EX DE,HL
00003892:	LD DE,7A4Fh
00003895:	LD A,(HL)
00003896:	LD (DE),A
00003897:	INC DE
00003898:	INC HL
00003899:	DJNZ -06h
0000389B:	XOR A
0000389C:	LD (DE),A
0000389D:	POP BC
0000389E:	CALL 0114h	; FLOAD
000038A1:	JP C,16A2h
000038A4:	CALL 0823h
000038A7:	LD DE,3A43h
000038AA:	PUSH BC
000038AB:	LD B,06h
000038AD:	CALL 07E1h
000038B0:	LD DE,1396h		; FCB (File Control Block)
000038B3:	INC DE
000038B4:	LD A,(DE)
000038B5:	CP 00h
000038B7:	JR Z,+05h
000038B9:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
000038BC:	JR -0Bh
000038BE:	POP BC
000038BF:	CALL 0823h
000038C2:	LD A,00h
000038C4:	OR A
000038C5:	JR Z,+16h
000038C7:	LD HL,7A4Fh
000038CA:	LD DE,1397h		; FILNAM (file name in FCB)
000038CD:	LD A,(DE)
000038CE:	CP 00h
000038D0:	JR Z,+07h
000038D2:	CP (HL)
000038D3:	INC HL
000038D4:	INC DE
000038D5:	JR Z,-0Ah
000038D7:	JR -3Bh
000038D9:	LD A,(HL)
000038DA:	OR A
000038DB:	JR NZ,-3Fh
000038DD:	PUSH BC
000038DE:	CALL 4511h
000038E1:	LD DE,3A49h
000038E4:	LD B,08h
000038E6:	CALL 07E1h
000038E9:	LD DE,1397h		; FILNAM (file name in FCB)
000038EC:	CALL 07F3h		; MSX (aka DEPRT), print message in DE
000038EF:	CALL 0823h
000038F2:	POP BC
000038F3:	RET

; 'ROPEN'
000038F4:	LD C,L
000038F5:	LD B,H
000038F6:	CALL 3865h
000038F9:	LD L,C
000038FA:	LD H,B
000038FB:	RET
000038FC:	INC HL
000038FD:	LD C,L
000038FE:	LD B,H
000038FF:	CALL 3865h
00003902:	LD A,(1396h)		; FCB (File Control Block)
00003905:	CP 16h
00003907:	JP Z,183Eh
0000390A:	CALL 39DEh
0000390D:	CALL 01B9h		; MVRFY
00003910:	CALL 39B9h
00003913:	LD A,1Bh
00003915:	JP C,2196h		; error handling
00003918:	RET

; 'MERGE'
00003919:	XOR A
0000391A:	LD (3383h),A
0000391D:	LD C,L
0000391E:	LD B,H
0000391F:	CALL 3865h
00003922:	LD A,(1396h)		; FCB (File Control Block)
00003925:	CP 04h
00003927:	JP C,183Eh
0000392A:	JR +1Dh

; 'LOAD'
0000392C:	XOR A
0000392D:	LD (3383h),A
00003930:	LD (2208h),A	; CONTFG
00003933:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003936:	CP 8Ch			; Token code for 'PRINT'
00003938:	JR Z,-3Eh
0000393A:	LD C,L
0000393B:	LD B,H
0000393C:	CALL 3865h
0000393F:	LD A,(1396h)		; FCB (File Control Block)
00003942:	CP 04h
00003944:	JR C,+32h
00003946:	CALL 39ACh
00003949:	CALL 1951h
0000394C:	LD SP,(7A41h)
00003950:	LD HL,FFFFh
00003953:	PUSH HL
00003954:	LD (2225h),SP	; STACK
00003958:	LD HL,39F8h
0000395B:	LD (149Dh),HL
0000395E:	LD A,01h
00003960:	LD (3A30h),A
00003963:	CALL 4511h
00003966:	JP 1488h

00003969:	XOR A
0000396A:	LD (3383h),A
0000396D:	LD A,(1396h)		; FCB (File Control Block)
00003970:	CP 02h
00003972:	CALL Z,39ACh
00003975:	JP 16A2h
00003978:	CP 02h
0000397A:	JR NZ,+28h
0000397C:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
0000397F:	LD (13AAh),HL	; MTADRS (data position in File Control Block)
00003982:	LD DE,(13A8h)	; MTBYTE (size in File Control Block)
00003986:	ADD HL,DE
00003987:	LD HL,(7A47h)
0000398A:	OR A
0000398B:	SBC HL,DE
0000398D:	JP C,2188h
00003990:	CALL 0134h	; MLOAD
00003993:	JR C,-2Ch
00003995:	CALL 39B9h
00003998:	LD HL,13AEh		; PROTCT (File protection flag in File Control Block)
0000399B:	LD A,(HL)
0000399C:	CP 3Ah
0000399E:	JP Z,15C3h		; 'RUN'
000039A1:	LD L,C
000039A2:	LD H,B
000039A3:	RET

000039A4:	CALL 0134h	; MLOAD
000039A7:	JP C,3969h
000039AA:	JR -0Bh
000039AC:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
000039AF:	XOR A
000039B0:	LD (HL),A
000039B1:	INC HL
000039B2:	LD (HL),A
000039B3:	INC HL
000039B4:	LD (HL),A
000039B5:	LD (7A3Bh),HL		; VARED
000039B8:	RET

000039B9:	PUSH AF
000039BA:	PUSH HL
000039BB:	PUSH DE
000039BC:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
000039BF:	LD E,(HL)		; {LDDEMI:}
000039C0:	INC HL
000039C1:	LD D,(HL)
000039C2:	LD A,E
000039C3:	OR D		; ...{LDDEMI:}
000039C4:	JR Z,+0Bh
000039C6:	PUSH HL
000039C7:	ADD HL,DE
000039C8:	DEC HL
000039C9:	EX DE,HL
000039CA:	POP HL
000039CB:	LD (HL),D
000039CC:	DEC HL
000039CD:	LD (HL),E
000039CE:	EX DE,HL
000039CF:	JR -12h
000039D1:	INC HL
000039D2:	LD (7A3Bh),HL		; VARED
000039D5:	LD (HL),00h
000039D7:	LD (7A3Fh),HL		; TMPEND
000039DA:	POP DE
000039DB:	POP HL
000039DC:	POP AF
000039DD:	RET

000039DE:	PUSH AF
000039DF:	PUSH HL
000039E0:	PUSH DE
000039E1:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
000039E4:	LD E,(HL)		; {LDDEMI:}
000039E5:	INC HL
000039E6:	LD D,(HL)
000039E7:	LD A,D
000039E8:	OR E		; ...{LDDEMI:}
000039E9:	JR Z,-1Ah
000039EB:	PUSH DE
000039EC:	EX DE,HL
000039ED:	OR A
000039EE:	DEC DE
000039EF:	SBC HL,DE
000039F1:	EX DE,HL
000039F2:	LD (HL),E
000039F3:	INC HL
000039F4:	LD (HL),D
000039F5:	POP HL
000039F6:	JR -14h
000039F8:	PUSH DE
000039F9:	CALL 4521h
000039FC:	JR C,+1Eh
000039FE:	CP 0Dh
00003A00:	JR Z,+2Eh
00003A02:	JR +05h
00003A04:	CALL 4521h
00003A07:	JR C,+13h
00003A09:	OR A
00003A0A:	JP Z,183Eh
00003A0D:	LD (DE),A
00003A0E:	INC DE
00003A0F:	CP 0Dh
00003A11:	JR NZ,-0Fh
00003A13:	DEC DE
00003A14:	XOR A
00003A15:	LD (DE),A
00003A16:	INC DE
00003A17:	LD (DE),A
00003A18:	INC DE
00003A19:	LD (DE),A
00003A1A:	POP DE
00003A1B:	RET
00003A1C:	LD HL,1593h
00003A1F:	LD (149Dh),HL
00003A22:	LD SP,(2225h)	; STACK
00003A26:	XOR A
00003A27:	LD (3383h),A
00003A2A:	LD (2208h),A	; CONTFG
00003A2D:	JP 16A2h
00003A30:	JP 183Eh
00003A33:	LD HL,1593h
00003A36:	LD (149Dh),HL
00003A39:	LD SP,(2225h)	; STACK
00003A3D:	CALL 3382h
00003A40:	JP 1462h		; 'END'

00003A43:	LD B,(HL)
00003A44:	LD C,A
00003A45:	LD D,L
00003A46:	LD C,(HL)
00003A47:	LD B,H
00003A48:	LD A,(4F4Ch)
00003A4B:	LD B,C
00003A4C:	LD B,H
00003A4D:	LD C,C
00003A4E:	LD C,(HL)
00003A4F:	LD B,A
;00003A50:	LD A,(5DCDh)
; 'WOPEN'
00003A51:	CALL 3a5Ch ...

00003A53:	LD A,(80CDh)
00003A56:	NOP
00003A57:	JP C,3A26h
00003A5A:	LD L,C
00003A5B:	LD H,B
00003A5C:	RET
00003A5D:	LD A,(3383h)
00003A60:	OR A
00003A61:	JP NZ,183Eh
00003A64:	LD A,02h
00003A66:	LD (3383h),A
00003A69:	LD C,L
00003A6A:	LD B,H
00003A6B:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003A6E:	DEC BC
00003A6F:	LD HL,2825h
00003A72:	OR A
00003A73:	JR Z,+0Ah
00003A75:	CP 3Ah
00003A77:	LD A,00h
00003A79:	JR Z,+04h
00003A7B:	CALL 459Dh
00003A7E:	DEC BC
00003A7F:	CP 11h
00003A81:	JP NC,1736h		; ERROR: Illegal function call
00003A84:	PUSH BC
00003A85:	LD B,A
00003A86:	EX DE,HL
00003A87:	LD DE,1396h		; FCB (File Control Block)
00003A8A:	LD A,16h
00003A8C:	LD (DE),A
00003A8D:	INC DE
00003A8E:	LD A,B
00003A8F:	OR A
00003A90:	JR Z,+06h
00003A92:	LD A,(HL)
00003A93:	LD (DE),A
00003A94:	INC DE
00003A95:	INC HL
00003A96:	DJNZ -06h
00003A98:	LD A,00h
00003A9A:	LD (DE),A
00003A9B:	POP BC
00003A9C:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00003A9F:	LD (13AAh),HL	; MTADRS (data position in File Control Block)
00003AA2:	EX DE,HL
00003AA3:	LD HL,(7A3Bh)		; VARED
00003AA6:	OR A
00003AA7:	SBC HL,DE
00003AA9:	LD (13A8h),HL	; MTBYTE (size in File Control Block)
00003AAC:	LD HL,0000h
00003AAF:	LD (13ACh),HL	; MTEXEC (Exec address in File Control Block)
00003AB2:	LD A,00h
00003AB4:	LD (13AEh),A	; PROTCT (File protection flag in File Control Block)
00003AB7:	CALL 4511h
00003ABA:	RET

; 'SAVE'
00003ABB:	XOR A
00003ABC:	LD (3383h),A
00003ABF:	LD A,(HL)
00003AC0:	CP 4Dh		; 'M'
00003AC2:	JR Z,+4Fh
00003AC4:	CALL 3A5Dh
00003AC7:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003ACA:	CP 2Ch		; ','
00003ACC:	JR NZ,+28h
00003ACE:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003AD1:	CP 41h		; 'A'
00003AD3:	JP NZ,173Ah		; ERROR: Syntax error
00003AD6:	CALL 0080h	; FSAVE
00003AD9:	JP C,3A26h
00003ADC:	PUSH BC
00003ADD:	CALL 3F0Ah		; REFLNO: ... Line ref = Number
00003AE0:	CALL 405Eh
00003AE3:	LD HL,410Eh
00003AE6:	LD (4104h),HL
00003AE9:	LD HL,40FDh
00003AEC:	LD (40F6h),HL
00003AEF:	JP C,16A2h
00003AF2:	POP HL
00003AF3:	JP 3382h

00003AF6:	DEC BC
00003AF7:	PUSH BC
00003AF8:	CALL 3F0Ah		; REFLNO: ... Line ref = Number
00003AFB:	CALL 39DEh
00003AFE:	LD A,02h
00003B00:	LD (1396h),A		; FCB (File Control Block)
00003B03:	CALL 0080h	; FSAVE
00003B06:	JR C,+03h
00003B08:	CALL 00B6h	; MSAVE
00003B0B:	CALL 39B9h
00003B0E:	POP HL
00003B0F:	JP C,3A26h
00003B12:	RET

00003B13:	INC HL
00003B14:	CALL 3A5Dh
00003B17:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003B1A:	CALL 2D61h		; CH2CH: Check for comma ','
00003B1D:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003B20:	LD (13AAh),HL	; MTADRS (data position in File Control Block)
00003B23:	PUSH HL
00003B24:	CALL 2D61h		; CH2CH: Check for comma ','
00003B27:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003B2A:	POP DE
00003B2B:	OR A
00003B2C:	SBC HL,DE
00003B2E:	INC HL
00003B2F:	LD (13A8h),HL	; MTBYTE (size in File Control Block)
00003B32:	CP 2Ch		; ','
00003B34:	JR NZ,+06h
00003B36:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003B39:	LD (13ACh),HL	; MTEXEC (Exec address in File Control Block)
00003B3C:	DEC BC
00003B3D:	PUSH BC
00003B3E:	LD A,01h
00003B40:	LD (1396h),A		; FCB (File Control Block)
00003B43:	CALL 0080h	; FSAVE
00003B46:	JR C,-3Ah
00003B48:	CALL 00B6h	; MSAVE
00003B4B:	JR -3Fh

;'DEF'
00003B4D:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003B50:	INC A			; check for prefix $FF
00003B51:	JP NZ,173Ah		; ERROR: Syntax error
00003B54:	INC HL
00003B55:	LD A,(HL)
00003B56:	CP A0h			; Token code for 'CHR$' (prefix $FF)
00003B58:	JP Z,46CBh
00003B5B:	CP BEh			; Token code for 'USR' (prefix $FF)
00003B5D:	JP Z,3C40h
00003B60:	CP BDh			; Token code for 'FN' (prefix $FF)
00003B62:	JR NZ,-13h
00003B64:	INC HL
00003B65:	LD C,L
00003B66:	LD B,H
00003B67:	CALL 3B90h
00003B6A:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003B6D:	CALL 3BA1h
00003B70:	JR NC,+19h
00003B72:	LD HL,(7A3Fh)		; TMPEND
00003B75:	OR C0h
00003B77:	LD (HL),A
00003B78:	INC HL
00003B79:	LD (HL),E
00003B7A:	INC HL
00003B7B:	LD (HL),D
00003B7C:	INC HL
00003B7D:	LD (HL),C
00003B7E:	INC HL
00003B7F:	LD (HL),B
00003B80:	INC HL
00003B81:	LD (HL),00h
00003B83:	LD (7A3Fh),HL		; TMPEND
00003B86:	LD L,C
00003B87:	LD H,B
00003B88:	JP 1CC8h		; 'DATA', 'LABEL'

00003B8B:	LD A,0Ah
00003B8D:	JP 2196h		; error handling
00003B90:	PUSH HL
00003B91:	LD HL,(16CCh)	; current program line
00003B94:	INC HL
00003B95:	LD A,H
00003B96:	OR L
00003B97:	POP HL
00003B98:	RET NZ
00003B99:	LD A,0Ch
00003B9B:	JR -10h
00003B9D:	LD A,12h
00003B9F:	JR -14h
00003BA1:	CALL 20FEh		; VSRTST:
00003BA4:	CP 28h
00003BA6:	JP NZ,173Ah		; ERROR: Syntax error
00003BA9:	DEC BC
00003BAA:	PUSH BC
00003BAB:	LD A,E
00003BAC:	OR C0h
00003BAE:	EX DE,HL
00003BAF:	LD B,A
00003BB0:	LD HL,(7A3Bh)		; VARED
00003BB3:	LD A,(HL)
00003BB4:	OR A
00003BB5:	JR Z,+37h
00003BB7:	CP B
00003BB8:	JR NZ,+17h
00003BBA:	INC HL
00003BBB:	LD A,E
00003BBC:	CP (HL)
00003BBD:	LD A,04h		; single precision variable type
00003BBF:	JR NZ,+25h
00003BC1:	INC HL
00003BC2:	LD A,D
00003BC3:	CP (HL)
00003BC4:	LD A,03h
00003BC6:	JR NZ,+1Eh
00003BC8:	INC HL
00003BC9:	CALL 2AA3h		; LD HL,(HL)
00003BCC:	LD A,B
00003BCD:	AND 0Fh
00003BCF:	POP BC
00003BD0:	RET

00003BD1:	INC A
00003BD2:	JP P,3BE4h
00003BD5:	DEC A
00003BD6:	AND C0h
00003BD8:	CP C0h
00003BDA:	LD A,05h
00003BDC:	JR Z,+08h
00003BDE:	INC HL
00003BDF:	CALL 2AA3h		; LD HL,(HL)
00003BE2:	JR -31h
00003BE4:	INC A
00003BE5:	INC A
00003BE6:	ADD L
00003BE7:	LD L,A
00003BE8:	LD A,00h
00003BEA:	ADC H
00003BEB:	LD H,A
00003BEC:	JR -3Bh
00003BEE:	LD A,B
00003BEF:	AND 0Fh
00003BF1:	POP BC
00003BF2:	SCF
00003BF3:	RET

; 'FN'
00003BF4:	PUSH HL
00003BF5:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003BF8:	CALL 3BA1h
00003BFB:	JR C,-60h
00003BFD:	CP 03h
00003BFF:	JR Z,+05h
00003C01:	CALL 28EBh
00003C04:	JR +03h
00003C06:	CALL 28D9h
00003C09:	EX DE,HL
00003C0A:	LD HL,(262Fh)
00003C0D:	EX HL,(SP)
00003C0E:	CALL 2D58h		; check for '('
00003C11:	PUSH BC
00003C12:	LD C,E
00003C13:	LD B,D
00003C14:	CALL 2D58h		; check for '('
00003C17:	PUSH BC
00003C18:	EX DE,HL
00003C19:	LD HL,0000h
00003C1C:	ADD HL,SP
00003C1D:	LD (262Fh),HL
00003C20:	EX DE,HL
00003C21:	CALL 271Eh
00003C24:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003C27:	CP F5h			; Token for '='
00003C29:	JP NZ,173Ah		; ERROR: Syntax error
00003C2C:	CALL 22F2h		; --
00003C2F:	POP DE
00003C30:	POP BC
00003C31:	CALL 271Eh
00003C34:	POP DE
00003C35:	LD (262Fh),DE
00003C39:	JP 25C4h		; skip SPACEs in (BC), A=next char

00003C3C:	LD A,00h
00003C3E:	JR +11h

; Token for 'KEY' found
00003C40:	INC HL
00003C41:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003C44:	CP F5h			; Token for '='
00003C46:	JR Z,-0Ch
00003C48:	OR A
00003C49:	JR Z,+26h
00003C4B:	CP 0Bh
00003C4D:	JR NC,+22h
00003C4F:	DEC A
00003C50:	INC HL
00003C51:	PUSH AF
00003C52:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003C55:	CP F5h			; Token for '='
00003C57:	JR NZ,+18h
00003C59:	INC HL
00003C5A:	LD C,L
00003C5B:	LD B,H
00003C5C:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003C5F:	LD DE,30A2h
00003C62:	POP AF
00003C63:	ADD A
00003C64:	ADD E
00003C65:	LD E,A
00003C66:	LD A,00h
00003C68:	ADC D
00003C69:	LD D,A
00003C6A:	EX DE,HL
00003C6B:	LD (HL),E
00003C6C:	INC HL
00003C6D:	LD (HL),D
00003C6E:	JP 1B39h

00003C71:	JP 173Ah		; ERROR: Syntax error

00003C74:	DEC BC
00003C75:	XOR A
00003C76:	JR +0Fh

; 'USR'
00003C78:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003C7B:	CP 28h			; '(' ?
00003C7D:	JR Z,-0Bh
00003C7F:	OR A
00003C80:	JR Z,-11h
00003C82:	CP 0Bh
00003C84:	JR NC,-15h
00003C86:	DEC A
00003C87:	PUSH AF
00003C88:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00003C8B:	CP 28h			; '('
00003C8D:	JR NZ,-1Eh
00003C8F:	CALL 22F2h		; --
00003C92:	CP 29h
00003C94:	JR NZ,-25h
00003C96:	POP AF
00003C97:	PUSH BC
00003C98:	PUSH HL
00003C99:	ADD A
00003C9A:	LD DE,30A2h
00003C9D:	ADD E
00003C9E:	LD E,A
00003C9F:	LD A,00h
00003CA1:	ADC D
00003CA2:	LD D,A
00003CA3:	EX DE,HL
00003CA4:	CALL 2AA3h		; LD HL,(HL)
00003CA7:	EX DE,HL
00003CA8:	LD A,D
00003CA9:	OR E
00003CAA:	JP Z,3B9Dh
00003CAD:	LD A,(IY+00h)	; data type, aka PRCSON
00003CB0:	CP 03h			; string type ?
00003CB2:	CALL Z,2AA3h		; LD HL,(HL)
00003CB5:	PUSH HL
00003CB6:	LD HL,3CBCh
00003CB9:	EX HL,(SP)
00003CBA:	PUSH DE
00003CBB:	RET

00003CBC:	POP HL
00003CBD:	POP BC
00003CBE:	JP 25C4h		; skip SPACEs in (BC), A=next char

00003CC1:	JP 20FAh			; ERROR: Reserved feature

; 'SCRN$'
00003CC4:	PUSH HL
00003CC5:	CALL 2D58h		; check for '('
00003CC8:	DEC IY
00003CCA:	CALL 22C7h
00003CCD:	CP 2Ch		; ','
00003CCF:	JP NZ,173Ah		; ERROR: Syntax error
00003CD2:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00003CD5:	CP 20h
00003CD7:	JP NC,1736h		; ERROR: Illegal function call
00003CDA:	LD E,A
00003CDB:	POP HL
00003CDC:	PUSH HL
00003CDD:	PUSH DE
00003CDE:	CALL 22C7h
00003CE1:	CP 2Ch		; ','
00003CE3:	JR NZ,-16h
00003CE5:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00003CE8:	CP 10h
00003CEA:	JR NC,-15h
00003CEC:	POP HL
00003CED:	LD H,A
00003CEE:	PUSH BC
00003CEF:	CALL 093Bh
00003CF2:	LD D,B
00003CF3:	LD E,C
00003CF4:	POP BC
00003CF5:	POP HL
00003CF6:	PUSH HL
00003CF7:	PUSH DE
00003CF8:	CALL 22C7h
00003CFB:	CP 29h
00003CFD:	JR NZ,-30h
00003CFF:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00003D02:	POP HL
00003D03:	POP DE
00003D04:	PUSH BC
00003D05:	PUSH DE
00003D06:	PUSH AF
00003D07:	LD C,L
00003D08:	LD B,H
00003D09:	LD H,A
00003D0A:	LD DE,7A4Fh
00003D0D:	PUSH DE
00003D0E:	CALL 0794h
00003D11:	OR A
00003D12:	JR NZ,+02h
00003D14:	LD A,20h
00003D16:	LD (DE),A
00003D17:	INC BC
00003D18:	INC DE
00003D19:	DEC H
00003D1A:	JR NZ,-0Eh
00003D1C:	POP DE
00003D1D:	POP AF
00003D1E:	LD B,A
00003D1F:	POP HL
00003D20:	PUSH DE
00003D21:	LD DE,0008h
00003D24:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00003D25:	POP DE
00003D26:	CALL 2B1Ah
00003D29:	INC IY
00003D2B:	POP BC
00003D2C:	JP 25B1h

; 'DUMP'
00003D2F:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003D32:	CP 23h
00003D34:	LD A,00h
00003D36:	JR NZ,+03h
00003D38:	INC HL
00003D39:	LD A,02h
00003D3B:	LD (11EBh),A
00003D3E:	PUSH HL
00003D3F:	LD HL,(7A3Bh)		; VARED
00003D42:	LD A,(HL)
00003D43:	OR A
00003D44:	JP Z,3DE4h
00003D47:	RLCA
00003D48:	JR NC,+38h
00003D4A:	RLCA
00003D4B:	JR NC,+07h
00003D4D:	INC HL
00003D4E:	INC HL
00003D4F:	INC HL
00003D50:	INC HL
00003D51:	INC HL
00003D52:	JR -12h

00003D54:	LD A,(HL)
00003D55:	INC HL
00003D56:	PUSH HL
00003D57:	INC HL
00003D58:	AND 0Fh
00003D5A:	CALL 3DEBh
00003D5D:	LD B,(HL)
00003D5E:	INC HL
00003D5F:	LD A,28h
00003D61:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003D64:	PUSH HL
00003D65:	CALL 2AA3h		; LD HL,(HL)
00003D68:	PUSH BC
00003D69:	CALL 16E5h
00003D6C:	POP BC
00003D6D:	POP HL
00003D6E:	INC HL
00003D6F:	INC HL
00003D70:	LD A,2Ch		; ','
00003D72:	DJNZ -13h
00003D74:	LD A,29h
00003D76:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003D79:	CALL 0843h
00003D7C:	POP HL
00003D7D:	CALL 2AA3h		; LD HL,(HL)
00003D80:	JR -40h
00003D82:	PUSH HL
00003D83:	LD A,(HL)
00003D84:	PUSH AF
00003D85:	CALL 3DEBh
00003D88:	LD A,3Dh
00003D8A:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003D8D:	LD A,(IY+00h)	; data type, aka PRCSON
00003D90:	CP 03h			; string type ?
00003D92:	JR NZ,+15h
00003D94:	LD B,(HL)
00003D95:	INC HL
00003D96:	CALL 2AA3h		; LD HL,(HL)
00003D99:	EX DE,HL
00003D9A:	LD A,22h
00003D9C:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003D9F:	CALL 07E1h
00003DA2:	LD A,22h
00003DA4:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003DA7:	JR +20h

00003DA9:	CP 02h
00003DAB:	JR NZ,+0Eh
00003DAD:	CALL 2AA3h		; LD HL,(HL)
00003DB0:	EX DE,HL
00003DB1:	LD HL,7A4Fh
00003DB4:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00003DB8:	CALL 2902h		; FLTHEX:  (HL)=DE
00003DBB:	LD DE,46B1h
00003DBE:	PUSH DE
00003DBF:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00003DC2:	POP HL
00003DC3:	CALL 5D58h
00003DC6:	CALL 07E1h
00003DC9:	CALL 0843h
00003DCC:	POP AF
00003DCD:	POP HL
00003DCE:	INC A
00003DCF:	INC A
00003DD0:	INC A
00003DD1:	LD E,A
00003DD2:	LD D,00h
00003DD4:	ADD HL,DE
00003DD5:	LD A,80h
00003DD7:	INA (01h)
00003DD9:	AND 04h
00003DDB:	CALL Z,0D3Ch
00003DDE:	CALL 0C5Bh	; BRKEY
00003DE1:	JP NZ,3D42h
00003DE4:	POP HL
00003DE5:	LD A,01h
00003DE7:	LD (11EBh),A
00003DEA:	RET

00003DEB:	PUSH AF
00003DEC:	INC HL
00003DED:	LD A,(HL)
00003DEE:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003DF1:	INC HL
00003DF2:	LD A,(HL)
00003DF3:	OR A
00003DF4:	JR NZ,+02h
00003DF6:	LD A,20h
00003DF8:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003DFB:	INC HL
00003DFC:	POP AF
00003DFD:	LD B,21h
00003DFF:	CP 04h		; single precision variable type
00003E01:	JR Z,+0Ch
00003E03:	INC B
00003E04:	INC B
00003E05:	CP 08h		; double precision variable type
00003E07:	JR Z,+06h
00003E09:	INC B
00003E0A:	CP 03h		; string variable type
00003E0C:	JR Z,+01h
00003E0E:	INC B
00003E0F:	LD IY,(7A43h)
00003E13:	LD (IY+00h),A	; data type, aka PRCSON
00003E16:	LD A,B
00003E17:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E1A:	RET

00003E1B:	JP 20FAh			; ERROR: Reserved feature

00003E1E:	PUSH HL
00003E1F:	CALL 0823h
00003E22:	LD C,00h
00003E24:	LD A,C
00003E25:	CP 09h
00003E27:	JR Z,+07h
00003E29:	ADD 31h
00003E2B:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E2E:	JR +09h
00003E30:	LD A,31h
00003E32:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E35:	DEC A
00003E36:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E39:	CALL 0802h
00003E3C:	LD A,C
00003E3D:	CALL 3EDAh		; KEYBCL - HL = Text associated to FN key in A
00003E40:	LD B,(HL)
00003E41:	INC HL
00003E42:	XOR A
00003E43:	CP B
00003E44:	JR Z,+07h
00003E46:	LD A,(HL)
00003E47:	CALL 3E59h
00003E4A:	INC HL
00003E4B:	DJNZ -07h
00003E4D:	CALL 0823h
00003E50:	INC C
00003E51:	LD A,C
00003E52:	CP 0Ah
00003E54:	JR NZ,-32h
00003E56:	POP HL
00003E57:	INC HL
00003E58:	RET
00003E59:	CP 20h
00003E5B:	JP NC,0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E5E:	PUSH AF
00003E5F:	LD A,5Bh
00003E61:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E64:	POP AF
00003E65:	ADD 40h
00003E67:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00003E6A:	LD A,5Dh
00003E6C:	JP 0864h		; OUTCH (PRINT char in A, aka ACCPRT)

00003E6F:	JP 20FAh			; ERROR: Reserved feature

00003E72:	JP 20FAh			; ERROR: Reserved feature

; 'KEY'
00003E75:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003E78:	CP 86h			; Token code for 'LIST'
00003E7A:	JP Z,3E1Eh
00003E7D:	CP 98h			; Token code for 'ON'
00003E7F:	JR Z,-12h
00003E81:	CP 9Ch			; Token code for 'OFF'
00003E83:	JR Z,-13h
00003E85:	LD C,L
00003E86:	LD B,H
00003E87:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00003E8A:	CP 2Ch		; ','
00003E8C:	JP NZ,173Ah		; ERROR: Syntax error
00003E8F:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00003E92:	CP 0Bh
00003E94:	JP NC,1736h		; ERROR: Illegal function call
00003E97:	OR A
00003E98:	JR Z,+25h
00003E9A:	DEC A
00003E9B:	CALL 3EDAh		; KEYBCL - HL = Text associated to FN key in A
00003E9E:	PUSH HL
00003E9F:	CALL 459Dh
00003EA2:	POP DE
00003EA3:	LD A,(HL)
00003EA4:	CP 10h
00003EA6:	JR C,+02h
00003EA8:	LD A,0Fh
00003EAA:	LD (DE),A
00003EAB:	INC DE
00003EAC:	INC HL
00003EAD:	PUSH BC
00003EAE:	LD B,A
00003EAF:	CALL 2AA3h		; LD HL,(HL)
00003EB2:	XOR A
00003EB3:	OR B
00003EB4:	JR Z,+06h
00003EB6:	LD A,(HL)
00003EB7:	LD (DE),A
00003EB8:	INC DE
00003EB9:	INC HL
00003EBA:	DJNZ -06h
00003EBC:	POP HL
00003EBD:	DEC HL
00003EBE:	RET

00003EBF:	CALL 459Dh
00003EC2:	DEC DE
00003EC3:	INC A
00003EC4:	INC A
00003EC5:	LD HL,1204h
00003EC8:	LD (HL),00h
00003ECA:	CP 40h
00003ECC:	JR C,+02h
00003ECE:	LD A,40h
00003ED0:	PUSH BC
00003ED1:	LD B,A
00003ED2:	INC HL
00003ED3:	LD (HL),A
00003ED4:	LD A,(DE)
00003ED5:	INC DE
00003ED6:	DJNZ -06h
00003ED8:	JR -1Eh

; KEYBCL - HL = Text associated to FN key in A
00003EDA:	ADD A
00003EDB:	ADD A
00003EDC:	ADD A
00003EDD:	ADD A
00003EDE:	LD HL,1266h		; FUNBUF - FN key configuration
00003EE1:	ADD L
00003EE2:	LD L,A
00003EE3:	LD A,00h
00003EE5:	ADC H
00003EE6:	LD H,A
00003EE7:	RET

; 'CSRLIN'
00003EE8:	LD DE,0008h
00003EEB:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00003EEC:	LD A,(11EEh)	; Y text coordinate
00003EEF:	LD E,A
00003EF0:	LD D,00h
00003EF2:	CALL 2902h		; FLTHEX:  (HL)=DE
00003EF5:	LD A,04h		; single precision variable type
00003EF7:	CALL 28EBh
00003EFA:	JP 25C4h		; skip SPACEs in (BC), A=next char

00003EFD:	PUSH DE
00003EFE:	PUSH HL
00003EFF:	LD HL,3F4Fh
00003F02:	LD (3F33h),HL
00003F05:	JR +0Bh
00003F07:	POP HL
00003F08:	POP DE
00003F09:	RET

; REFLNO: ... Line ref = Number
00003F0A:	PUSH DE
00003F0B:	PUSH HL
00003F0C:	LD HL,3F35h
00003F0F:	LD (3F33h),HL
00003F12:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00003F15:	DEC HL
00003F16:	INC HL
00003F17:	LD A,(HL)
00003F18:	INC HL
00003F19:	OR (HL)
00003F1A:	JR Z,-15h
00003F1C:	INC HL
00003F1D:	LD E,(HL)
00003F1E:	INC HL
00003F1F:	LD D,(HL)
00003F20:	LD (3F82h),DE
00003F24:	CALL 4440h		; Parse the content of a 'DATA' line
00003F27:	OR A
00003F28:	JR Z,-14h
00003F2A:	CP 0Bh
00003F2C:	JR Z,+04h
00003F2E:	CP 0Ch
00003F30:	JR NZ,-0Eh
00003F32:	JP 3F35h
00003F35:	CP 0Bh
00003F37:	JR Z,-15h
00003F39:	DEC HL
00003F3A:	LD E,(HL)
00003F3B:	INC HL
00003F3C:	LD D,(HL)
00003F3D:	PUSH HL
00003F3E:	EX DE,HL
00003F3F:	INC HL
00003F40:	INC HL
00003F41:	LD E,(HL)
00003F42:	INC HL
00003F43:	LD D,(HL)
00003F44:	POP HL
00003F45:	LD (HL),D
00003F46:	DEC HL
00003F47:	LD (HL),E
00003F48:	DEC HL
00003F49:	LD (HL),0Bh
00003F4B:	INC HL
00003F4C:	INC HL
00003F4D:	JR -2Bh
00003F4F:	CP 0Ch
00003F51:	JR Z,-2Fh
00003F53:	DEC HL
00003F54:	PUSH HL
00003F55:	CALL 2AA3h		; LD HL,(HL)
00003F58:	LD E,L
00003F59:	LD D,H
00003F5A:	CALL 3F8Eh
00003F5D:	JR C,+0Bh
00003F5F:	EX DE,HL
00003F60:	POP HL
00003F61:	DEC HL
00003F62:	LD (HL),0Ch
00003F64:	INC HL
00003F65:	LD (HL),E
00003F66:	INC HL
00003F67:	LD (HL),D
00003F68:	JR -1Dh
00003F6A:	EX DE,HL
00003F6B:	LD DE,6A1Fh
00003F6E:	LD B,15h
00003F70:	CALL 07E1h
00003F73:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00003F76:	CALL 16E5h
00003F79:	LD DE,170Ah
00003F7C:	LD B,04h
00003F7E:	CALL 07E1h
00003F81:	LD HL,0000h
00003F84:	CALL 16E5h
00003F87:	CALL 0823h
00003F8A:	POP HL
00003F8B:	INC HL
00003F8C:	JR -26h
00003F8E:	PUSH BC
00003F8F:	PUSH DE
00003F90:	EX DE,HL
00003F91:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
00003F94:	LD (3F99h),HL
00003F97:	PUSH HL
00003F98:	LD HL,0000h
00003F9B:	POP HL
00003F9C:	LD (3F99h),HL
00003F9F:	LD C,(HL)
00003FA0:	INC HL
00003FA1:	LD B,(HL)
00003FA2:	LD A,B
00003FA3:	OR C
00003FA4:	JR Z,+1Eh
00003FA6:	PUSH BC
00003FA7:	INC HL
00003FA8:	LD C,(HL)
00003FA9:	INC HL
00003FAA:	LD B,(HL)
00003FAB:	LD A,C
00003FAC:	CP E
00003FAD:	JR NZ,+0Ch
00003FAF:	LD A,B
00003FB0:	CP D
00003FB1:	DEC HL
00003FB2:	DEC HL
00003FB3:	DEC HL
00003FB4:	JR NZ,+05h
00003FB6:	POP BC
00003FB7:	OR A
00003FB8:	POP DE
00003FB9:	POP BC
00003FBA:	RET

00003FBB:	PUSH DE
00003FBC:	EX DE,HL
00003FBD:	OR A
00003FBE:	SBC HL,BC
00003FC0:	POP DE
00003FC1:	POP HL
00003FC2:	JR NC,-2Dh
00003FC4:	SCF
00003FC5:	JR -0Fh

; Get arguments for line number range (xxx-yyy), DE to BC.
00003FC7:	LD DE,0000h
00003FCA:	LD BC,FFFFh
00003FCD:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003FD0:	OR A
00003FD1:	RET Z
00003FD2:	CP 3Ah
00003FD4:	RET Z
00003FD5:	CP 2Dh
00003FD7:	JR Z,+2Ch
00003FD9:	CP 2Ch		; ','
00003FDB:	JR Z,+28h
00003FDD:	CP 2Eh		; '.'
00003FDF:	JR NZ,+06h
00003FE1:	LD DE,(372Ah)	; EDLINE
00003FE5:	JR +09h

00003FE7:	CP 0Bh
00003FE9:	JP NZ,173Ah		; ERROR: Syntax error
00003FEC:	INC HL
00003FED:	LD E,(HL)
00003FEE:	INC HL
00003FEF:	LD D,(HL)
00003FF0:	INC HL
00003FF1:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00003FF4:	CP 2Dh
00003FF6:	JR Z,+0Dh
00003FF8:	CP 2Ch		; ','
00003FFA:	JR Z,+09h
00003FFC:	LD C,E
00003FFD:	LD B,D
00003FFE:	OR A
00003FFF:	RET Z
00004000:	NOP
00004001:	LD A,(18C8h)
00004004:	CALL PO,CD23h
00004007:	ADD A
00004008:	ADD HL,HL
00004009:	OR A
0000400A:	RET Z
0000400B:	CP 3Ah
0000400D:	RET Z
0000400E:	CP 2Eh		; '.'
00004010:	JR NZ,+06h
00004012:	LD BC,(372Ah)	; EDLINE
00004016:	INC HL
00004017:	RET

00004018:	CP 0Bh
0000401A:	JR NZ,-33h
0000401C:	INC HL
0000401D:	LD C,(HL)
0000401E:	INC HL
0000401F:	LD B,(HL)
00004020:	INC HL
00004021:	RET

; 'EDIT'
00004022:	CALL 3FC7h		; Get arguments for line number range (xxx-yyy), DE to BC.
00004025:	PUSH DE
00004026:	EX DE,HL
00004027:	CALL 3F8Eh
0000402A:	JP C,43DCh		; ERROR: Undefined label
0000402D:	XOR A
0000402E:	LD (11EBh),A
00004031:	EX DE,HL
00004032:	POP HL
00004033:	CALL 16E5h
00004036:	CALL 0862h		; OUTSP: print ' '   (aka SPPRT)
00004039:	EX DE,HL
0000403A:	LD DE,0004h
0000403D:	ADD HL,DE
0000403E:	CALL 4128h
00004041:	LD A,01h
00004043:	LD (11EBh),A
00004046:	LD A,1Dh
00004048:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
0000404B:	DJNZ -07h
0000404D:	JP 148Bh

00004050:	PUSH BC
00004051:	PUSH DE
00004052:	PUSH HL
00004053:	LD HL,3258h
00004056:	LD (40F6h),HL
00004059:	LD HL,3289h
0000405C:	JR +0Ch
0000405E:	PUSH BC
0000405F:	PUSH DE
00004060:	PUSH HL
00004061:	LD HL,40F8h
00004064:	LD (40F6h),HL
00004067:	LD HL,4106h
0000406A:	LD DE,0000h
0000406D:	LD BC,FFFFh
00004070:	JR +1Fh

; 'LIST#1'
00004072:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004075:	CP 2Ch		; ','
00004077:	JR NZ,+01h
00004079:	INC HL
0000407A:	LD A,02h
0000407C:	JR +01h

; 'LIST'
0000407E:	XOR A
0000407F:	LD (11EBh),A
00004082:	PUSH BC
00004083:	PUSH DE
00004084:	CALL 3FC7h		; Get arguments for line number range (xxx-yyy), DE to BC.
00004087:	PUSH HL
00004088:	LD HL,40FDh
0000408B:	LD (40F6h),HL
0000408E:	LD HL,410Eh
00004091:	LD (4104h),HL
00004094:	LD (40AEh),DE		; LISTSN (self modifying code)
00004098:	LD (40BCh),BC		; LISTEN (self modifying code)
0000409C:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
0000409F:	LD E,(HL)		; {LDDEMI:}
000040A0:	INC HL
000040A1:	LD D,(HL)
000040A2:	INC HL
000040A3:	LD A,D
000040A4:	OR E		; ...{LDDEMI:}
000040A5:	JR Z,+1Eh
000040A7:	PUSH DE
000040A8:	LD E,(HL)
000040A9:	INC HL
000040AA:	LD D,(HL)
000040AB:	INC HL
000040AC:	PUSH HL
000040AD:	LD HL,0000h		; 40AEh = LISTSN (self modifying code)
000040B0:	OR A
000040B1:	SBC HL,DE
000040B3:	JR C,+06h
000040B5:	JR Z,+04h
000040B7:	POP HL
000040B8:	POP HL
000040B9:	JR -1Ch
000040BB:	LD HL,0000h		; 40BCh = LISTEN (self modifying code)
000040BE:	OR A
000040BF:	SBC HL,DE
000040C1:	JR NC,+04h
000040C3:	POP HL
000040C4:	POP HL
000040C5:	JR +58h

000040C7:	EX DE,HL
000040C8:	LD (372Ah),HL	; EDLINE
000040CB:	LD DE,7A4Fh
000040CE:	CALL 62A8h
000040D1:	LD HL,0005h
000040D4:	ADD HL,DE
000040D5:	LD (HL),20h
000040D7:	INC HL
000040D8:	EX DE,HL
000040D9:	POP HL
000040DA:	CALL 653Ah
000040DD:	LD DE,7A4Fh
000040E0:	PUSH BC
000040E1:	LD B,05h
000040E3:	LD A,(DE)
000040E4:	CP 30h
000040E6:	INC DE
000040E7:	JR NZ,+02h
000040E9:	DJNZ -08h
000040EB:	POP BC
000040EC:	DEC DE
000040ED:	LD (3278h),DE
000040F1:	LD A,(DE)
000040F2:	OR A
000040F3:	JR Z,+0Eh
000040F5:	JP 0000h
000040F8:	CALL 4558h
000040FB:	JR +03h
000040FD:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00004100:	INC DE
00004101:	JR -12h
00004103:	JP 0000h
00004106:	LD A,0Dh
00004108:	CALL 4558h
0000410B:	POP HL
0000410C:	JR +04h
0000410E:	CALL 0823h
00004111:	POP HL
00004112:	LD A,80h
00004114:	INA (01h)
00004116:	AND 04h
00004118:	JR Z,-08h
0000411A:	CALL 0C5Bh	; BRKEY
0000411D:	JR NZ,-66h
0000411F:	POP HL
00004120:	POP DE
00004121:	POP BC
00004122:	LD A,01h
00004124:	LD (11EBh),A
00004127:	RET

00004128:	PUSH HL
00004129:	LD DE,7A4Fh
0000412C:	CALL 653Ah
0000412F:	LD B,00h
00004131:	LD A,(DE)
00004132:	OR A
00004133:	JR Z,+07h
00004135:	CALL 0864h		; OUTCH (PRINT char in A, aka ACCPRT)
00004138:	INC DE
00004139:	INC B
0000413A:	JR -0Bh
0000413C:	POP HL
0000413D:	RET

; 'UNTIL'
0000413E:	POP DE
0000413F:	POP BC
00004140:	PUSH BC
00004141:	INC B
00004142:	LD A,18h
00004144:	JP NZ,2196h		; error handling
00004147:	LD A,C
00004148:	ADD 06h
0000414A:	JR NZ,-0Ah
0000414C:	PUSH DE
0000414D:	LD C,L
0000414E:	LD B,H
0000414F:	CALL 2299h
00004152:	LD A,(HL)
00004153:	OR A
00004154:	LD L,C
00004155:	LD H,B
00004156:	DEC HL
00004157:	JR NZ,+17h
00004159:	LD HL,0004h
0000415C:	ADD HL,SP
0000415D:	LD E,(HL)
0000415E:	INC HL
0000415F:	LD D,(HL)
00004160:	INC HL
00004161:	LD (16CCh),DE	; current program line
00004165:	LD E,(HL)
00004166:	INC HL
00004167:	LD D,(HL)
00004168:	LD (1612h),DE	; NXTLPT: ptr for BASIC interpreter
0000416C:	INC HL
0000416D:	JP 2AA3h		; LD HL,(HL)

00004170:	POP IX
00004172:	POP BC
00004173:	POP BC
00004174:	POP BC
00004175:	POP BC
00004176:	LD PC,IX

; 'RETURN'
00004178:	POP IX
0000417A:	POP BC
0000417B:	INC BC
0000417C:	LD A,B
0000417D:	OR C
0000417E:	JR Z,+1Dh
00004180:	INC BC
00004181:	LD A,B
00004182:	OR C
00004183:	JR NZ,+1Eh
00004185:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004188:	EX DE,HL
00004189:	POP HL
0000418A:	LD (16CCh),HL	; current program line
0000418D:	POP HL
0000418E:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
00004191:	POP HL
00004192:	PUSH IX
00004194:	CP 3Ah
00004196:	RET Z
00004197:	OR A
00004198:	RET Z
00004199:	EX DE,HL
0000419A:	JP 43B1h		; 'GOTO'

0000419D:	LD A,03h
0000419F:	PUSH BC
000041A0:	JP 2196h		; error handling

000041A3:	DEC BC
000041A4:	DEC BC
000041A5:	XOR A
000041A6:	CP C
000041A7:	JR NZ,-0Ch
000041A9:	EX DE,HL
000041AA:	LD HL,0016h
000041AD:	ADD HL,SP
000041AE:	LD SP,HL
000041AF:	EX DE,HL
000041B0:	JR -38h

; 'WHILE'
000041B2:	POP BC
000041B3:	PUSH HL
000041B4:	EX DE,HL
000041B5:	LD HL,(1612h)	; NXTLPT: ptr for BASIC interpreter
000041B8:	LD (41D1h),HL
000041BB:	PUSH HL
000041BC:	LD HL,(16CCh)	; current program line
000041BF:	LD (41D7h),HL
000041C2:	PUSH HL
000041C3:	LD HL,FFF9h
000041C6:	PUSH HL
000041C7:	CALL 1EB0h		; MEMECK: (SBC SP,DE)
000041CA:	EX DE,HL
000041CB:	DEC HL
000041CC:	CALL 420Bh
000041CF:	EX DE,HL
000041D0:	LD HL,0000h
000041D3:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
000041D6:	LD HL,0000h
000041D9:	LD (16CCh),HL	; current program line
000041DC:	EX DE,HL
000041DD:	PUSH BC
000041DE:	INC HL
; 'WEND'
000041DF:	POP DE
000041E0:	POP BC
000041E1:	PUSH BC
000041E2:	INC B
000041E3:	LD A,1Ah
000041E5:	JP NZ,2196h		; error handling
000041E8:	LD A,07h
000041EA:	ADD C
000041EB:	JR NZ,-0Ah
000041ED:	PUSH DE
000041EE:	PUSH HL
000041EF:	LD HL,000Ah
000041F2:	ADD HL,SP
000041F3:	CALL 2AA3h		; LD HL,(HL)
000041F6:	LD C,L
000041F7:	LD B,H
000041F8:	CALL 2299h
000041FB:	LD A,(HL)
000041FC:	OR A
000041FD:	POP HL
000041FE:	JP Z,4170h
00004201:	PUSH BC
00004202:	LD HL,0008h
00004205:	CALL 415Ch
00004208:	POP HL
00004209:	DEC HL
0000420A:	RET

0000420B:	CALL 4440h		; Parse the content of a 'DATA' line
0000420E:	OR A
0000420F:	JR Z,+0Ch
00004211:	CP 9Eh			; Token code for 'WEND'
00004213:	RET Z
00004214:	CP 9Dh			; Token code for 'WHILE'
00004216:	JR NZ,-0Dh
00004218:	CALL 420Bh
0000421B:	JR -12h
0000421D:	INC HL
0000421E:	LD E,(HL)		; {LDDEMI:}
0000421F:	INC HL
00004220:	LD D,(HL)
00004221:	INC HL
00004222:	LD A,D
00004223:	OR E		; ...{LDDEMI:}
00004224:	LD A,19h
00004226:	JP Z,2196h		; error handling
00004229:	LD (41D1h),DE
0000422D:	LD E,(HL)
0000422E:	INC HL
0000422F:	LD D,(HL)
00004230:	LD (41D7h),DE
00004234:	JR -2Bh
00004236:	LD DE,00C8h
00004239:	JR +03h
0000423B:	LD DE,FFFFh
0000423E:	LD (0CC9h),DE
00004242:	INC HL
00004243:	RET

; 'REPEAT'
00004244:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004247:	CP 98h			; Token code for 'ON'
00004249:	JR Z,-15h
0000424B:	CP 9Ch			; Token code for 'OFF'
0000424D:	JR Z,-14h
0000424F:	POP BC
00004250:	PUSH HL
00004251:	EX DE,HL
00004252:	LD HL,(1612h)	; NXTLPT: ptr for BASIC interpreter
00004255:	PUSH HL
00004256:	LD HL,(16CCh)	; current program line
00004259:	PUSH HL
0000425A:	LD HL,FFFAh
0000425D:	PUSH HL
0000425E:	EX DE,HL
0000425F:	PUSH BC
00004260:	JP 1EB0h		; MEMECK: (SBC SP,DE)

; 'GOSUB'
00004263:	POP BC
00004264:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004267:	CP 0Bh
00004269:	JR Z,+15h
0000426B:	CP 0Ch
0000426D:	JR Z,+11h
0000426F:	PUSH HL
00004270:	PUSH BC
00004271:	CALL 459Bh
00004274:	DEC BC
00004275:	LD L,C
00004276:	LD H,B
00004277:	POP BC
00004278:	EX HL,(SP)
00004279:	INC HL
0000427A:	INC HL
0000427B:	INC HL
0000427C:	LD A,22h
0000427E:	JR +04h
00004280:	INC HL
00004281:	INC HL
00004282:	INC HL
00004283:	PUSH HL
00004284:	EX DE,HL
00004285:	LD HL,(1612h)	; NXTLPT: ptr for BASIC interpreter
00004288:	PUSH HL
00004289:	LD HL,(16CCh)	; current program line
0000428C:	PUSH HL
0000428D:	LD HL,FFFEh
00004290:	PUSH HL
00004291:	EX DE,HL
00004292:	PUSH BC
00004293:	CALL 1EB0h		; MEMECK: (SBC SP,DE)
00004296:	DEC HL
00004297:	DEC HL
00004298:	JP 43B5h

; 'ON..GOSUB'
0000429B:	PUSH HL
0000429C:	CALL 1CC8h		; 'DATA', 'LABEL'
0000429F:	POP DE
000042A0:	POP BC
000042A1:	PUSH HL
000042A2:	EX DE,HL
000042A3:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000042A6:	INC HL
000042A7:	INC HL
000042A8:	INC HL
000042A9:	JR -27h

000042AB:	DEC HL
000042AC:	CALL 42BEh
000042AF:	PUSH HL
000042B0:	LD HL,(42D3h)
000042B3:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
000042B6:	LD HL,0000h
000042B9:	LD (16CCh),HL	; current program line
000042BC:	POP HL
000042BD:	RET

000042BE:	CALL 459Bh
000042C1:	OR A
000042C2:	JP Z,43DCh		; ERROR: Undefined label
000042C5:	LD (42FDh),A
000042C8:	LD (430Ch),DE
000042CC:	LD HL,7C4Eh		; TEXTST,  address of BASIC  program
000042CF:	LD (42D3h),HL
000042D2:	LD HL,0000h
000042D5:	LD (4353h),HL
000042D8:	LD E,(HL)		; {LDDEMI:}
000042D9:	INC HL
000042DA:	LD D,(HL)
000042DB:	INC HL
000042DC:	LD A,D
000042DD:	OR E		; ...{LDDEMI:}
000042DE:	JP Z,43DCh		; ERROR: Undefined label
000042E1:	LD (42D3h),DE
000042E5:	LD E,(HL)
000042E6:	INC HL
000042E7:	LD D,(HL)
000042E8:	LD (42B7h),DE
000042EC:	CALL 4440h		; Parse the content of a 'DATA' line
000042EF:	OR A
000042F0:	JR Z,-20h
000042F2:	CP C2h			; Token code for 'LABEL'
000042F4:	JR NZ,-0Ah
000042F6:	INC HL
000042F7:	CALL 459Bh
000042FA:	DEC BC
000042FB:	PUSH BC
000042FC:	CP 00h
000042FE:	JR NZ,+19h
00004300:	LD C,A
00004301:	LD B,00h
00004303:	EX DE,HL
00004304:	LD DE,7A4Fh
00004307:	PUSH DE
00004308:	LDIR
0000430A:	LD B,A
0000430B:	LD DE,0000h
0000430E:	POP HL
0000430F:	LD A,(DE)
00004310:	CP (HL)
00004311:	JR NZ,+06h
00004313:	INC HL
00004314:	INC DE
00004315:	DJNZ -08h
00004317:	POP HL
00004318:	RET
00004319:	POP HL
0000431A:	DEC HL
0000431B:	JR -31h
0000431D:	INC HL
0000431E:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004321:	CP 81h			; Token code for 'GOTO'
00004323:	JP NZ,173Ah		; ERROR: Syntax error
00004326:	INC HL
00004327:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
0000432A:	CP 0Bh
0000432C:	JR NZ,+1Bh
0000432E:	INC HL
0000432F:	PUSH HL
00004330:	CALL 2AA3h		; LD HL,(HL)
00004333:	LD A,L
00004334:	OR H
00004335:	JR Z,+2Fh
00004337:	CALL 3F8Eh
0000433A:	JP C,43DCh		; ERROR: Undefined label
0000433D:	LD (2183h),HL
00004340:	LD A,01h
00004342:	LD (2250h),A	; ERRORF  ..current error condition
00004345:	POP HL
00004346:	INC HL
00004347:	INC HL
00004348:	RET

00004349:	CP 22h
0000434B:	JP NZ,43DCh		; ERROR: Undefined label
0000434E:	PUSH HL
0000434F:	CALL 42BEh
00004352:	LD HL,0000h
00004355:	LD (2183h),HL
00004358:	POP HL
00004359:	CALL 4464h
0000435C:	OR A
0000435D:	JR Z,+01h
0000435F:	INC HL
00004360:	LD A,01h
00004362:	LD (2250h),A	; ERRORF  ..current error condition
00004365:	RET

00004366:	LD A,(2250h)	; ERRORF  ..current error condition
00004369:	CP 02h
0000436B:	LD A,00h
0000436D:	JR NZ,-2Dh
0000436F:	JP 228Dh

; 'ON'
00004372:	LD C,L
00004373:	LD B,H
00004374:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004377:	CP B5h			; Token code for 'ERROR'
00004379:	JR Z,-5Eh
0000437B:	CALL 2299h
0000437E:	LD DE,429Bh		; 'ON..GOSUB'
00004381:	CP 82h			; Token code for 'GOSUB'
00004383:	JR Z,+08h
00004385:	LD DE,43B1h		; 'GOTO'
00004388:	CP 81h			; Token code for 'GOTO' 
0000438A:	JP NZ,173Ah		; ERROR: Syntax error
0000438D:	PUSH DE
0000438E:	CALL 6167h		; HLFLT
00004391:	JR C,+18h
00004393:	LD A,H
00004394:	OR A
00004395:	JR NZ,+14h
00004397:	LD A,L
00004398:	OR A
00004399:	JR Z,+10h
0000439B:	LD L,C
0000439C:	LD H,B
0000439D:	LD B,A
0000439E:	DEC B
0000439F:	RET Z
000043A0:	CALL 43EBh
000043A3:	CP 2Ch		; ','
000043A5:	INC HL
000043A6:	JR Z,-0Ah
000043A8:	DEC HL
000043A9:	POP DE
000043AA:	RET

000043AB:	POP DE
000043AC:	LD L,C
000043AD:	LD H,B
000043AE:	JP 1CC8h		; 'DATA', 'LABEL'

; 'GOTO'
000043B1:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000043B4:	INC HL
000043B5:	CP 0Ch
000043B7:	JR NZ,+0Ah
000043B9:	CALL 2AA3h		; LD HL,(HL)
000043BC:	LD (1612h),HL	; NXTLPT: ptr for BASIC interpreter
000043BF:	POP BC
000043C0:	JP 1611h

000043C3:	CP 0Bh
000043C5:	JP NZ,42ABh
000043C8:	LD E,(HL)
000043C9:	INC HL
000043CA:	LD D,(HL)
000043CB:	EX DE,HL
000043CC:	CALL 3F8Eh
000043CF:	JR C,+0Bh		; ERROR: Undefined label
000043D1:	EX DE,HL
000043D2:	LD (HL),D
000043D3:	DEC HL
000043D4:	LD (HL),E
000043D5:	DEC HL
000043D6:	LD (HL),0Ch
000043D8:	EX DE,HL
000043D9:	JP 43BCh

000043DC:	LD A,08h		; Undefined label
000043DE:	JP 2196h		; error handling

000043E1:	CALL 4464h
000043E4:	OR A
000043E5:	JR Z,+14h
000043E7:	INC HL
000043E8:	JP 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000043EB:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000043EE:	CP 22h
000043F0:	JR Z,-11h
000043F2:	INC HL
000043F3:	INC HL
000043F4:	INC HL
000043F5:	CP 0Bh
000043F7:	JR Z,+02h
000043F9:	CP 0Ch
000043FB:	JP Z,2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000043FE:	JP 173Ah		; ERROR: Syntax error

; 'IF'
00004401:	LD C,L
00004402:	LD B,H
00004403:	CALL 2299h
00004406:	EX AF,AF'
00004407:	LD A,(HL)
00004408:	OR A
00004409:	LD L,C
0000440A:	LD H,B
0000440B:	DEC HL
0000440C:	JR Z,+15h
0000440E:	EX AF,AF'
0000440F:	CP E1h			; token code for 'THEN'
00004411:	RET NZ
00004412:	INC HL
00004413:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
00004416:	CP 0Bh
00004418:	JR Z,-66h
0000441A:	CP 0Ch
0000441C:	JR Z,-6Ah
0000441E:	CP 22h
00004420:	JR Z,-6Eh
00004422:	RET

00004423:	DEC HL
00004424:	CALL 442Dh
00004427:	JR NC,-17h
00004429:	POP HL
0000442A:	JP 1611h

0000442D:	CALL 4440h		; Parse the content of a 'DATA' line
00004430:	OR A
00004431:	SCF
00004432:	RET Z
00004433:	CP B8h			; Token code for 'ELSE'
00004435:	RET Z
00004436:	CP 8Eh			; Token code for 'IF'
00004438:	JR NZ,-0Dh
0000443A:	CALL 442Dh
0000443D:	RET C
0000443E:	JR -13h

; Parse the content of a 'DATA' line
00004440:	INC HL
00004441:	LD A,(HL)
00004442:	OR A
00004443:	RET Z
00004444:	CP FFh
00004446:	JR Z,+0Fh
00004448:	CP 22h	; '"'
0000444A:	JR Z,+18h
0000444C:	CP 20h	; ' '
0000444E:	RET NC
0000444F:	CP 0Bh
00004451:	RET C
00004452:	CP 14h
00004454:	JR NC,+03h
00004456:	INC HL
00004457:	INC HL
00004458:	RET

00004459:	AND 0Fh
0000445B:	ADD L
0000445C:	LD L,A
0000445D:	LD A,00h
0000445F:	ADC H
00004460:	LD H,A
00004461:	LD A,20h
00004463:	RET

00004464:	INC HL
00004465:	LD A,(HL)
00004466:	OR A
00004467:	RET Z
00004468:	CP 22h
0000446A:	RET Z
0000446B:	JR -09h

; 'PUSH'
0000446D:	LD C,L
0000446E:	LD B,H
0000446F:	CALL 3B90h
00004472:	POP HL
00004473:	LD (44B2h),HL
00004476:	LD HL,(7A4Bh)
00004479:	LD IY,(7A43h)
0000447D:	LD (IY+00h),00h	; data type, aka PRCSON
00004481:	CALL 22F2h		; --
00004484:	EX AF,AF'
00004485:	LD A,(IY+00h)	; data type, aka PRCSON
00004488:	CP 03h			; string type ?
0000448A:	JP Z,1732h		; ERROR: Type mismatch
0000448D:	EX DE,HL
0000448E:	LD HL,FFF8h			; -8 (normal precision BASICs would have '-5')
00004491:	ADD HL,SP
00004492:	LD SP,HL
00004493:	PUSH BC
00004494:	CALL 28A9h		; CLRFAC: Set FP accumulator to 0
00004497:	LD B,A
00004498:	LD C,A
00004499:	LD A,(DE)
0000449A:	LD (HL),A
0000449B:	INC HL
0000449C:	INC DE
0000449D:	DJNZ -06h
0000449F:	LD D,C
000044A0:	POP BC
000044A1:	LD E,FDh
000044A3:	PUSH DE
000044A4:	EX AF,AF'
000044A5:	PUSH AF
000044A6:	CALL 1EB0h		; MEMECK: (SBC SP,DE)
000044A9:	POP AF
000044AA:	CP 2Ch		; ','
000044AC:	JR Z,-38h
000044AE:	LD L,C
000044AF:	LD H,B
000044B0:	DEC HL
000044B1:	JP 0000h

; 'POP'
000044B4:	LD C,L
000044B5:	LD B,H
000044B6:	CALL 3B90h
000044B9:	POP HL
000044BA:	LD (44B2h),HL
000044BD:	CALL 1ED3h		; INTGTV:  get variable
000044C0:	POP DE
000044C1:	CP 02h
000044C3:	JR Z,+32h
000044C5:	CP 03h
000044C7:	JP Z,1732h		; ERROR: Type mismatch
000044CA:	CP D
000044CB:	JR NZ,+25h
000044CD:	LD A,E
000044CE:	CP FDh
000044D0:	JR NZ,+20h
000044D2:	LD A,D
000044D3:	EX DE,HL
000044D4:	LD HL,0000h
000044D7:	ADD HL,SP
000044D8:	PUSH BC
000044D9:	LD B,A
000044DA:	LD A,(HL)
000044DB:	LD (DE),A
000044DC:	INC HL
000044DD:	INC DE
000044DE:	DJNZ -06h
000044E0:	POP BC
000044E1:	LD HL,0008h
000044E4:	ADD HL,SP
000044E5:	LD SP,HL
000044E6:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000044E9:	CP 2Ch		; ','
000044EB:	JR Z,-30h
000044ED:	LD L,C
000044EE:	LD H,B
000044EF:	JP 44B0h

000044F2:	LD A,1Eh
000044F4:	JP 2196h		; error handling

000044F7:	LD A,D
000044F8:	CP 03h
000044FA:	JR Z,-0Ah
000044FC:	LD A,E
000044FD:	CP FDh
000044FF:	JR NZ,-0Fh
00004501:	LD A,D
00004502:	EX DE,HL
00004503:	LD HL,0000h
00004506:	ADD HL,SP
00004507:	CALL 2D97h		; HLFLT_2
0000450A:	EX DE,HL
0000450B:	LD (HL),E
0000450C:	INC HL
0000450D:	LD (HL),D
0000450E:	DEC HL
0000450F:	JR -30h

00004511:	PUSH HL
00004512:	LD HL,0000h
00004515:	LD (4527h),HL
00004518:	LD HL,45B1h
0000451B:	LD (4524h),HL
0000451E:	XOR A
0000451F:	JR +31h
00004521:	PUSH HL
00004522:	PUSH BC
00004523:	LD HL,45B1h
00004526:	LD BC,0000h
00004529:	LD A,B
0000452A:	OR C
0000452B:	JR NZ,+1Ah
0000452D:	LD HL,45B1h
00004530:	LD (4524h),HL
00004533:	LD (13AAh),HL	; MTADRS (data position in File Control Block)
00004536:	LD BC,0100h
00004539:	LD (4527h),BC
0000453D:	LD (13A8h),BC	; MTBYTE (size in File Control Block)
00004541:	CALL 0134h	; MLOAD
00004544:	JP C,4554h
00004547:	LD A,(HL)
00004548:	INC HL
00004549:	DEC BC
0000454A:	LD (4524h),HL
0000454D:	LD (4527h),BC
00004551:	POP BC
00004552:	POP HL
00004553:	RET
00004554:	POP HL
00004555:	POP BC
00004556:	SCF
00004557:	RET
00004558:	PUSH BC
00004559:	PUSH HL
0000455A:	LD HL,(4524h)
0000455D:	LD BC,(4527h)
00004561:	LD (HL),A
00004562:	INC HL
00004563:	INC BC
00004564:	LD (4524h),HL
00004567:	LD A,B
00004568:	CP 01h
0000456A:	JR NZ,+10h
0000456C:	LD HL,45B1h
0000456F:	LD (13AAh),HL	; MTADRS (data position in File Control Block)
00004572:	LD (13A8h),BC	; MTBYTE (size in File Control Block)
00004576:	CALL 00B6h	; MSAVE
00004579:	LD BC,0000h
0000457C:	LD (4527h),BC
00004580:	LD (4524h),HL
00004583:	OR A
00004584:	JR -35h
00004586:	PUSH BC
00004587:	PUSH HL
00004588:	LD HL,45B1h
0000458B:	LD (13AAh),HL	; MTADRS (data position in File Control Block)
0000458E:	LD HL,0100h
00004591:	LD (13A8h),HL	; MTBYTE (size in File Control Block)
00004594:	CALL 00B6h	; MSAVE
00004597:	JR C,-45h
00004599:	JR -4Ah
0000459B:	LD C,L
0000459C:	LD B,H


0000459D:	LD HL,(7A4Bh)
000045A0:	LD IY,(7A43h)
000045A4:	LD (IY+00h),00h	; data type, aka PRCSON
000045A8:	CALL 22B2h
000045AB:	CALL 6BF6h		; Load a string parameter
000045AE:	JP 170Eh

000045B1:	RET NZ
000045B2:	LD L,E
000045B3:	DEC DE
000045B4:	LD H,E
000045B5:	LD C,D
000045B6:	LD E,E
000045B7:	NOP
000045B8:	NOP
000045B9:	OR D
000045BA:	LD L,C
000045BB:	DEC SP
000045BC:	LD A,D
000045BD:	AND E
000045BE:	LD (HL),E
000045BF:	NOP
000045C0:	NOP
000045C1:	NOP
000045C2:	NOP
000045C3:	NOP
000045C4:	NOP
000045C5:	NOP
000045C6:	NOP
000045C7:	NOP
000045C8:	NOP
000045C9:	NOP
000045CA:	NOP
000045CB:	NOP
000045CC:	NOP
000045CD:	NOP
000045CE:	NOP
000045CF:	NOP
000045D0:	NOP
000045D1:	NOP
000045D2:	NOP
000045D3:	NOP
000045D4:	NOP
000045D5:	NOP
000045D6:	NOP
000045D7:	NOP
000045D8:	NOP
000045D9:	NOP
000045DA:	NOP
000045DB:	NOP
000045DC:	NOP
000045DD:	NOP
000045DE:	NOP
000045DF:	NOP
000045E0:	NOP
000045E1:	NOP
000045E2:	NOP
000045E3:	NOP
000045E4:	NOP
000045E5:	NOP
000045E6:	NOP
000045E7:	NOP
000045E8:	NOP
000045E9:	NOP
000045EA:	NOP
000045EB:	NOP
000045EC:	NOP
000045ED:	NOP
000045EE:	NOP
000045EF:	NOP
000045F0:	NOP
000045F1:	NOP
000045F2:	NOP
000045F3:	NOP
000045F4:	NOP
000045F5:	NOP
000045F6:	NOP
000045F7:	NOP
000045F8:	NOP
000045F9:	NOP
000045FA:	NOP
000045FB:	NOP
000045FC:	NOP
000045FD:	NOP
000045FE:	NOP
000045FF:	NOP
00004600:	NOP
00004601:	NOP
00004602:	NOP
00004603:	NOP
00004604:	NOP
00004605:	NOP
00004606:	NOP
00004607:	NOP
00004608:	NOP
00004609:	NOP
0000460A:	NOP
0000460B:	NOP
0000460C:	NOP
0000460D:	NOP
0000460E:	NOP
0000460F:	NOP
00004610:	NOP
00004611:	NOP
00004612:	NOP
00004613:	NOP
00004614:	NOP
00004615:	NOP
00004616:	NOP
00004617:	NOP
00004618:	NOP
00004619:	NOP
0000461A:	NOP
0000461B:	NOP
0000461C:	NOP
0000461D:	NOP
0000461E:	NOP
0000461F:	NOP
00004620:	NOP
00004621:	NOP
00004622:	NOP
00004623:	NOP
00004624:	NOP
00004625:	NOP
00004626:	NOP
00004627:	NOP
00004628:	NOP
00004629:	NOP
0000462A:	NOP
0000462B:	NOP
0000462C:	NOP
0000462D:	NOP
0000462E:	NOP
0000462F:	NOP
00004630:	NOP
00004631:	NOP
00004632:	NOP
00004633:	NOP
00004634:	NOP
00004635:	NOP
00004636:	NOP
00004637:	NOP
00004638:	NOP
00004639:	NOP
0000463A:	NOP
0000463B:	NOP
0000463C:	NOP
0000463D:	NOP
0000463E:	NOP
0000463F:	NOP
00004640:	NOP
00004641:	NOP
00004642:	NOP
00004643:	NOP
00004644:	NOP
00004645:	NOP
00004646:	NOP
00004647:	NOP
00004648:	NOP
00004649:	NOP
0000464A:	NOP
0000464B:	NOP
0000464C:	NOP
0000464D:	NOP
0000464E:	NOP
0000464F:	NOP
00004650:	NOP
00004651:	NOP
00004652:	NOP
00004653:	NOP
00004654:	NOP
00004655:	NOP
00004656:	NOP
00004657:	NOP
00004658:	NOP
00004659:	NOP
0000465A:	NOP
0000465B:	NOP
0000465C:	NOP
0000465D:	NOP
0000465E:	NOP
0000465F:	NOP
00004660:	NOP
00004661:	NOP
00004662:	NOP
00004663:	NOP
00004664:	NOP
00004665:	NOP
00004666:	NOP
00004667:	NOP
00004668:	NOP
00004669:	NOP
0000466A:	NOP
0000466B:	NOP
0000466C:	NOP
0000466D:	NOP
0000466E:	NOP
0000466F:	NOP
00004670:	NOP
00004671:	NOP
00004672:	NOP
00004673:	NOP
00004674:	NOP
00004675:	NOP
00004676:	NOP
00004677:	NOP
00004678:	NOP
00004679:	NOP
0000467A:	NOP
0000467B:	NOP
0000467C:	NOP
0000467D:	NOP
0000467E:	NOP
0000467F:	NOP
00004680:	NOP
00004681:	NOP
00004682:	NOP
00004683:	NOP
00004684:	NOP
00004685:	NOP
00004686:	NOP
00004687:	NOP
00004688:	NOP
00004689:	NOP
0000468A:	NOP
0000468B:	NOP
0000468C:	NOP
0000468D:	NOP
0000468E:	NOP
0000468F:	NOP
00004690:	NOP
00004691:	NOP
00004692:	NOP
00004693:	NOP
00004694:	NOP
00004695:	NOP
00004696:	NOP
00004697:	NOP
00004698:	NOP
00004699:	NOP
0000469A:	NOP
0000469B:	NOP
0000469C:	NOP
0000469D:	NOP
0000469E:	NOP
0000469F:	NOP
000046A0:	NOP
000046A1:	NOP
000046A2:	NOP
000046A3:	NOP
000046A4:	NOP
000046A5:	NOP
000046A6:	NOP
000046A7:	NOP
000046A8:	NOP
000046A9:	NOP
000046AA:	NOP
000046AB:	NOP
000046AC:	NOP
000046AD:	NOP
000046AE:	NOP
000046AF:	NOP
000046B0:	NOP
000046B1:	NOP
000046B2:	NOP
000046B3:	NOP
000046B4:	NOP
000046B5:	NOP
000046B6:	NOP
000046B7:	NOP
000046B8:	NOP
000046B9:	NOP
000046BA:	NOP
000046BB:	NOP
000046BC:	NOP
000046BD:	NOP
000046BE:	NOP
000046BF:	NOP
000046C0:	NOP
000046C1:	NOP
000046C2:	NOP
000046C3:	NOP
000046C4:	NOP
000046C5:	NOP
000046C6:	NOP
000046C7:	NOP
000046C8:	NOP
000046C9:	NOP
000046CA:	NOP
000046CB:	INC HL
000046CC:	LD A,(1C06h)
000046CF:	CP 02h
000046D1:	JP NC,1736h		; ERROR: Illegal function call
000046D4:	CALL 2987h		; IDEEXP: DE= (HL), A=next character to be parsed
000046D7:	CP 28h
000046D9:	JP NZ,173Ah		; ERROR: Syntax error
000046DC:	INC HL
000046DD:	LD C,L
000046DE:	LD B,H
000046DF:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
000046E2:	CALL 2D66h		; check for ')'
000046E5:	CALL 22D8h		; Check byte overflow for value in DE and put in A
000046E8:	CP 80h
000046EA:	JP C,1736h		; ERROR: Illegal function call
000046ED:	CP E0h
000046EF:	JP NC,1736h		; ERROR: Illegal function call
000046F2:	AND 7Fh
000046F4:	PUSH AF
000046F5:	CALL 25C4h		; skip SPACEs in (BC), A=next char
000046F8:	CP F5h			; Token for '='
000046FA:	JP NZ,173Ah		; ERROR: Syntax error
000046FD:	CALL 459Dh
00004700:	CP 0Ch
00004702:	JP NZ,1736h		; ERROR: Illegal function call
00004705:	LD H,A
00004706:	POP AF
00004707:	PUSH BC
00004708:	PUSH HL
00004709:	LD L,A
0000470A:	LD H,00h
0000470C:	ADD HL,HL
0000470D:	ADD HL,HL
0000470E:	ADD HL,HL
0000470F:	ADD HL,HL
00004710:	LD BC,1000h
00004713:	ADD HL,BC
00004714:	LD C,L
00004715:	LD B,H
00004716:	POP HL
00004717:	LD A,(DE)
00004718:	OUT (C),A
0000471A:	INC DE
0000471B:	INC BC
0000471C:	DEC H
0000471D:	JR NZ,-08h
0000471F:	POP HL
00004720:	DEC HL
00004721:	RET

; 'SOUND'
00004722:	LD B,H
00004723:	LD C,L
00004724:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004727:	CALL 2D61h		; CH2CH: Check for comma ','
0000472A:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000472D:	CP 0Eh
0000472F:	JP NC,1736h		; ERROR: Illegal function call
00004732:	PUSH AF
00004733:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004736:	CALL 22D8h		; Check byte overflow for value in DE and put in A
00004739:	POP HL
0000473A:	LD L,A
0000473B:	PUSH BC
0000473C:	LD BC,4000h
0000473F:	OUT (C),H
00004741:	INC C
00004742:	OUT (C),L
00004744:	POP BC
00004745:	JP 1B39h

; 'BEEP'
00004748:	LD B,H
00004749:	LD C,L
0000474A:	CALL 496Fh
0000474D:	JR Z,+29h
0000474F:	CALL 22DFh
00004752:	CP 80h
00004754:	JP NC,1736h		; ERROR: Illegal function call
00004757:	LD D,A
00004758:	LD E,00h
0000475A:	DEC BC
0000475B:	CALL 496Fh
0000475E:	JR Z,+12h
00004760:	CP 2Ch		; ','
00004762:	JP NZ,173Ah		; ERROR: Syntax error
00004765:	INC BC
00004766:	PUSH DE
00004767:	CALL 22DFh
0000476A:	POP DE
0000476B:	CP 03h
0000476D:	JP NC,1736h		; ERROR: Illegal function call
00004770:	DEC BC
00004771:	LD E,A
00004772:	PUSH BC
00004773:	CALL 1099h	; SOUNDS
00004776:	POP HL
00004777:	RET

00004778:	PUSH BC
00004779:	CALL 06CAh	; BELL
0000477C:	LD BC,4000h
0000477F:	LD A,07h
00004781:	OUT (C),A
00004783:	INC C
00004784:	IN A,(C)
00004786:	OR 3Fh
00004788:	OUT (C),A
0000478A:	POP HL
0000478B:	RET

; 'PLAY'
0000478C:	LD C,L
0000478D:	LD B,H
0000478E:	CALL 21F9h
00004791:	LD (IY+00h),00h	; data type, aka PRCSON
00004795:	CALL 22F2h		; --
00004798:	LD A,(IY+00h)	; data type, aka PRCSON
0000479B:	CP 03h			; string type ?
0000479D:	JR NZ,+20h
0000479F:	CALL 6BF6h		; Load a string parameter
000047A2:	CALL 170Eh
000047A5:	PUSH BC
000047A6:	LD B,A
000047A7:	OR A
000047A8:	JR Z,+12h
000047AA:	LD HL,7A4Fh
000047AD:	PUSH HL
000047AE:	LD C,B
000047AF:	LD A,(DE)
000047B0:	LD (HL),A
000047B1:	INC DE
000047B2:	INC HL
000047B3:	DJNZ -06h
000047B5:	LD (HL),3Ah
000047B7:	LD B,C
000047B8:	POP DE
000047B9:	CALL 0ECDh		; MUSIC
000047BC:	POP HL
000047BD:	DEC HL
000047BE:	RET

000047BF:	EX DE,HL
000047C0:	LD HL,7A4Fh
000047C3:	PUSH HL
000047C4:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
000047C8:	LD (HL),8Dh
000047CA:	INC HL
000047CB:	LD (HL),6Ah
000047CD:	INC HL
000047CE:	LD (HL),60h
000047D0:	INC HL
000047D1:	LD (HL),00h
000047D3:	POP HL
000047D4:	PUSH BC
000047D5:	CALL 70BDh		; DIV:
000047D8:	CALL 2D97h		; HLFLT_2
000047DB:	CALL 22D8h		; Check byte overflow for value in DE and put in A
000047DE:	OR A
000047DF:	JP Z,1736h		; ERROR: Illegal function call
000047E2:	CALL 1095h	; XTEMPO
000047E5:	POP BC
000047E6:	JP 1B39h

; 'COLOR'
000047E9:	LD C,L
000047EA:	LD B,H
000047EB:	CALL 22DFh
000047EE:	CP 09h
000047F0:	JP NC,1736h		; ERROR: Illegal function call
000047F3:	LD (1180h),A		; COLORF
000047F6:	DEC BC
000047F7:	LD L,C
000047F8:	LD H,B
000047F9:	RET

; 'PRESET'
000047FA:	CALL 4924h
000047FD:	XOR A
000047FE:	LD (1181h),A
00004801:	JR +03h

; 'PSET'
00004803:	CALL 4924h
00004806:	PUSH BC
00004807:	CALL 480Ch	; Get argument pair
0000480A:	POP HL
0000480B:	RET

; Get argument pair
0000480C:	CALL 4823h
0000480F:	RET C
00004810:	PUSH HL
00004811:	LD HL,481Bh
00004814:	ADD HL,DE
00004815:	LD E,(HL)
00004816:	INC HL
00004817:	LD D,(HL)
00004818:	EX DE,HL
00004819:	EX HL,(SP)
0000481A:	RET

0000481B:	LD C,(HL)
0000481C:	LD C,B
0000481D:	SUB E
0000481E:	LD C,B
0000481F:	JP C,0548h
00004822:	LD C,C
00004823:	PUSH HL
00004824:	LD BC,4764h
00004827:	ADD HL,BC
00004828:	JR C,+07h
0000482A:	EX DE,HL
0000482B:	PUSH HL
0000482C:	LD BC,472Ch
0000482F:	ADD HL,BC
00004830:	POP DE
00004831:	POP HL
00004832:	RET C
00004833:	JP 4836h
00004836:	LD BC,(0AD6h)
0000483A:	LD A,L
0000483B:	RES 0,L
0000483D:	ADD HL,HL
0000483E:	ADD HL,HL
0000483F:	ADD HL,HL
00004840:	ADD HL,HL
00004841:	AND 01h
00004843:	SRL E
00004845:	CCF
00004846:	RLA
00004847:	ADD HL,DE
00004848:	ADD HL,BC
00004849:	LD DE,0000h
0000484C:	OR A
0000484D:	RET
0000484E:	LD C,L
0000484F:	LD B,H
00004850:	SET 3,B
00004852:	LD E,04h
00004854:	OUT (C),E
00004856:	LD E,01h
00004858:	OR A
00004859:	JR Z,+05h
0000485B:	RLC E
0000485D:	DEC A
0000485E:	JR NZ,-05h
00004860:	LD A,(1181h)
00004863:	OR A
00004864:	JP Z,48C0h
00004867:	DEC A
00004868:	AND 07h
0000486A:	RLCA
0000486B:	RLCA
0000486C:	RLCA
0000486D:	RLCA
0000486E:	OR E
0000486F:	LD E,A
00004870:	LD D,0Fh
00004872:	JP 491Bh
00004875:	LD BC,(0AD6h)
00004879:	LD A,L
0000487A:	LD L,FFh
0000487C:	INC L
0000487D:	SUB 03h
0000487F:	JR NC,-05h
00004881:	ADD 03h
00004883:	SRL E
00004885:	CCF
00004886:	RLA
00004887:	ADD HL,HL
00004888:	ADD HL,HL
00004889:	ADD HL,HL
0000488A:	ADD HL,HL
0000488B:	ADD HL,HL
0000488C:	ADD HL,DE
0000488D:	ADD HL,BC
0000488E:	LD DE,0002h
00004891:	OR A
00004892:	RET
00004893:	LD C,L
00004894:	LD B,H
00004895:	SET 3,B
00004897:	LD D,0Ch
00004899:	OUT (C),D
0000489B:	LD E,01h
0000489D:	OR A
0000489E:	JR Z,+05h
000048A0:	RLC E
000048A2:	DEC A
000048A3:	JR NZ,-05h
000048A5:	LD A,(1181h)
000048A8:	OR A
000048A9:	JP Z,48C0h
000048AC:	DEC A
000048AD:	CP 04h
000048AF:	JR C,+04h
000048B1:	SET 1,D
000048B3:	OUT (C),D
000048B5:	AND 03h
000048B7:	RRCA
000048B8:	RRCA
000048B9:	OR E
000048BA:	LD E,A
000048BB:	LD D,3Fh
000048BD:	JP 491Bh

000048C0:	LD C,L
000048C1:	LD B,H
000048C2:	IN L,(C)
000048C4:	LD A,E
000048C5:	CPL
000048C6:	AND L
000048C7:	OUT (C),A
000048C9:	RET
000048CA:	ADD HL,HL
000048CB:	ADD HL,HL
000048CC:	ADD HL,HL
000048CD:	ADD HL,HL
000048CE:	ADD HL,HL
000048CF:	LD A,E
000048D0:	SRL E
000048D2:	SRL E
000048D4:	ADD HL,DE
000048D5:	LD DE,0004h
000048D8:	OR A
000048D9:	RET

000048DA:	AND 03h
000048DC:	INC A
000048DD:	LD B,A
000048DE:	LD A,(1181h)
000048E1:	AND 03h
000048E3:	LD E,A
000048E4:	LD D,FCh
000048E6:	RRC E
000048E8:	RRC E
000048EA:	RRC D
000048EC:	RRC D
000048EE:	DJNZ -0Ah
000048F0:	JP 491Bh
000048F3:	ADD HL,HL
000048F4:	ADD HL,HL
000048F5:	ADD HL,HL
000048F6:	ADD HL,HL
000048F7:	ADD HL,HL
000048F8:	LD A,E
000048F9:	SRL E
000048FB:	SRL E
000048FD:	SRL E
000048FF:	ADD HL,DE
00004900:	LD DE,0006h
00004903:	OR A
00004904:	RET

00004905:	AND 07h
00004907:	LD E,80h
00004909:	OR A
0000490A:	JR Z,+05h
0000490C:	RRC E
0000490E:	DEC A
0000490F:	JR NZ,-05h
00004911:	LD A,(1181h)
00004914:	AND 01h
00004916:	JP Z,48C0h
00004919:	LD D,FFh
0000491B:	LD C,L
0000491C:	LD B,H
0000491D:	IN A,(C)
0000491F:	AND D
00004920:	OR E
00004921:	OUT (C),A
00004923:	RET

00004924:	LD C,L
00004925:	LD B,H
00004926:	CALL 494Dh
00004929:	CP 29h
0000492B:	JR Z,+1Bh
0000492D:	CALL 2D61h		; CH2CH: Check for comma ','
00004930:	PUSH DE
00004931:	PUSH HL
00004932:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004935:	CP 29h
00004937:	JP NZ,173Ah		; ERROR: Syntax error
0000493A:	CALL 22D8h		; Check byte overflow for value in DE and put in A
0000493D:	CP 09h
0000493F:	JP NC,1736h		; ERROR: Illegal function call
00004942:	POP HL
00004943:	POP DE
00004944:	LD (1181h),A
00004947:	RET

00004948:	LD A,(1180h)		; COLORF
0000494B:	JR -09h
0000494D:	CALL 25C4h		; skip SPACEs in (BC), A=next char
00004950:	CP 28h
00004952:	JP NZ,173Ah		; ERROR: Syntax error
00004955:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004958:	PUSH HL
00004959:	CALL 2D61h		; CH2CH: Check for comma ','
0000495C:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
0000495F:	POP DE
00004960:	RET

; Get argument pair "(DE,HL)"
00004961:	CALL 494Dh
00004964:	CALL 2D66h		; check for ')'
00004967:	LD A,(BC)
00004968:	CP 20h
0000496A:	RET NZ
0000496B:	INC BC
0000496C:	JR -07h
0000496E:	INC BC
0000496F:	LD A,(BC)
00004970:	CP 20h
00004972:	JR Z,-06h
00004974:	OR A
00004975:	RET Z
00004976:	CP 3Ah
00004978:	RET

; 'draw LINE'
00004979:	CALL 4948h
0000497C:	DEC BC
0000497D:	CALL 4967h
00004980:	CP F9h			; Token code for '-'
00004982:	JR NZ,+0Eh
00004984:	LD HL,(4A45h)
00004987:	LD (4A40h),HL
0000498A:	LD HL,(4A62h)
0000498D:	LD (4A5Dh),HL
00004990:	JR +0Eh
00004992:	CALL 4961h		; Get argument pair "(DE,HL)"
00004995:	LD (4A40h),DE
00004999:	LD (4A5Dh),HL
0000499C:	CP F9h			; Token code for '-'
0000499E:	JR NZ,+10h
000049A0:	INC BC
000049A1:	CALL 4961h		; Get argument pair "(DE,HL)"
000049A4:	LD (4A45h),DE
000049A8:	LD (4A62h),HL
000049AB:	CP F9h			; Token code for '-'
000049AD:	JP Z,20FAh			; ERROR: Reserved feature
000049B0:	CP 2Ch		; ','
000049B2:	JP NZ,173Ah		; ERROR: Syntax error
000049B5:	INC BC
000049B6:	CALL 4967h
000049B9:	CP C7h			; Token code for 'PSET'
000049BB:	JR Z,+16h
000049BD:	CP C8h			; Token code for 'PRESET'
000049BF:	LD A,00h
000049C1:	JR Z,+37h
000049C3:	CALL 459Dh
000049C6:	OR A
000049C7:	JR Z,+01h
000049C9:	LD A,(DE)
000049CA:	DEC BC
000049CB:	LD (4BDAh),A
000049CE:	LD HL,4BC7h
000049D1:	JR +04h

; Token code for 'PSET' found
000049D3:	INC BC
000049D4:	LD HL,480Ch		; Get argument pair
000049D7:	LD (4AB9h),HL
000049DA:	LD (4B4Fh),HL
000049DD:	LD DE,4A7Dh
000049E0:	CALL 496Fh
000049E3:	JR Z,+3Ah
000049E5:	CALL 2D61h		; CH2CH: Check for comma ','
000049E8:	INC BC
000049E9:	CALL 4967h
000049EC:	CP 42h
000049EE:	JR Z,+22h
000049F0:	CALL 22DFh
000049F3:	CP 09h
000049F5:	JP NC,1736h		; ERROR: Illegal function call
000049F8:	DEC BC
000049F9:	DEC BC
000049FA:	LD (1181h),A
000049FD:	INC BC
000049FE:	LD DE,4A7Dh
00004A01:	CALL 496Fh
00004A04:	JR Z,+19h
00004A06:	CALL 2D61h		; CH2CH: Check for comma ','
00004A09:	INC BC
00004A0A:	CALL 4967h
00004A0D:	CP 42h
00004A0F:	JP NZ,173Ah		; ERROR: Syntax error
00004A12:	LD DE,4B01h
00004A15:	INC BC
00004A16:	LD A,(BC)
00004A17:	CP 46h
00004A19:	JR NZ,+04h
00004A1B:	INC BC
00004A1C:	LD DE,4B5Bh
00004A1F:	LD (4A7Bh),DE
00004A23:	PUSH BC
00004A24:	CALL 4A2Bh
00004A27:	POP BC
00004A28:	LD L,C
00004A29:	LD H,B
00004A2A:	RET
00004A2B:	LD HL,0000h
00004A2E:	LD (4ACBh),HL
00004A31:	LD (4ABFh),HL
00004A34:	LD BC,8000h
00004A37:	LD (4AAAh),BC
00004A3B:	LD (4AA7h),BC
00004A3F:	LD HL,0000h
00004A42:	ADD HL,BC
00004A43:	EX DE,HL
00004A44:	LD HL,00FFh
00004A47:	ADD HL,BC
00004A48:	OR A
00004A49:	SBC HL,DE
00004A4B:	LD DE,0001h
00004A4E:	JR NC,+06h
00004A50:	EX DE,HL
00004A51:	SBC HL,DE
00004A53:	LD DE,FFFFh
00004A56:	PUSH HL
00004A57:	LD (4AD2h),DE
00004A5B:	LD A,E
00004A5C:	LD HL,0000h
00004A5F:	ADD HL,BC
00004A60:	EX DE,HL
00004A61:	LD HL,00C0h
00004A64:	ADD HL,BC
00004A65:	OR A
00004A66:	SBC HL,DE
00004A68:	LD DE,0001h
00004A6B:	JR NC,+06h
00004A6D:	EX DE,HL
00004A6E:	SBC HL,DE
00004A70:	LD DE,FFFFh
00004A73:	LD (4AC4h),DE
00004A77:	LD B,A
00004A78:	LD C,E
00004A79:	POP DE
00004A7A:	JP 4A7Dh
00004A7D:	PUSH HL
00004A7E:	SBC HL,DE
00004A80:	POP HL
00004A81:	PUSH DE
00004A82:	JR Z,+20h
00004A84:	JR NC,+58h
00004A86:	CALL 4B90h
00004A89:	DEC C
00004A8A:	LD DE,0000h
00004A8D:	JR Z,+0Eh
00004A8F:	XOR A
00004A90:	EX DE,HL
00004A91:	SBC HL,DE
00004A93:	LD DE,7F7Fh
00004A96:	LD (4AAAh),DE
00004A9A:	LD DE,FFFFh
00004A9D:	LD (4AC4h),DE
00004AA1:	LD (4ABFh),HL
00004AA4:	POP BC
00004AA5:	EXX
00004AA6:	LD DE,8000h
00004AA9:	LD HL,8000h
00004AAC:	EXX
00004AAD:	LD DE,(4A40h)
00004AB1:	LD HL,(4A5Dh)
00004AB4:	INC BC
00004AB5:	PUSH BC
00004AB6:	PUSH DE
00004AB7:	PUSH HL
00004AB8:	CALL 480Ch		; Get argument pair
00004ABB:	POP HL
00004ABC:	POP DE
00004ABD:	EXX
00004ABE:	LD BC,0000h
00004AC1:	ADD HL,BC
00004AC2:	EXX
00004AC3:	LD BC,0001h
00004AC6:	ADC HL,BC
00004AC8:	EXX
00004AC9:	EX DE,HL
00004ACA:	LD BC,0000h
00004ACD:	ADD HL,BC
00004ACE:	EX DE,HL
00004ACF:	EXX
00004AD0:	EX DE,HL
00004AD1:	LD BC,0001h
00004AD4:	ADC HL,BC
00004AD6:	EX DE,HL
00004AD7:	POP BC
00004AD8:	DEC BC
00004AD9:	LD A,B
00004ADA:	OR C
00004ADB:	JR NZ,-28h
00004ADD:	RET
00004ADE:	LD E,L
00004ADF:	LD D,H
00004AE0:	EX HL,(SP)
00004AE1:	CALL 4B90h
00004AE4:	DEC B
00004AE5:	LD DE,0000h
00004AE8:	JR Z,+0Eh
00004AEA:	XOR A
00004AEB:	EX DE,HL
00004AEC:	SBC HL,DE
00004AEE:	LD DE,7F7Fh
00004AF1:	LD (4AA7h),DE
00004AF5:	LD DE,FFFFh
00004AF8:	LD (4AD2h),DE
00004AFC:	LD (4ACBh),HL
00004AFF:	JR -5Dh
00004B01:	PUSH DE
00004B02:	PUSH BC
00004B03:	LD A,23h
00004B05:	DEC C
00004B06:	JR Z,+02h
00004B08:	LD A,2Bh
00004B0A:	LD (4B55h),A
00004B0D:	PUSH HL
00004B0E:	POP BC
00004B0F:	LD DE,(4A40h)
00004B13:	LD HL,(4A5Dh)
00004B16:	PUSH BC
00004B17:	PUSH HL
00004B18:	CALL 4B45h
00004B1B:	POP HL
00004B1C:	POP BC
00004B1D:	LD DE,(4A45h)
00004B21:	CALL 4B45h
00004B24:	POP BC
00004B25:	LD A,13h
00004B27:	DEC B
00004B28:	JR Z,+02h
00004B2A:	LD A,1Bh
00004B2C:	LD (4B55h),A
00004B2F:	POP BC
00004B30:	INC BC
00004B31:	LD DE,(4A40h)
00004B35:	LD HL,(4A5Dh)
00004B38:	PUSH BC
00004B39:	PUSH DE
00004B3A:	CALL 4B56h
00004B3D:	POP DE
00004B3E:	POP BC
00004B3F:	LD HL,(4A62h)
00004B42:	JP 4B56h
00004B45:	LD A,B
00004B46:	OR C
00004B47:	RET Z
00004B48:	JP 4B54h

00004B4B:	PUSH HL
00004B4C:	PUSH DE
00004B4D:	PUSH BC
00004B4E:	CALL 480Ch		; Get argument pair
00004B51:	POP BC
00004B52:	POP DE
00004B53:	POP HL
00004B54:	DEC BC
00004B55:	NOP
00004B56:	LD A,B
00004B57:	OR C
00004B58:	JR NZ,-0Fh
00004B5A:	RET

00004B5B:	LD A,13h
00004B5D:	DEC B
00004B5E:	JR Z,+02h
00004B60:	LD A,1Bh
00004B62:	LD (4B55h),A
00004B65:	LD A,23h
00004B67:	DEC C
00004B68:	JR Z,+02h
00004B6A:	LD A,2Bh
00004B6C:	LD (4B88h),A
00004B6F:	PUSH HL
00004B70:	POP BC
00004B71:	INC BC
00004B72:	EX DE,HL
00004B73:	INC HL
00004B74:	LD (4B81h),HL
00004B77:	LD DE,(4A40h)
00004B7B:	LD HL,(4A5Dh)
00004B7E:	PUSH DE
00004B7F:	PUSH BC
00004B80:	LD BC,0001h
00004B83:	CALL 4B56h
00004B86:	POP BC
00004B87:	POP DE
00004B88:	INC HL
00004B89:	DEC BC
00004B8A:	LD A,B
00004B8B:	OR C
00004B8C:	JP NZ,4B7Eh
00004B8F:	RET

00004B90:	LD A,H
00004B91:	OR L
00004B92:	RET Z
00004B93:	PUSH BC
00004B94:	LD A,11h
00004B96:	EXX
00004B97:	LD HL,0000h
00004B9A:	LD DE,0000h
00004B9D:	EXX
00004B9E:	PUSH HL
00004B9F:	OR A
00004BA0:	SBC HL,DE
00004BA2:	EXX
00004BA3:	PUSH HL
00004BA4:	SBC HL,DE
00004BA6:	JR C,+06h
00004BA8:	EX HL,(SP)
00004BA9:	POP HL
00004BAA:	EXX
00004BAB:	EX HL,(SP)
00004BAC:	EXX
00004BAD:	PUSH HL
00004BAE:	POP HL
00004BAF:	EXX
00004BB0:	POP HL
00004BB1:	CCF
00004BB2:	RL C
00004BB4:	RL B
00004BB6:	SLA L
00004BB8:	RL H
00004BBA:	EXX
00004BBB:	RL L
00004BBD:	RL H
00004BBF:	EXX
00004BC0:	DEC A
00004BC1:	JR NZ,-25h
00004BC3:	LD L,C
00004BC4:	LD H,B
00004BC5:	POP BC
00004BC6:	RET

00004BC7:	XOR A
00004BC8:	CP D
00004BC9:	RET NZ
00004BCA:	CP H
00004BCB:	RET NZ
00004BCC:	LD D,L
00004BCD:	LD A,E
00004BCE:	CP 20h
00004BD0:	RET NC
00004BD1:	LD A,D
00004BD2:	CP 10h
00004BD4:	RET NC
00004BD5:	EX DE,HL
00004BD6:	CALL 093Bh
00004BD9:	LD A,41h
00004BDB:	JP 0A3Fh

; 'CIRCLE'
00004BDE:	LD C,L
00004BDF:	LD B,H
00004BE0:	CALL 4961h		; Get argument pair "(DE,HL)"
00004BE3:	CALL 2D61h		; CH2CH: Check for comma ','
00004BE6:	INC BC
00004BE7:	LD (4D9Fh),DE
00004BEB:	LD (4DA6h),HL
00004BEE:	LD A,(BC)
00004BEF:	CP 5Bh			; '['
00004BF1:	JR NZ,+13h
00004BF3:	INC BC
00004BF4:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004BF7:	CALL 2D61h		; CH2CH: Check for comma ','
00004BFA:	PUSH HL
00004BFB:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004BFE:	CP 5Dh			; ']'
00004C00:	JP NZ,173Ah		; ERROR: Syntax error
00004C03:	POP DE
00004C04:	JR +06h

00004C06:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004C09:	DEC BC
00004C0A:	LD D,H
00004C0B:	LD E,L
00004C0C:	LD (4DCCh),DE
00004C10:	LD (4DD2h),HL
00004C13:	CALL 496Fh
00004C16:	LD HL,000Ah
00004C19:	JR Z,+45h
00004C1B:	CALL 2D61h		; CH2CH: Check for comma ','
00004C1E:	INC BC
00004C1F:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004C22:	LD (4CBAh),HL
00004C25:	DEC BC
00004C26:	CALL 496Fh
00004C29:	JR Z,+38h
00004C2B:	INC BC
00004C2C:	LD A,(BC)
00004C2D:	CP 2Ch		; ','
00004C2F:	LD A,(1180h)		; COLORF
00004C32:	JR Z,+09h
00004C34:	CALL 22DFh
00004C37:	CP 09h
00004C39:	JP NC,1736h		; ERROR: Illegal function call
00004C3C:	DEC BC
00004C3D:	LD (1181h),A
00004C40:	LD A,(BC)
00004C41:	CALL 496Fh
00004C44:	JR Z,+23h
00004C46:	CALL 2D61h		; CH2CH: Check for comma ','
00004C49:	INC BC
00004C4A:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004C4D:	LD (4CA6h),HL
00004C50:	DEC BC
00004C51:	CALL 496Fh
00004C54:	JR Z,+19h
00004C56:	CALL 2D61h		; CH2CH: Check for comma ','
00004C59:	INC BC
00004C5A:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00004C5D:	DEC BC
00004C5E:	JR +12h
00004C60:	LD (4CBAh),HL
00004C63:	LD A,(1180h)		; COLORF
00004C66:	LD (1181h),A
00004C69:	LD HL,0000h
00004C6C:	LD (4CA6h),HL
00004C6F:	LD HL,0168h
00004C72:	LD (4CC3h),HL
00004C75:	PUSH BC
00004C76:	LD HL,4A7Dh
00004C79:	LD (4A7Bh),HL
00004C7C:	LD HL,480Ch		; Get argument pair
00004C7F:	LD (4AB9h),HL
00004C82:	LD HL,(4CBAh)
00004C85:	LD A,H
00004C86:	OR L
00004C87:	JR Z,+05h
00004C89:	CALL 4CA5h
00004C8C:	POP HL
00004C8D:	RET

00004C8E:	LD HL,(4D9Fh)
00004C91:	LD (4A40h),HL
00004C94:	LD HL,(4DA6h)
00004C97:	LD (4A5Dh),HL
00004C9A:	LD HL,(4CA6h)
00004C9D:	CALL 4CD5h
00004CA0:	CALL 4A2Bh
00004CA3:	POP HL
00004CA4:	RET

00004CA5:	LD HL,0000h
00004CA8:	PUSH HL
00004CA9:	CALL 4CD5h
00004CAC:	LD HL,(4A45h)
00004CAF:	LD (4A40h),HL
00004CB2:	LD HL,(4A62h)
00004CB5:	LD (4A5Dh),HL
00004CB8:	POP HL
00004CB9:	LD BC,0001h
00004CBC:	ADD HL,BC
00004CBD:	PUSH HL
00004CBE:	LD BC,8000h
00004CC1:	ADD HL,BC
00004CC2:	LD DE,0168h
00004CC5:	EX DE,HL
00004CC6:	ADD HL,BC
00004CC7:	OR A
00004CC8:	SBC HL,DE
00004CCA:	POP HL
00004CCB:	RET C
00004CCC:	PUSH HL
00004CCD:	CALL 4CD5h
00004CD0:	CALL 4A2Bh
00004CD3:	JR -29h

00004CD5:	BIT 7,H
00004CD7:	JR Z,+08h
00004CD9:	LD DE,0168h
00004CDC:	ADD HL,DE
00004CDD:	JR NC,-03h
00004CDF:	JR +0Ah

00004CE1:	LD DE,FE98h
00004CE4:	ADD HL,DE
00004CE5:	JR C,-03h
00004CE7:	LD DE,0168h
00004CEA:	ADD HL,DE
00004CEB:	LD A,H
00004CEC:	OR L
00004CED:	JP Z,4D7Ah
00004CF0:	LD DE,0001h
00004CF3:	LD BC,005Ah
00004CF6:	SBC HL,BC
00004CF8:	JP Z,4D7Fh
00004CFB:	JR C,+13h
00004CFD:	SBC HL,BC
00004CFF:	JP Z,4D84h
00004D02:	JR C,+14h
00004D04:	SBC HL,BC
00004D06:	JP Z,4D89h
00004D09:	JR C,+13h
00004D0B:	LD BC,0000h
00004D0E:	JR +14h
00004D10:	EX DE,HL
00004D11:	SBC HL,DE
00004D13:	LD BC,00FFh
00004D16:	JR +0Ch
00004D18:	ADD HL,BC
00004D19:	LD BC,FFFFh
00004D1C:	JR +06h
00004D1E:	EX DE,HL
00004D1F:	SBC HL,DE
00004D21:	LD BC,FF00h		; -256
00004D24:	ADD HL,HL
00004D25:	EX DE,HL
00004D26:	LD A,B
00004D27:	LD (4D5Dh),A
00004D2A:	LD A,C
00004D2B:	LD (4D6Bh),A
00004D2E:	LD HL,4E0Bh
00004D31:	ADD HL,DE
00004D32:	LD A,(HL)
00004D33:	INC HL
00004D34:	LD H,(HL)
00004D35:	LD L,A
00004D36:	INC B
00004D37:	JR NZ,+08h
00004D39:	PUSH DE
00004D3A:	LD DE,0000h
00004D3D:	EX DE,HL
00004D3E:	SBC HL,DE
00004D40:	POP DE
00004D41:	LD (4D61h),HL
00004D44:	LD HL,4EBFh
00004D47:	OR A
00004D48:	SBC HL,DE
00004D4A:	LD A,(HL)
00004D4B:	INC HL
00004D4C:	LD H,(HL)
00004D4D:	LD L,A
00004D4E:	INC C
00004D4F:	JR NZ,+08h
00004D51:	PUSH DE
00004D52:	LD DE,0000h
00004D55:	EX DE,HL
00004D56:	SBC HL,DE
00004D58:	POP DE
00004D59:	LD (4D6Fh),HL
00004D5C:	LD L,00h
00004D5E:	LD H,L
00004D5F:	EXX
00004D60:	LD HL,0000h
00004D63:	EXX
00004D64:	CALL 4DCAh
00004D67:	LD (4D9Bh),HL
00004D6A:	LD L,00h
00004D6C:	LD H,L
00004D6D:	EXX
00004D6E:	LD HL,0000h
00004D71:	EXX
00004D72:	CALL 4DD0h
00004D75:	LD (4DA9h),HL
00004D78:	JR +20h
00004D7A:	LD BC,0100h
00004D7D:	JR +0Dh
00004D7F:	LD BC,00FFh
00004D82:	JR +08h
00004D84:	LD BC,FF00h		; -256
00004D87:	JR +03h
00004D89:	LD BC,0001h
00004D8C:	LD A,B
00004D8D:	CALL 4DBBh
00004D90:	LD (4D9Bh),HL
00004D93:	LD A,C
00004D94:	CALL 4DB0h
00004D97:	LD (4DA9h),HL
00004D9A:	LD HL,0000h
00004D9D:	NOP
00004D9E:	LD DE,0000h
00004DA1:	ADD HL,DE
00004DA2:	LD (4A45h),HL
00004DA5:	LD HL,0000h
00004DA8:	LD DE,0000h
00004DAB:	ADD HL,DE
00004DAC:	LD (4A62h),HL
00004DAF:	RET

00004DB0:	LD HL,0000h
00004DB3:	OR A
00004DB4:	RET Z
00004DB5:	EX DE,HL
00004DB6:	LD HL,(4DD2h)
00004DB9:	JR +09h
00004DBB:	LD HL,0000h
00004DBE:	OR A
00004DBF:	RET Z
00004DC0:	EX DE,HL
00004DC1:	LD HL,(4DCCh)
00004DC4:	INC A
00004DC5:	RET NZ
00004DC6:	EX DE,HL
00004DC7:	SBC HL,DE
00004DC9:	RET

00004DCA:	EXX
00004DCB:	LD BC,0001h
00004DCE:	JR +04h
00004DD0:	EXX
00004DD1:	LD BC,0001h
00004DD4:	LD DE,0000h
00004DD7:	EXX
00004DD8:	LD B,10h
00004DDA:	LD DE,0000h
00004DDD:	EXX
00004DDE:	EX DE,HL
00004DDF:	ADD HL,HL
00004DE0:	EX DE,HL
00004DE1:	EXX
00004DE2:	EX DE,HL
00004DE3:	ADC HL,HL
00004DE5:	EX DE,HL
00004DE6:	EXX
00004DE7:	SLA C
00004DE9:	RL B
00004DEB:	JR NC,+09h
00004DED:	EX DE,HL
00004DEE:	ADD HL,DE
00004DEF:	EX DE,HL
00004DF0:	EXX
00004DF1:	EX DE,HL
00004DF2:	ADC HL,DE
00004DF4:	EX DE,HL
00004DF5:	EXX
00004DF6:	EXX
00004DF7:	DJNZ -1Ch
00004DF9:	LD A,80h
00004DFB:	BIT 7,D
00004DFD:	EXX
00004DFE:	JR Z,+01h
00004E00:	CPL
00004E01:	LD H,A
00004E02:	LD L,A
00004E03:	ADD HL,DE
00004E04:	EXX
00004E05:	LD HL,0000h
00004E08:	ADC HL,DE
00004E0A:	RET

00004E0B:	NOP
00004E0C:	NOP
00004E0D:	LD A,B
00004E0E:	INC B
00004E0F:	RET P
00004E10:	EX AF,AF'
00004E11:	LD H,(HL)
00004E12:	DEC C
00004E13:	CALL C,5011h
00004E16:	LD D,C3h
00004E18:	LD A,(DE)
00004E19:	INC SP
00004E1A:	RRA
00004E1B:	AND C
00004E1C:	INC HL
00004E1D:	INC C
00004E1E:	JR Z,+75h
00004E20:	INC L
00004E21:	EXX
00004E22:	JR NC,+3Ah
00004E24:	DEC (HL)
00004E25:	SUB A
00004E26:	ADD HL,SP
00004E27:	RST 28h
00004E28:	DEC A
00004E29:	LD B,D
00004E2A:	LD B,D
00004E2B:	SUB C
00004E2C:	LD B,(HL)
00004E2D:	EXX
00004E2E:	LD C,D
00004E2F:	INC E
00004E30:	LD C,A
00004E31:	LD E,C
00004E32:	LD D,E
00004E33:	ADC A
00004E34:	LD D,A
00004E35:	CP (HL)
00004E36:	LD E,E
00004E37:	RST 20h
00004E38:	LD E,A
00004E39:	RLCA
00004E3A:	LD H,H
00004E3B:	JR NZ,+68h
00004E3D:	CPL
00004E3E:	LD L,H
00004E3F:	ADD HL,SP
00004E40:	LD (HL),B
00004E41:	ADD HL,SP
00004E42:	LD (HL),H
00004E43:	JR NC,+78h
00004E45:	DEC E
00004E46:	LD A,H
00004E47:	NOP
00004E48:	ADD B
00004E49:	JP C,A983h
00004E4C:	ADD A
00004E4D:	LD L,(HL)
00004E4E:	ADC E
00004E4F:	JR Z,-71h
00004E51:	SUB 92h
00004E53:	LD A,C
00004E54:	SUB (HL)
00004E55:	LD DE,9C9Ah
00004E58:	SBC L
00004E59:	DEC DE
00004E5A:	AND C
00004E5B:	ADC (HL)
00004E5C:	AND H
00004E5D:	CALL P,4CA7h
00004E60:	XOR E
00004E61:	SBC B
00004E62:	XOR (HL)
00004E63:	RET P
00004E64:	OR C
00004E65:	ADC E
00004E66:	OR L
00004E67:	LD B,B
00004E68:	CP B
00004E69:	LD D,B
00004E6A:	CP E
00004E6B:	CCF
00004E6C:	CP (HL)
00004E6D:	DEC (HL)
00004E6E:	POP BC
00004E6F:	INC E
00004E70:	CALL NZ,C6F3h
00004E73:	CP E
00004E74:	RET

00004E75:	LD (HL),H
00004E76:	CALL Z,CF1Ch
00004E79:	OR H
00004E7A:	POP DE
00004E7B:	INC A
00004E7C:	CALL NC,D6B3h
00004E7F:	LD A,(DE)
00004E80:	EXX
00004E81:	LD (HL),B
00004E82:	INA (B4h)
00004E84:	LD B,B
00004E86:	RST 18h
00004E87:	RET PO
00004E88:	POP HL
00004E89:	SUB A
00004E8A:	CALL PO,E61Bh
00004E8D:	INC B
00004E8E:	RET PE
00004E8F:	SBC E9h
00004E91:	AND A
00004E92:	EX DE,HL
00004E93:	LD E,H
00004E94:	DB EDh,FFh
00004E96:	XOR 90h
00004E98:	RET P
00004E99:	LD C,F2h
00004E9B:	LD A,C
00004E9C:	DI
00004E9D:	POP DE
00004E9E:	CALL P,F616h
00004EA1:	LD B,A
00004EA2:	RST 30h
00004EA3:	LD H,(HL)
00004EA4:	RET M
00004EA5:	LD (HL),C
00004EA6:	LD SP,HL
00004EA7:	LD L,B
00004EA8:	JP M,FB4Ch
00004EAB:	DEC E
00004EAC:	CALL M,FCD9h
00004EAF:	ADD E
00004EB0:	JR -02h
00004EB3:	SBC C
00004EB4:	CP 07h
00004EB6:	RST 38h
00004EB7:	LD H,C
00004EB8:	RST 38h
00004EB9:	AND A
00004EBA:	RST 38h
00004EBB:	RET C
00004EBC:	RST 38h
00004EBD:	OR FFh
00004EBF:	NOP
00004EC0:	NOP

; 'PAINT'
00004EC1:	LD C,L
00004EC2:	LD B,H
00004EC3:	CALL 4961h		; Get argument pair "(DE,HL)"
00004EC6:	PUSH HL
00004EC7:	PUSH DE
00004EC8:	LD HL,501Fh
00004ECB:	LD D,09h
00004ECD:	LD A,(1180h)		; COLORF
00004ED0:	LD (HL),A
00004ED1:	CALL 4F03h
00004ED4:	LD HL,501Fh
00004ED7:	LD E,08h
00004ED9:	LD A,(HL)
00004EDA:	INC HL
00004EDB:	LD (HL),A
00004EDC:	DEC E
00004EDD:	JR NZ,-05h
00004EDF:	LD HL,5020h
00004EE2:	JR +03h
00004EE4:	CALL 4F03h
00004EE7:	DEC D
00004EE8:	JR NZ,-06h
00004EEA:	LD HL,480Ch		; Get argument pair
00004EED:	LD (4B4Fh),HL
00004EF0:	LD A,13h
00004EF2:	LD (4B55h),A
00004EF5:	LD A,(501Fh)
00004EF8:	LD (1181h),A
00004EFB:	POP DE
00004EFC:	POP HL
00004EFD:	PUSH BC
00004EFE:	CALL 4F1Fh
00004F01:	POP HL
00004F02:	RET

00004F03:	CALL 496Fh
00004F06:	JR Z,+14h
00004F08:	CALL 2D61h		; CH2CH: Check for comma ','
00004F0B:	INC BC
00004F0C:	PUSH DE
00004F0D:	PUSH HL
00004F0E:	CALL 22DFh
00004F11:	POP HL
00004F12:	POP DE
00004F13:	CP 09h
00004F15:	JP NC,1736h		; ERROR: Illegal function call
00004F18:	LD (HL),A
00004F19:	INC HL
00004F1A:	DEC BC
00004F1B:	RET
00004F1C:	LD D,01h
00004F1E:	RET
00004F1F:	LD BC,8000h
00004F22:	PUSH BC
00004F23:	PUSH HL
00004F24:	PUSH DE
00004F25:	POP DE
00004F26:	POP HL
00004F27:	XOR A
00004F28:	CP E
00004F29:	JR NZ,+06h
00004F2B:	LD A,80h
00004F2D:	CP D
00004F2E:	JR NZ,+01h
00004F30:	LD PC,HL
00004F31:	CALL 4F87h
00004F34:	JP Z,4F25h
00004F37:	DEC DE
00004F38:	CALL 4F87h
00004F3B:	JR NZ,-06h
00004F3D:	INC DE
00004F3E:	LD BC,0000h
00004F41:	PUSH DE
00004F42:	EXX
00004F43:	POP DE
00004F44:	EXX
00004F45:	CALL 4F87h
00004F48:	JR Z,+2Dh
00004F4A:	DEC HL
00004F4B:	CALL 4F87h
00004F4E:	JR Z,+0Ch
00004F50:	DEC B
00004F51:	JR Z,+05h
00004F53:	PUSH HL
00004F54:	PUSH DE
00004F55:	CALL 1EB0h		; MEMECK: (SBC SP,DE)
00004F58:	LD B,01h
00004F5A:	JR +02h
00004F5C:	LD B,00h
00004F5E:	INC HL
00004F5F:	INC HL
00004F60:	CALL 4F87h
00004F63:	JR Z,+0Ch
00004F65:	DEC C
00004F66:	JR Z,+05h
00004F68:	PUSH HL
00004F69:	PUSH DE
00004F6A:	CALL 1EB0h		; MEMECK: (SBC SP,DE)
00004F6D:	LD C,01h
00004F6F:	JR +02h
00004F71:	LD C,00h
00004F73:	DEC HL
00004F74:	INC DE
00004F75:	JR -32h
00004F77:	PUSH HL
00004F78:	PUSH DE
00004F79:	EXX
00004F7A:	POP HL
00004F7B:	OR A
00004F7C:	SBC HL,DE
00004F7E:	LD C,L
00004F7F:	LD B,H
00004F80:	POP HL
00004F81:	CALL 4B56h
00004F84:	JP 4F25h
00004F87:	PUSH BC
00004F88:	PUSH DE
00004F89:	PUSH HL
00004F8A:	CALL 4823h
00004F8D:	JR C,+0Ah
00004F8F:	EX DE,HL
00004F90:	LD BC,4F9Eh
00004F93:	ADD HL,BC
00004F94:	LD C,(HL)
00004F95:	INC HL
00004F96:	LD B,(HL)
00004F97:	PUSH BC
00004F98:	RET
00004F99:	XOR A
00004F9A:	POP HL
00004F9B:	POP DE
00004F9C:	POP BC
00004F9D:	RET
00004F9E:	AND (HL)
00004F9F:	LD C,A
00004FA0:	RST 08h
00004FA1:	LD C,A
00004FA2:	CALL P,0C4Fh
00004FA5:	LD D,B
00004FA6:	LD C,E
00004FA7:	LD B,D
00004FA8:	IN E,(C)
00004FAA:	RLCA
00004FAB:	RLCA
00004FAC:	RLCA
00004FAD:	AND 38h
00004FAF:	ADD 43h
00004FB1:	LD (4FB6h),A
00004FB4:	XOR A
00004FB5:	BIT 0,E
00004FB7:	JR Z,+08h
00004FB9:	LD A,E
00004FBA:	RRCA
00004FBB:	RRCA
00004FBC:	RRCA
00004FBD:	RRCA
00004FBE:	AND 0Fh
00004FC0:	INC A
00004FC1:	LD HL,501Fh
00004FC4:	LD B,09h
00004FC6:	CP (HL)
00004FC7:	JR Z,+03h
00004FC9:	INC HL
00004FCA:	DJNZ -06h
00004FCC:	JP 4F9Ah
00004FCF:	LD C,E
00004FD0:	LD B,D
00004FD1:	IN E,(C)
00004FD3:	RLCA
00004FD4:	RLCA
00004FD5:	RLCA
00004FD6:	AND 38h
00004FD8:	ADD 43h
00004FDA:	LD (4FDFh),A
00004FDD:	XOR A
00004FDE:	BIT 0,E
00004FE0:	JR Z,-21h
00004FE2:	LD A,E
00004FE3:	RLCA
00004FE4:	RLCA
00004FE5:	AND 03h
00004FE7:	INC A
00004FE8:	SET 3,B
00004FEA:	IN D,(C)
00004FEC:	BIT 1,D
00004FEE:	JR Z,-2Fh
00004FF0:	ADD 04h
00004FF2:	JR -33h
00004FF4:	LD C,E
00004FF5:	LD B,D
00004FF6:	IN E,(C)
00004FF8:	AND 03h
00004FFA:	JR Z,+07h
00004FFC:	RL E
00004FFE:	RL E
00005000:	DEC A
00005001:	JR NZ,-07h
00005003:	XOR A
00005004:	RL E
00005006:	RLA
00005007:	RL E
00005009:	RLA
0000500A:	JR -4Bh
0000500C:	LD C,E
0000500D:	LD B,D
0000500E:	IN E,(C)
00005010:	AND 07h
00005012:	JR Z,+05h
00005014:	RL E
00005016:	DEC A
00005017:	JR NZ,-05h
00005019:	XOR A
0000501A:	RL E
0000501C:	RLA
0000501D:	JR -5Eh
0000501F:	NOP
00005020:	NOP
00005021:	NOP
00005022:	NOP
00005023:	NOP
00005024:	NOP
00005025:	NOP
00005026:	NOP
00005027:	NOP

; 'PATTERN'
00005028:	LD A,(1C06h)
0000502B:	CP 04h		; single precision variable type?
0000502D:	JP C,1736h		; ERROR: Illegal function call
00005030:	LD C,L
00005031:	LD B,H
00005032:	CALL 4961h		; Get argument pair "(DE,HL)"
00005035:	CALL 2D61h		; CH2CH: Check for comma ','
00005038:	LD (5073h),DE
0000503C:	LD (5079h),HL
0000503F:	INC BC
00005040:	CALL 22CCh		; IDEEXP: DE= (HL), A=next character to be parsed
00005043:	CALL 2D61h		; CH2CH: Check for comma ','
00005046:	LD A,H
00005047:	OR A
00005048:	LD DE,FFE0h
0000504B:	JR Z,+0Ch
0000504D:	CP FFh
0000504F:	JP NZ,1736h		; ERROR: Illegal function call
00005052:	LD DE,0020h
00005055:	LD A,L
00005056:	NEG
00005058:	LD L,A
00005059:	LD (50A6h),DE
0000505D:	LD A,L
0000505E:	OR A
0000505F:	JP Z,1736h		; ERROR: Illegal function call
00005062:	LD (509Dh),A
00005065:	CALL 459Dh
00005068:	PUSH BC
00005069:	LD B,A
0000506A:	OR A
0000506B:	CALL NZ,5071h
0000506E:	POP HL
0000506F:	DEC HL
00005070:	RET
00005071:	EXX
00005072:	LD DE,0000h
00005075:	LD A,D
00005076:	OR A
00005077:	RET NZ
00005078:	LD HL,0000h
0000507B:	LD A,H
0000507C:	OR A
0000507D:	RET NZ
0000507E:	LD A,L
0000507F:	CP C0h
00005081:	RET NC
00005082:	ADD HL,HL
00005083:	ADD HL,HL
00005084:	ADD HL,HL
00005085:	ADD HL,HL
00005086:	ADD HL,HL
00005087:	LD A,E
00005088:	SRL E
0000508A:	SRL E
0000508C:	SRL E
0000508E:	ADD HL,DE
0000508F:	LD C,L
00005090:	LD B,H
00005091:	AND 07h
00005093:	LD D,80h
00005095:	JR Z,+05h
00005097:	SRL D
00005099:	DEC A
0000509A:	JR NZ,-05h
0000509C:	LD E,01h
0000509E:	PUSH BC
0000509F:	EXX
000050A0:	LD A,(DE)
000050A1:	EXX
000050A2:	CALL 50BAh
000050A5:	LD HL,0020h
000050A8:	ADD HL,BC
000050A9:	LD C,L
000050AA:	LD B,H
000050AB:	EXX
000050AC:	INC DE
000050AD:	DEC B
000050AE:	JR Z,+08h
000050B0:	EXX
000050B1:	DEC E
000050B2:	JR NZ,-15h
000050B4:	POP BC
000050B5:	INC BC
000050B6:	JR -1Ch
000050B8:	POP BC
000050B9:	RET
000050BA:	PUSH BC
000050BB:	PUSH DE
000050BC:	LD L,A
000050BD:	LD H,08h
000050BF:	RLC L
000050C1:	JR NC,+05h
000050C3:	IN A,(C)
000050C5:	OR D
000050C6:	OUT (C),A
000050C8:	RRC D
000050CA:	JR NC,+01h
000050CC:	INC BC
000050CD:	DEC H
000050CE:	JR NZ,-11h
000050D0:	POP DE
000050D1:	POP BC
000050D2:	RET

; 'HCOPY'
000050D3:	PUSH HL
000050D4:	LD A,1Bh		; 'ESC'
000050D6:	CALL 0887h		; Send raw code in A to printer
000050D9:	LD A,41h
000050DB:	CALL 0887h		; Send raw code in A to printer
000050DE:	LD A,07h
000050E0:	CALL 0887h		; Send raw code in A to printer
000050E3:	LD A,(1C06h)
000050E6:	CP 02h
000050E8:	JR NC,+0Ch
000050EA:	LD HL,51AAh
000050ED:	LD DE,516Fh
000050F0:	LD BC,(0AD6h)
000050F4:	JR +09h

000050F6:	LD HL,5195h
000050F9:	LD DE,516Bh
000050FC:	LD BC,0000h
000050FF:	LD (5110h),HL
00005102:	LD (514Dh),DE
00005106:	LD D,00h
00005108:	CALL 517Eh
0000510B:	LD E,20h
0000510D:	PUSH BC
0000510E:	PUSH DE
0000510F:	CALL 5195h
00005112:	LD B,08h
00005114:	XOR A
00005115:	RLCA
00005116:	RLCA
00005117:	RLC E
00005119:	JR NC,+02h
0000511B:	ADD 03h
0000511D:	RLCA
0000511E:	RLCA
0000511F:	RLC D
00005121:	JR NC,+02h
00005123:	ADD 03h
00005125:	RLCA
00005126:	RLCA
00005127:	RLC L
00005129:	JR NC,+02h
0000512B:	ADD 03h
0000512D:	RLCA
0000512E:	RLCA
0000512F:	RLC H
00005131:	JR NC,+02h
00005133:	ADD 03h
00005135:	EXX
00005136:	PUSH AF
00005137:	CALL 0887h		; Send raw code in A to printer
0000513A:	POP AF
0000513B:	PUSH AF
0000513C:	CALL 0887h		; Send raw code in A to printer
0000513F:	POP AF
00005140:	CALL 0887h		; Send raw code in A to printer
00005143:	EXX
00005144:	DJNZ -32h
00005146:	POP DE
00005147:	POP BC
00005148:	INC BC
00005149:	DEC E
0000514A:	JR NZ,-3Fh
0000514C:	CALL 516Bh
0000514F:	ADD HL,BC
00005150:	LD C,L
00005151:	LD B,H
00005152:	LD A,0Ah
00005154:	EXX
00005155:	CALL 0887h		; Send raw code in A to printer
00005158:	EXX
00005159:	INC D
0000515A:	LD A,D
0000515B:	CP 30h
0000515D:	JR NZ,-57h
0000515F:	LD A,1Bh
00005161:	CALL 0887h		; Send raw code in A to printer
00005164:	LD A,32h
00005166:	CALL 0887h		; Send raw code in A to printer
00005169:	POP HL
0000516A:	RET

0000516B:	LD HL,0060h
0000516E:	RET

0000516F:	LD A,D
00005170:	SUB 03h
00005172:	JR NC,-04h
00005174:	CP FFh
00005176:	LD HL,0000h
00005179:	RET Z
0000517A:	LD HL,FFE0h
0000517D:	RET
0000517E:	EXX
0000517F:	LD A,1Bh		; 'ESC'
00005181:	CALL 0887h		; Send raw code in A to printer
00005184:	LD A,4Ch
00005186:	CALL 0887h		; Send raw code in A to printer
00005189:	LD A,00h
0000518B:	CALL 0887h		; Send raw code in A to printer
0000518E:	LD A,03h
00005190:	CALL 0887h		; Send raw code in A to printer
00005193:	EXX
00005194:	RET

00005195:	IN E,(C)
00005197:	LD A,20h
00005199:	ADD C
0000519A:	LD C,A
0000519B:	IN D,(C)
0000519D:	LD A,20h
0000519F:	ADD C
000051A0:	LD C,A
000051A1:	IN L,(C)
000051A3:	LD A,20h
000051A5:	ADD C
000051A6:	LD C,A
000051A7:	IN H,(C)
000051A9:	RET
000051AA:	IN H,(C)
000051AC:	SET 3,B
000051AE:	IN A,(C)
000051B0:	AND 0Fh
000051B2:	SUB 04h
000051B4:	JR C,+3Fh
000051B6:	SUB 04h
000051B8:	JR C,+1Dh
000051BA:	SUB 04h
000051BC:	JR C,+53h
000051BE:	LD A,D
000051BF:	SUB 03h
000051C1:	JR NC,-04h
000051C3:	ADD 03h
000051C5:	LD B,A
000051C6:	INC B
000051C7:	JR +04h
000051C9:	RRC H
000051CB:	RRC H
000051CD:	DJNZ -06h
000051CF:	CALL 523Dh
000051D2:	LD E,A
000051D3:	LD D,A
000051D4:	LD L,A
000051D5:	LD H,A
000051D6:	RET
000051D7:	LD A,D
000051D8:	SUB 03h
000051DA:	JR NC,-04h
000051DC:	ADD 03h
000051DE:	JR Z,-11h
000051E0:	CP 02h
000051E2:	JR NZ,+06h
000051E4:	RRC H
000051E6:	RRC H
000051E8:	JR -1Bh
000051EA:	CALL 523Dh
000051ED:	LD E,A
000051EE:	LD D,A
000051EF:	CALL 523Dh
000051F2:	LD L,A
000051F3:	LD H,A
000051F4:	RET

000051F5:	LD A,H
000051F6:	AND 7Fh
000051F8:	SUB 20h
000051FA:	JR NC,+01h
000051FC:	XOR A
000051FD:	LD H,A
000051FE:	CALL 5226h
00005201:	LD D,00h
00005203:	ADD HL,DE
00005204:	LD DE,524Ah
00005207:	ADD HL,DE
00005208:	LD E,(HL)
00005209:	INC HL
0000520A:	LD D,(HL)
0000520B:	INC HL
0000520C:	LD A,(HL)
0000520D:	INC HL
0000520E:	LD H,(HL)
0000520F:	LD L,A
00005210:	RET
00005211:	CALL 5226h
00005214:	ADD HL,BC
00005215:	LD D,10h
00005217:	ADD HL,DE
00005218:	LD C,L
00005219:	LD B,H
0000521A:	IN E,(C)
0000521C:	INC BC
0000521D:	IN D,(C)
0000521F:	INC BC
00005220:	IN L,(C)
00005222:	INC BC
00005223:	IN H,(C)
00005225:	RET
00005226:	LD A,D
00005227:	SUB 03h
00005229:	JR NC,-04h
0000522B:	ADD 03h
0000522D:	RLCA
0000522E:	RLCA
0000522F:	LD E,A
00005230:	LD A,H
00005231:	AND 7Fh
00005233:	LD L,A
00005234:	LD H,00h
00005236:	ADD HL,HL
00005237:	ADD HL,HL
00005238:	LD C,L
00005239:	LD B,H
0000523A:	ADD HL,HL
0000523B:	ADD HL,BC
0000523C:	RET
0000523D:	XOR A
0000523E:	RRC H
00005240:	JR NC,+02h
00005242:	LD A,0Fh
00005244:	RRC H
00005246:	RET NC
00005247:	ADD F0h
00005249:	RET
0000524A:	NOP
0000524B:	NOP
0000524C:	NOP
0000524D:	NOP
0000524E:	NOP
0000524F:	NOP
00005250:	NOP
00005251:	NOP
00005252:	NOP
00005253:	NOP
00005254:	NOP
00005255:	NOP
00005256:	NOP
00005257:	NOP
00005258:	DJNZ +10h
0000525A:	DJNZ +10h
0000525C:	DJNZ +00h
0000525E:	DJNZ +00h
00005260:	NOP
00005261:	NOP
00005262:	NOP
00005263:	NOP
00005264:	JR Z,+28h
00005266:	JR Z,+00h
00005268:	NOP
00005269:	NOP
0000526A:	NOP
0000526B:	NOP
0000526C:	NOP
0000526D:	NOP
0000526E:	NOP
0000526F:	NOP
00005270:	INC H
00005271:	INC H
00005272:	LD A,(HL)
00005273:	INC H
00005274:	LD A,(HL)
00005275:	INC H
00005276:	INC H
00005277:	NOP
00005278:	NOP
00005279:	NOP
0000527A:	NOP
0000527B:	NOP
0000527C:	DJNZ +3Ch
0000527E:	LD D,B
0000527F:	JR C,+14h
00005281:	LD A,B
00005282:	DJNZ +00h
00005284:	NOP
00005285:	NOP
00005286:	NOP
00005287:	NOP
00005288:	NOP
00005289:	LD H,D
0000528A:	LD H,H
0000528B:	EX AF,AF'
0000528C:	DJNZ +26h
0000528E:	LD B,(HL)
0000528F:	NOP
00005290:	NOP
00005291:	NOP
00005292:	NOP
00005293:	NOP
00005294:	JR NC,+48h
00005296:	LD C,B
00005297:	JR NC,+4Ah
00005299:	LD B,H
0000529A:	LD A,(0000h)
0000529D:	NOP
0000529E:	NOP
0000529F:	NOP
000052A0:	JR NC,+10h
000052A2:	JR NZ,+00h
000052A4:	NOP
000052A5:	NOP
000052A6:	NOP
000052A7:	NOP
000052A8:	NOP
000052A9:	NOP
000052AA:	NOP
000052AB:	NOP
000052AC:	EX AF,AF'
000052AD:	DJNZ +20h
000052AF:	JR NZ,+20h
000052B1:	DJNZ +08h
000052B3:	NOP
000052B4:	NOP
000052B5:	NOP
000052B6:	NOP
000052B7:	NOP
000052B8:	JR NZ,+10h
000052BA:	EX AF,AF'
000052BB:	EX AF,AF'
000052BC:	EX AF,AF'
000052BD:	DJNZ +20h
000052BF:	NOP
000052C0:	NOP
000052C1:	NOP
000052C2:	NOP
000052C3:	NOP
000052C4:	DJNZ +54h
000052C6:	JR C,+7Ch
000052C8:	JR C,+54h
000052CA:	DJNZ +00h
000052CC:	NOP
000052CD:	NOP
000052CE:	NOP
000052CF:	NOP
000052D0:	NOP
000052D1:	DJNZ +10h
000052D3:	LD A,H
000052D4:	DJNZ +10h
000052D6:	NOP
000052D7:	NOP
000052D8:	NOP
000052D9:	NOP
000052DA:	NOP
000052DB:	NOP
000052DC:	NOP
000052DD:	NOP
000052DE:	NOP
000052DF:	NOP
000052E0:	JR NC,+10h
000052E2:	JR NZ,+00h
000052E4:	NOP
000052E5:	NOP
000052E6:	NOP
000052E7:	NOP
000052E8:	NOP
000052E9:	NOP
000052EA:	NOP
000052EB:	LD A,H
000052EC:	NOP
000052ED:	NOP
000052EE:	NOP
000052EF:	NOP
000052F0:	NOP
000052F1:	NOP
000052F2:	NOP
000052F3:	NOP
000052F4:	NOP
000052F5:	NOP
000052F6:	NOP
000052F7:	NOP
000052F8:	JR NC,+30h
000052FA:	NOP
000052FB:	NOP
000052FC:	NOP
000052FD:	NOP
000052FE:	NOP
000052FF:	NOP
00005300:	NOP
00005301:	LD (BC),A
00005302:	INC B
00005303:	EX AF,AF'
00005304:	DJNZ +20h
00005306:	LD B,B
00005307:	NOP
00005308:	NOP
00005309:	NOP
0000530A:	NOP
0000530B:	NOP
0000530C:	INC A
0000530D:	LD B,D
0000530E:	LD B,(HL)
0000530F:	LD E,D
00005310:	LD H,D
00005311:	LD B,D
00005312:	INC A
00005313:	NOP
00005314:	NOP
00005315:	NOP
00005316:	NOP
00005317:	NOP
00005318:	DJNZ +30h
0000531A:	LD D,B
0000531B:	DJNZ +10h
0000531D:	DJNZ +7Ch
0000531F:	NOP
00005320:	NOP
00005321:	NOP
00005322:	NOP
00005323:	NOP
00005324:	INC A
00005325:	LD B,D
00005326:	LD (BC),A
00005327:	INC C
00005328:	JR NC,+40h
0000532A:	LD A,(HL)
0000532B:	NOP
0000532C:	NOP
0000532D:	NOP
0000532E:	NOP
0000532F:	NOP
00005330:	INC A
00005331:	LD B,D
00005332:	LD (BC),A
00005333:	INC A
00005334:	LD (BC),A
00005335:	LD B,D
00005336:	INC A
00005337:	NOP
00005338:	NOP
00005339:	NOP
0000533A:	NOP
0000533B:	NOP
0000533C:	INC B
0000533D:	INC C
0000533E:	INC D
0000533F:	INC H
00005340:	LD A,(HL)
00005341:	INC B
00005342:	INC B
00005343:	NOP
00005344:	NOP
00005345:	NOP
00005346:	NOP
00005347:	NOP
00005348:	LD A,(HL)
00005349:	LD B,B
0000534A:	LD A,B
0000534B:	INC B
0000534C:	LD (BC),A
0000534D:	LD B,H
0000534E:	JR C,+00h
00005350:	NOP
00005351:	NOP
00005352:	NOP
00005353:	NOP
00005354:	INC E
00005355:	JR NZ,+40h
00005357:	LD A,H
00005358:	LD B,D
00005359:	LD B,D
0000535A:	INC A
0000535B:	NOP
0000535C:	NOP
0000535D:	NOP
0000535E:	NOP
0000535F:	NOP
00005360:	LD A,(HL)
00005361:	LD B,D
00005362:	INC B
00005363:	EX AF,AF'
00005364:	DJNZ +10h
00005366:	DJNZ +00h
00005368:	NOP
00005369:	NOP
0000536A:	NOP
0000536B:	NOP
0000536C:	INC A
0000536D:	LD B,D
0000536E:	LD B,D
0000536F:	INC A
00005370:	LD B,D
00005371:	LD B,D
00005372:	INC A
00005373:	NOP
00005374:	NOP
00005375:	NOP
00005376:	NOP
00005377:	NOP
00005378:	INC A
00005379:	LD B,D
0000537A:	LD B,D
0000537B:	LD A,02h
0000537D:	INC B
0000537E:	JR C,+00h
00005380:	NOP
00005381:	NOP
00005382:	NOP
00005383:	NOP
00005384:	NOP
00005385:	JR NC,+30h
00005387:	NOP
00005388:	JR NC,+30h
0000538A:	NOP
0000538B:	NOP
0000538C:	NOP
0000538D:	NOP
0000538E:	NOP
0000538F:	NOP
00005390:	NOP
00005391:	JR NC,+30h
00005393:	NOP
00005394:	JR NC,+10h
00005396:	JR NZ,+00h
00005398:	NOP
00005399:	NOP
0000539A:	NOP
0000539B:	NOP
0000539C:	LD C,18h
0000539E:	JR NC,+60h
000053A0:	JR NC,+18h
000053A2:	LD C,00h
000053A4:	NOP
000053A5:	NOP
000053A6:	NOP
000053A7:	NOP
000053A8:	NOP
000053A9:	NOP
000053AA:	LD A,(HL)
000053AB:	NOP
000053AC:	LD A,(HL)
000053AD:	NOP
000053AE:	NOP
000053AF:	NOP
000053B0:	NOP
000053B1:	NOP
000053B2:	NOP
000053B3:	NOP
000053B4:	LD (HL),B
000053B5:	JR +0Ch
000053B7:	LD B,0Ch
000053B9:	JR +70h
000053BB:	NOP
000053BC:	NOP
000053BD:	NOP
000053BE:	NOP
000053BF:	NOP
000053C0:	INC A
000053C1:	LD B,D
000053C2:	LD (BC),A
000053C3:	INC C
000053C4:	DJNZ +00h
000053C6:	DJNZ +00h
000053C8:	NOP
000053C9:	NOP
000053CA:	NOP
000053CB:	NOP
000053CC:	INC E
000053CD:	LD (564Ah),HL
000053D0:	LD C,H
000053D1:	JR NZ,+1Eh
000053D3:	NOP
000053D4:	NOP
000053D5:	NOP
000053D6:	NOP
000053D7:	NOP
000053D8:	JR +24h
000053DA:	LD B,D
000053DB:	LD A,(HL)
000053DC:	LD B,D
000053DD:	LD B,D
000053DE:	LD B,D
000053DF:	NOP
000053E0:	NOP
000053E1:	NOP
000053E2:	NOP
000053E3:	NOP
000053E4:	LD A,H
000053E5:	LD B,D
000053E6:	LD B,D
000053E7:	LD A,H
000053E8:	LD B,D
000053E9:	LD B,D
000053EA:	LD A,H
000053EB:	NOP
000053EC:	NOP
000053ED:	NOP
000053EE:	NOP
000053EF:	NOP
000053F0:	INC E
000053F1:	LD (4040h),HL
000053F4:	LD B,B
000053F5:	LD (001Ch),HL
000053F8:	NOP
000053F9:	NOP
000053FA:	NOP
000053FB:	NOP
000053FC:	LD A,B
000053FD:	INC H
000053FE:	LD (2222h),HL
00005401:	INC H
00005402:	LD A,B
00005403:	NOP
00005404:	NOP
00005405:	NOP
00005406:	NOP
00005407:	NOP
00005408:	LD A,(HL)
00005409:	LD B,B
0000540A:	LD B,B
0000540B:	LD A,B
0000540C:	LD B,B
0000540D:	LD B,B
0000540E:	LD A,(HL)
0000540F:	NOP
00005410:	NOP
00005411:	NOP
00005412:	NOP
00005413:	NOP
00005414:	LD A,(HL)
00005415:	LD B,B
00005416:	LD B,B
00005417:	LD A,B
00005418:	LD B,B
00005419:	LD B,B
0000541A:	LD B,B
0000541B:	NOP
0000541C:	NOP
0000541D:	NOP
0000541E:	NOP
0000541F:	NOP
00005420:	INC E
00005421:	LD (4E40h),HL
00005424:	LD B,D
00005425:	LD (001Ch),HL
00005428:	NOP
00005429:	NOP
0000542A:	NOP
0000542B:	NOP
0000542C:	LD B,D
0000542D:	LD B,D
0000542E:	LD B,D
0000542F:	LD A,(HL)
00005430:	LD B,D
00005431:	LD B,D
00005432:	LD B,D
00005433:	NOP
00005434:	NOP
00005435:	NOP
00005436:	NOP
00005437:	NOP
00005438:	JR C,+10h
0000543A:	DJNZ +10h
0000543C:	DJNZ +10h
0000543E:	JR C,+00h
00005440:	NOP
00005441:	NOP
00005442:	NOP
00005443:	NOP
00005444:	LD C,04h
00005446:	INC B
00005447:	INC B
00005448:	INC B
00005449:	LD B,H
0000544A:	JR C,+00h
0000544C:	NOP
0000544D:	NOP
0000544E:	NOP
0000544F:	NOP
00005450:	LD B,D
00005451:	LD B,H
00005452:	LD C,B
00005453:	LD (HL),B
00005454:	LD C,B
00005455:	LD B,H
00005456:	LD B,D
00005457:	NOP
00005458:	NOP
00005459:	NOP
0000545A:	NOP
0000545B:	NOP
0000545C:	LD B,B
0000545D:	LD B,B
0000545E:	LD B,B
0000545F:	LD B,B
00005460:	LD B,B
00005461:	LD B,B
00005462:	LD A,(HL)
00005463:	NOP
00005464:	NOP
00005465:	NOP
00005466:	NOP
00005467:	NOP
00005468:	LD B,D
00005469:	LD H,(HL)
0000546A:	LD E,D
0000546B:	LD E,D
0000546C:	LD B,D
0000546D:	LD B,D
0000546E:	LD B,D
0000546F:	NOP
00005470:	NOP
00005471:	NOP
00005472:	NOP
00005473:	NOP
00005474:	LD B,D
00005475:	LD H,D
00005476:	LD D,D
00005477:	LD C,D
00005478:	LD B,(HL)
00005479:	LD B,D
0000547A:	LD B,D
0000547B:	NOP
0000547C:	NOP
0000547D:	NOP
0000547E:	NOP
0000547F:	NOP
00005480:	JR +24h
00005482:	LD B,D
00005483:	LD B,D
00005484:	LD B,D
00005485:	INC H
00005486:	JR +00h
00005488:	NOP
00005489:	NOP
0000548A:	NOP
0000548B:	NOP
0000548C:	LD A,H
0000548D:	LD B,D
0000548E:	LD B,D
0000548F:	LD A,H
00005490:	LD B,B
00005491:	LD B,B
00005492:	LD B,B
00005493:	NOP
00005494:	NOP
00005495:	NOP
00005496:	NOP
00005497:	NOP
00005498:	JR +24h
0000549A:	LD B,D
0000549B:	LD B,D
0000549C:	LD C,D
0000549D:	INC H
0000549E:	LD A,(DE)
0000549F:	NOP
000054A0:	NOP
000054A1:	NOP
000054A2:	NOP
000054A3:	NOP
000054A4:	LD A,H
000054A5:	LD B,D
000054A6:	LD B,D
000054A7:	LD A,H
000054A8:	LD C,B
000054A9:	LD B,H
000054AA:	LD B,D
000054AB:	NOP
000054AC:	NOP
000054AD:	NOP
000054AE:	NOP
000054AF:	NOP
000054B0:	INC A
000054B1:	LD B,D
000054B2:	LD B,B
000054B3:	INC A
000054B4:	LD (BC),A
000054B5:	LD B,D
000054B6:	INC A
000054B7:	NOP
000054B8:	NOP
000054B9:	NOP
000054BA:	NOP
000054BB:	NOP
000054BC:	LD A,H
000054BD:	DJNZ +10h
000054BF:	DJNZ +10h
000054C1:	DJNZ +10h
000054C3:	NOP
000054C4:	NOP
000054C5:	NOP
000054C6:	NOP
000054C7:	NOP
000054C8:	LD B,D
000054C9:	LD B,D
000054CA:	LD B,D
000054CB:	LD B,D
000054CC:	LD B,D
000054CD:	LD B,D
000054CE:	INC A
000054CF:	NOP
000054D0:	NOP
000054D1:	NOP
000054D2:	NOP
000054D3:	NOP
000054D4:	LD B,D
000054D5:	LD B,D
000054D6:	LD B,D
000054D7:	INC H
000054D8:	INC H
000054D9:	JR +18h
000054DB:	NOP
000054DC:	NOP
000054DD:	NOP
000054DE:	NOP
000054DF:	NOP
000054E0:	LD B,D
000054E1:	LD B,D
000054E2:	LD B,D
000054E3:	LD E,D
000054E4:	LD E,D
000054E5:	LD H,(HL)
000054E6:	LD B,D
000054E7:	NOP
000054E8:	NOP
000054E9:	NOP
000054EA:	NOP
000054EB:	NOP
000054EC:	LD B,D
000054ED:	LD B,D
000054EE:	INC H
000054EF:	JR +24h
000054F1:	LD B,D
000054F2:	LD B,D
000054F3:	NOP
000054F4:	NOP
000054F5:	NOP
000054F6:	NOP
000054F7:	NOP
000054F8:	LD B,H
000054F9:	LD B,H
000054FA:	LD B,H
000054FB:	JR C,+10h
000054FD:	DJNZ +10h
000054FF:	NOP
00005500:	NOP
00005501:	NOP
00005502:	NOP
00005503:	NOP
00005504:	LD A,(HL)
00005505:	LD (BC),A
00005506:	INC B
00005507:	JR +20h
00005509:	LD B,B
0000550A:	LD A,(HL)
0000550B:	NOP
0000550C:	NOP
0000550D:	NOP
0000550E:	NOP
0000550F:	NOP
00005510:	INC A
00005511:	JR NZ,+20h
00005513:	JR NZ,+20h
00005515:	JR NZ,+3Ch
00005517:	NOP
00005518:	NOP
00005519:	NOP
0000551A:	NOP

0000551B:	ADD B
0000551C:	ADD B
0000551D:	LD B,B
0000551E:	JR NZ,+10h
00005520:	EX AF,AF'
00005521:	INC B
00005522:	LD (BC),A
00005523:	LD BC,0001h
00005526:	NOP
00005527:	NOP
00005528:	LD A,B
00005529:	EX AF,AF'
0000552A:	EX AF,AF'
0000552B:	EX AF,AF'
0000552C:	EX AF,AF'
0000552D:	EX AF,AF'
0000552E:	LD A,B
0000552F:	NOP
00005530:	NOP
00005531:	NOP
00005532:	NOP
00005533:	NOP
00005534:	DJNZ +28h
00005536:	LD B,H
00005537:	DJNZ +10h
00005539:	DJNZ +10h
0000553B:	NOP
0000553C:	NOP
0000553D:	NOP
0000553E:	NOP
0000553F:	NOP
00005540:	JR NZ,+40h
00005542:	CP 40h
00005544:	JR NZ,+00h
00005546:	NOP
00005547:	NOP
00005548:	NOP
00005549:	NOP
0000554A:	NOP
0000554B:	NOP
0000554C:	NOP
0000554D:	NOP
0000554E:	NOP
0000554F:	NOP
00005550:	NOP
00005551:	NOP
00005552:	NOP
00005553:	NOP
00005554:	NOP
00005555:	NOP
00005556:	NOP
00005557:	NOP
00005558:	NOP
00005559:	INC A
0000555A:	LD B,D
0000555B:	LD B,D
0000555C:	LD B,D
0000555D:	LD B,D
0000555E:	INC A
0000555F:	NOP
00005560:	NOP
00005561:	NOP
00005562:	NOP
00005563:	NOP
00005564:	NOP
00005565:	INC A
00005566:	LD A,(HL)
00005567:	LD A,(HL)
00005568:	LD A,(HL)
00005569:	LD A,(HL)
0000556A:	INC A
0000556B:	NOP
0000556C:	NOP
0000556D:	NOP
0000556E:	NOP
0000556F:	NOP
00005570:	NOP
00005571:	EX AF,AF'
00005572:	EX AF,AF'
00005573:	EX AF,AF'
00005574:	LD HL,(081Ch)
00005577:	NOP
00005578:	NOP
00005579:	NOP
0000557A:	NOP
0000557B:	NOP
0000557C:	NOP
0000557D:	EX AF,AF'
0000557E:	INC B
0000557F:	LD A,(HL)
00005580:	INC B
00005581:	EX AF,AF'
00005582:	NOP
00005583:	NOP
00005584:	NOP
00005585:	NOP
00005586:	NOP
00005587:	NOP
00005588:	NOP
00005589:	NOP
0000558A:	NOP
0000558B:	RET P
0000558C:	DJNZ +10h
0000558E:	DJNZ +10h
00005590:	DJNZ +10h
00005592:	DJNZ +10h
00005594:	DJNZ +10h
00005596:	DJNZ -10h
00005598:	NOP
00005599:	NOP
0000559A:	NOP
0000559B:	NOP
0000559C:	NOP
0000559D:	NOP
0000559E:	NOP
0000559F:	NOP
000055A0:	NOP
000055A1:	NOP
000055A2:	NOP
000055A3:	RRA
000055A4:	DJNZ +10h
000055A6:	DJNZ +10h
000055A8:	DJNZ +10h
000055AA:	DJNZ +10h
000055AC:	DJNZ +10h
000055AE:	DJNZ +1Fh
000055B0:	NOP
000055B1:	NOP
000055B2:	NOP
000055B3:	NOP
000055B4:	NOP
000055B5:	NOP
000055B6:	DJNZ +10h
000055B8:	DJNZ +10h
000055BA:	DJNZ -01h
000055BC:	DJNZ +10h
000055BE:	DJNZ +10h
000055C0:	DJNZ +10h
000055C2:	DJNZ +10h
000055C4:	DJNZ +10h
000055C6:	DJNZ +10h
000055C8:	DJNZ +10h
000055CA:	DJNZ +10h
000055CC:	DJNZ +10h
000055CE:	NOP
000055CF:	NOP
000055D0:	NOP
000055D1:	NOP
000055D2:	NOP
000055D3:	RST 38h
000055D4:	NOP
000055D5:	NOP
000055D6:	NOP
000055D7:	NOP
000055D8:	NOP
000055D9:	NOP
000055DA:	DJNZ +10h
000055DC:	DJNZ +10h
000055DE:	DJNZ -01h
000055E0:	NOP
000055E1:	NOP
000055E2:	NOP
000055E3:	NOP
000055E4:	NOP
000055E5:	NOP
000055E6:	NOP
000055E7:	NOP
000055E8:	NOP
000055E9:	NOP
000055EA:	NOP
000055EB:	RST 38h
000055EC:	DJNZ +10h
000055EE:	DJNZ +10h
000055F0:	DJNZ +10h
000055F2:	DJNZ +10h
000055F4:	DJNZ +10h
000055F6:	DJNZ -10h
000055F8:	DJNZ +10h
000055FA:	DJNZ +10h
000055FC:	DJNZ +10h
000055FE:	DJNZ +10h
00005600:	DJNZ +10h
00005602:	DJNZ +1Fh
00005604:	DJNZ +10h
00005606:	DJNZ +10h
00005608:	DJNZ +10h
0000560A:	NOP
0000560B:	LD (HL),D
0000560C:	ADC D
0000560D:	ADC D
0000560E:	LD (HL),D
0000560F:	LD (BC),A
00005610:	LD A,02h
00005612:	LD A,20h
00005614:	LD A,00h
00005616:	NOP
00005617:	LD (HL),D
00005618:	ADC D
00005619:	LD (HL),D
0000561A:	JP M,422Eh
0000561D:	LD A,3Eh
0000561F:	JR NZ,+3Eh
00005621:	NOP
00005622:	NOP
00005623:	LD (FA22h),HL
00005626:	LD (BC),A
00005627:	LD (HL),D
00005628:	ADC E
00005629:	ADC D
0000562A:	LD (HL),D
0000562B:	LD (00FAh),HL
0000562E:	NOP
0000562F:	DJNZ +10h
00005631:	JR Z,+44h
00005633:	ADD D
00005634:	NOP
00005635:	CP 10h
00005637:	DJNZ +10h
00005639:	DJNZ +00h
0000563B:	LD A,H
0000563C:	LD B,H
0000563D:	LD A,H
0000563E:	DJNZ -02h
00005640:	NOP
00005641:	LD A,H
00005642:	INC B
00005643:	INC B
00005644:	INC B
00005645:	NOP
00005646:	NOP
00005647:	LD A,H
00005648:	INC B
00005649:	INC B
0000564A:	NOP
0000564B:	CP 00h
0000564D:	LD A,H
0000564E:	LD B,H
0000564F:	LD B,H
00005650:	LD A,H
00005651:	NOP
00005652:	NOP
00005653:	LD A,H
00005654:	LD B,B
00005655:	LD A,B
00005656:	LD B,B
00005657:	LD B,B
00005658:	LD A,H
00005659:	DJNZ +10h
0000565B:	DJNZ -02h
0000565D:	NOP
0000565E:	NOP
0000565F:	ADD D
00005660:	ADC (HL)
00005661:	ADD D
00005662:	ADC (HL)
00005663:	ADD D
00005664:	JP M,4002h
00005667:	LD B,B
00005668:	LD A,(HL)
00005669:	NOP
0000566A:	NOP
0000566B:	LD (BC),A
0000566C:	LD (2222h),HL
0000566F:	LD D,D
00005670:	LD D,D
00005671:	ADC D
00005672:	ADC D
00005673:	LD (BC),A
00005674:	LD (BC),A
00005675:	NOP
00005676:	NOP
00005677:	LD B,H
00005678:	LD A,H
00005679:	LD B,H
0000567A:	LD A,H
0000567B:	NOP
0000567C:	CP 10h
0000567E:	LD D,B
0000567F:	LD B,B
00005680:	LD A,H
00005681:	NOP
00005682:	NOP
00005683:	DJNZ +10h
00005685:	CP 28h
00005687:	LD B,H
00005688:	ADD D
00005689:	DJNZ +10h
0000568B:	DJNZ -02h
0000568D:	NOP
0000568E:	NOP
0000568F:	LD BC,F505h
00005692:	DEC D
00005693:	DEC D
00005694:	RLA
00005695:	DEC H
00005696:	LD B,L
00005697:	ADD L
00005698:	DEC B
00005699:	NOP
0000569A:	NOP
0000569B:	LD BC,F505h
0000569E:	ADD L
0000569F:	ADD L
000056A0:	ADD A
000056A1:	ADD L
000056A2:	PUSH AF
000056A3:	DEC B
000056A4:	DEC B
000056A5:	NOP
000056A6:	NOP
000056A7:	LD (BC),A
000056A8:	LD (HL),D
000056A9:	ADC D
000056AA:	ADC D
000056AB:	ADC D
000056AC:	LD (HL),D
000056AD:	LD (BC),A
000056AE:	LD B,D
000056AF:	LD B,B
000056B0:	LD A,(HL)
000056B1:	NOP
000056B2:	NOP
000056B3:	NOP
000056B4:	LD A,H
000056B5:	LD B,B
000056B6:	LD B,B
000056B7:	LD B,B
000056B8:	LD A,H
000056B9:	DJNZ +10h
000056BB:	DJNZ -02h
000056BD:	NOP
000056BE:	NOP
000056BF:	LD (BC),A
000056C0:	LD (HL),D
000056C1:	ADC D
000056C2:	LD (HL),D
000056C3:	JP M,422Eh
000056C6:	LD (3E20h),HL
000056C9:	NOP
000056CA:	NOP
000056CB:	NOP
000056CC:	NOP
000056CD:	LD A,22h
000056CF:	LD A,22h
000056D1:	LD A,00h
000056D3:	NOP
000056D4:	NOP
000056D5:	NOP
000056D6:	NOP
000056D7:	NOP
000056D8:	LD A,22h
000056DA:	LD A,22h
000056DC:	LD A,22h
000056DE:	LD B,D
000056DF:	NOP
000056E0:	NOP
000056E1:	NOP
000056E2:	NOP
000056E3:	NOP
000056E4:	DJNZ +54h
000056E6:	LD D,H
000056E7:	DJNZ +28h
000056E9:	LD B,H
000056EA:	ADD D
000056EB:	NOP
000056EC:	NOP
000056ED:	NOP
000056EE:	NOP
000056EF:	NOP
000056F0:	DJNZ +12h
000056F2:	CALL M,3438h
000056F5:	LD D,D
000056F6:	SUB C
000056F7:	NOP
000056F8:	NOP
000056F9:	NOP
000056FA:	NOP
000056FB:	NOP
000056FC:	DJNZ +10h
000056FE:	CP 10h
00005700:	JR C,+54h
00005702:	SUB D
00005703:	NOP
00005704:	NOP
00005705:	NOP
00005706:	NOP
00005707:	NOP
00005708:	DJNZ +28h
0000570A:	LD A,H
0000570B:	SUB D
0000570C:	LD A,H
0000570D:	LD D,H
0000570E:	CP 00h
00005710:	NOP
00005711:	NOP
00005712:	NOP
00005713:	NOP
00005714:	DJNZ +10h
00005716:	DJNZ +7Ch
00005718:	DJNZ +10h
0000571A:	CP 00h
0000571C:	NOP
0000571D:	NOP
0000571E:	NOP
0000571F:	NOP
00005720:	JR NZ,+7Eh
00005722:	ADD B
00005723:	LD A,H
00005724:	LD D,B
00005725:	CP 10h
00005727:	NOP
00005728:	NOP
00005729:	NOP
0000572A:	NOP
0000572B:	NOP
0000572C:	EX AF,AF'
0000572D:	CALL M,FEA8h
00005730:	AND H
00005731:	CP 14h
00005733:	INC B
00005734:	NOP
00005735:	NOP
00005736:	NOP
00005737:	NOP
00005738:	DJNZ +28h
0000573A:	LD B,H
0000573B:	CP 14h
0000573D:	INC H
0000573E:	LD C,B
0000573F:	NOP
00005740:	NOP
00005741:	NOP
00005742:	NOP
00005743:	NOP
00005744:	LD (HL),H
00005745:	INC H
00005746:	PUSH AF
00005747:	LD H,L
00005748:	OR D
00005749:	AND H
0000574A:	JR Z,+00h
0000574C:	NOP
0000574D:	NOP
0000574E:	NOP
0000574F:	NOP
00005750:	DJNZ +10h
00005752:	DJNZ +54h
00005754:	SUB D
00005755:	JR NC,+10h
00005757:	NOP
00005758:	NOP
00005759:	NOP
0000575A:	NOP
0000575B:	NOP
0000575C:	DJNZ +10h
0000575E:	CP 10h
00005760:	JR Z,+44h
00005762:	ADD D
00005763:	NOP
00005764:	NOP
00005765:	NOP
00005766:	NOP
00005767:	NOP
00005768:	NOP
00005769:	DJNZ +10h
0000576B:	DJNZ +28h
0000576D:	LD B,H
0000576E:	ADD D
0000576F:	NOP
00005770:	NOP
00005771:	NOP
00005772:	NOP
00005773:	NOP
00005774:	DJNZ +28h
00005776:	LD A,H
00005777:	ADD D
00005778:	LD A,H
00005779:	LD B,H
0000577A:	LD A,H
0000577B:	NOP
0000577C:	NOP
0000577D:	NOP
0000577E:	NOP
0000577F:	NOP
00005780:	INC A
00005781:	LD B,H
00005782:	XOR B
00005783:	DJNZ +3Eh
00005785:	JP PO,003Eh
00005788:	NOP
00005789:	NOP
0000578A:	NOP
0000578B:	NOP
0000578C:	NOP
0000578D:	EX AF,AF'
0000578E:	LD A,A
0000578F:	EX AF,AF'
00005790:	LD A,A
00005791:	EX AF,AF'
00005792:	NOP
00005793:	NOP
00005794:	NOP
00005795:	NOP
00005796:	NOP
00005797:	NOP
00005798:	LD B,18h
0000579A:	JR NZ,+18h
0000579C:	LD B,00h
0000579E:	LD A,00h
000057A0:	NOP
000057A1:	NOP
000057A2:	NOP
000057A3:	NOP
000057A4:	JR NC,+0Ch
000057A6:	LD (BC),A
000057A7:	INC C
000057A8:	JR NC,+00h
000057AA:	LD A,00h
000057AC:	NOP
000057AD:	NOP
000057AE:	NOP
000057AF:	NOP
000057B0:	EX AF,AF'
000057B1:	EX AF,AF'
000057B2:	LD A,08h
000057B4:	EX AF,AF'
000057B5:	NOP
000057B6:	LD A,00h
000057B8:	NOP
000057B9:	NOP
000057BA:	NOP
000057BB:	NOP
000057BC:	NOP
000057BD:	LD (0814h),HL
000057C0:	INC D
000057C1:	LD (0000h),HL
000057C4:	NOP
000057C5:	NOP
000057C6:	NOP
000057C7:	NOP
000057C8:	NOP
000057C9:	LD A,49h
000057CB:	LD A,A
000057CC:	LD C,C
000057CD:	LD A,00h
000057CF:	NOP
000057D0:	NOP
000057D1:	NOP
000057D2:	NOP
000057D3:	NOP
000057D4:	NOP
000057D5:	NOP
000057D6:	NOP
000057D7:	EX AF,AF'
000057D8:	NOP
000057D9:	NOP
000057DA:	NOP
000057DB:	NOP
000057DC:	NOP
000057DD:	NOP
000057DE:	NOP
000057DF:	NOP
000057E0:	NOP
000057E1:	NOP
000057E2:	EX AF,AF'
000057E3:	INC D
000057E4:	LD (007Fh),HL
000057E7:	NOP
000057E8:	NOP
000057E9:	NOP
000057EA:	NOP
000057EB:	NOP
000057EC:	NOP
000057ED:	NOP
000057EE:	LD A,A
000057EF:	LD (0814h),HL
000057F2:	NOP
000057F3:	NOP
000057F4:	NOP
000057F5:	NOP
000057F6:	NOP
000057F7:	NOP
000057F8:	NOP
000057F9:	NOP
000057FA:	NOP
000057FB:	EX AF,AF'
000057FC:	NOP
000057FD:	NOP
000057FE:	LD (0000h),HL
00005801:	NOP
00005802:	NOP
00005803:	NOP
00005804:	EX AF,AF'
00005805:	NOP
00005806:	EX AF,AF'
00005807:	EX AF,AF'
00005808:	EX AF,AF'
00005809:	EX AF,AF'
0000580A:	EX AF,AF'
0000580B:	NOP
0000580C:	NOP
0000580D:	NOP
0000580E:	NOP
0000580F:	NOP
00005810:	NOP
00005811:	NOP
00005812:	NOP
00005813:	LD (0000h),HL
00005816:	EX AF,AF'
00005817:	NOP
00005818:	NOP
00005819:	NOP
0000581A:	INC C
0000581B:	DJNZ +10h
0000581D:	DJNZ +10h
0000581F:	DJNZ +10h
00005821:	DJNZ +10h
00005823:	DJNZ +10h
00005825:	LD H,B
00005826:	NOP
00005827:	RRCA
00005828:	EX AF,AF'
00005829:	EX AF,AF'
0000582A:	EX AF,AF'
0000582B:	LD C,B
0000582C:	XOR B
0000582D:	JR +08h
0000582F:	NOP
00005830:	NOP
00005831:	NOP
00005832:	NOP
00005833:	NOP
00005834:	NOP
00005835:	LD A,(HL)
00005836:	JR NZ,+10h
00005838:	JR NZ,+7Eh
0000583A:	NOP
0000583B:	NOP
0000583C:	NOP
0000583D:	NOP
0000583E:	NOP
0000583F:	NOP
00005840:	NOP
00005841:	LD A,14h
00005843:	INC D
00005844:	INC D
00005845:	INC D
00005846:	NOP
00005847:	NOP
00005848:	NOP
00005849:	NOP
0000584A:	NOP
0000584B:	LD H,B
0000584C:	SUB B
0000584D:	SUB B
0000584E:	SUB B
0000584F:	LD H,B
00005850:	NOP
00005851:	NOP
00005852:	NOP
00005853:	NOP
00005854:	NOP
00005855:	NOP
00005856:	NOP
00005857:	JR NZ,+60h
00005859:	JR NZ,+20h
0000585B:	JR NZ,+00h
0000585D:	NOP
0000585E:	NOP
0000585F:	NOP
00005860:	NOP
00005861:	NOP
00005862:	NOP
00005863:	LD H,B
00005864:	SUB B
00005865:	JR NZ,+40h
00005867:	RET P
00005868:	NOP
00005869:	NOP
0000586A:	NOP
0000586B:	NOP
0000586C:	NOP
0000586D:	NOP
0000586E:	NOP
0000586F:	LD H,B
00005870:	SUB B
00005871:	JR NZ,-70h
00005873:	LD H,B
00005874:	NOP
00005875:	NOP
00005876:	NOP
00005877:	NOP
00005878:	NOP
00005879:	NOP
0000587A:	NOP
0000587B:	LD H,B
0000587C:	AND B
0000587D:	AND B
0000587E:	RET P
0000587F:	JR NZ,+00h
00005881:	NOP
00005882:	NOP
00005883:	NOP
00005884:	NOP
00005885:	NOP
00005886:	NOP
00005887:	RET P
00005888:	ADD B
00005889:	RET P
0000588A:	DJNZ -20h
0000588C:	NOP
0000588D:	NOP
0000588E:	NOP
0000588F:	NOP
00005890:	NOP
00005891:	NOP
00005892:	NOP
00005893:	LD H,B
00005894:	ADD B
00005895:	RET P
00005896:	SUB B
00005897:	LD H,B
00005898:	NOP
00005899:	NOP
0000589A:	NOP
0000589B:	NOP
0000589C:	NOP
0000589D:	NOP
0000589E:	NOP
0000589F:	RET P
000058A0:	DJNZ +20h
000058A2:	JR NZ,+20h
000058A4:	NOP
000058A5:	NOP
000058A6:	NOP
000058A7:	NOP
000058A8:	NOP
000058A9:	NOP
000058AA:	NOP
000058AB:	LD H,B
000058AC:	SUB B
000058AD:	LD H,B
000058AE:	SUB B
000058AF:	LD H,B
000058B0:	NOP
000058B1:	NOP
000058B2:	NOP
000058B3:	NOP
000058B4:	NOP
000058B5:	NOP
000058B6:	NOP
000058B7:	LD H,B
000058B8:	SUB B
000058B9:	RET P
000058BA:	DJNZ +60h
000058BC:	NOP
000058BD:	NOP
000058BE:	NOP
000058BF:	NOP
000058C0:	NOP
000058C1:	NOP
000058C2:	NOP
000058C3:	NOP
000058C4:	NOP
000058C5:	NOP
000058C6:	LD (BC),A
000058C7:	INC (HL)
000058C8:	LD C,B
000058C9:	LD C,B
000058CA:	LD (HL),00h
000058CC:	NOP
000058CD:	NOP
000058CE:	NOP
000058CF:	NOP
000058D0:	JR +24h
000058D2:	JR C,+24h
000058D4:	INC H
000058D5:	JR C,+20h
000058D7:	NOP
000058D8:	NOP
000058D9:	NOP
000058DA:	NOP
000058DB:	NOP
000058DC:	NOP
000058DD:	NOP
000058DE:	LD C,(HL)
000058DF:	JR NC,+20h
000058E1:	JR NZ,+20h
000058E3:	NOP
000058E4:	NOP
000058E5:	NOP
000058E6:	NOP
000058E7:	NOP
000058E8:	JR +24h
000058EA:	INC H
000058EB:	INC A
000058EC:	INC H
000058ED:	INC H
000058EE:	JR +00h
000058F0:	NOP
000058F1:	NOP
000058F2:	NOP
000058F3:	NOP
000058F4:	INC E
000058F5:	JR NZ,+20h
000058F7:	JR +24h
000058F9:	INC H
000058FA:	JR +00h
000058FC:	NOP
000058FD:	NOP
000058FE:	NOP
000058FF:	NOP
00005900:	NOP
00005901:	EX AF,AF'
00005902:	INC E
00005903:	LD HL,(1C2Ah)
00005906:	EX AF,AF'
00005907:	NOP
00005908:	NOP
00005909:	NOP
0000590A:	ADD B
0000590B:	LD B,B
0000590C:	LD B,B
0000590D:	JR NZ,+10h
0000590F:	DJNZ +08h
00005911:	INC B
00005912:	INC B
00005913:	LD (BC),A
00005914:	LD BC,0001h
00005917:	NOP
00005918:	NOP
00005919:	NOP
0000591A:	NOP
0000591B:	NOP
0000591C:	CP 00h
0000591E:	NOP
0000591F:	NOP
00005920:	NOP
00005921:	NOP
00005922:	NOP
00005923:	NOP
00005924:	NOP
00005925:	NOP
00005926:	NOP
00005927:	LD A,H
00005928:	NOP
00005929:	NOP
0000592A:	CP 00h
0000592C:	NOP
0000592D:	NOP
0000592E:	NOP
0000592F:	NOP
00005930:	NOP
00005931:	NOP
00005932:	LD A,H
00005933:	NOP
00005934:	LD A,H
00005935:	NOP
00005936:	CP 00h
00005938:	NOP
00005939:	NOP
0000593A:	NOP
0000593B:	NOP
0000593C:	NOP
0000593D:	NOP
0000593E:	CP AAh
00005940:	XOR D
00005941:	XOR D
00005942:	CP 00h
00005944:	NOP
00005945:	NOP
00005946:	NOP
00005947:	NOP
00005948:	NOP
00005949:	LD A,H
0000594A:	DJNZ +7Ch
0000594C:	INC D
0000594D:	INC D
0000594E:	CP 00h
00005950:	NOP
00005951:	NOP
00005952:	NOP
00005953:	NOP
00005954:	DJNZ +10h
00005956:	CP 00h
00005958:	JR Z,+44h
0000595A:	ADD D
0000595B:	NOP
0000595C:	NOP
0000595D:	NOP
0000595E:	NOP
0000595F:	NOP
00005960:	JR NZ,+20h
00005962:	JR NZ,-02h
00005964:	JR NZ,+20h
00005966:	LD A,00h
00005968:	NOP
00005969:	NOP
0000596A:	NOP
0000596B:	NOP
0000596C:	NOP
0000596D:	NOP
0000596E:	NOP
0000596F:	JR Z,+44h
00005971:	ADD D
00005972:	NOP
00005973:	NOP
00005974:	NOP
00005975:	NOP
00005976:	NOP
00005977:	NOP
00005978:	JR NZ,+20h
0000597A:	CALL M,2424h
0000597D:	LD B,H
0000597E:	ADD (HL)
0000597F:	NOP
00005980:	NOP
00005981:	NOP
00005982:	NOP
00005983:	NOP
00005984:	NOP
00005985:	NOP
00005986:	LD (HL),49h
00005988:	LD (HL),00h
0000598A:	NOP
0000598B:	NOP
0000598C:	NOP
0000598D:	NOP
0000598E:	NOP
0000598F:	NOP
00005990:	JR +20h
00005992:	JR +24h
00005994:	JR +04h
00005996:	JR +00h
00005998:	NOP
00005999:	NOP
0000599A:	NOP
0000599B:	NOP
0000599C:	EX AF,AF'
0000599D:	LD (4914h),HL
000059A0:	INC D
000059A1:	LD (0008h),HL
000059A4:	NOP
000059A5:	NOP
000059A6:	NOP
000059A7:	NOP
000059A8:	NOP
000059A9:	JR C,+00h
000059AB:	LD A,H
000059AC:	DJNZ +10h
000059AE:	DJNZ +00h
000059B0:	NOP
000059B1:	NOP
000059B2:	NOP
000059B3:	LD H,B
000059B4:	SUB B
000059B5:	LD L,(HL)
000059B6:	LD DE,1010h
000059B9:	LD DE,000Eh
000059BC:	NOP
000059BD:	NOP
000059BE:	LD BC,0202h
000059C1:	INC B
000059C2:	EX AF,AF'
000059C3:	EX AF,AF'
000059C4:	DJNZ +20h
000059C6:	JR NZ,+40h

000059C8:	ADD B
000059C9:	ADD B
000059CA:	NOP
000059CB:	NOP
000059CC:	JR NZ,+10h
000059CE:	EX AF,AF'
000059CF:	NOP
000059D0:	NOP
000059D1:	NOP
000059D2:	NOP
000059D3:	NOP
000059D4:	NOP
000059D5:	NOP
000059D6:	NOP
000059D7:	NOP
000059D8:	NOP
000059D9:	NOP
000059DA:	INC A
000059DB:	LD (BC),A
000059DC:	LD E,22h
000059DE:	RRA
000059DF:	NOP
000059E0:	NOP
000059E1:	NOP
000059E2:	NOP
000059E3:	NOP
000059E4:	JR NZ,+20h
000059E6:	INC L
000059E7:	LD (3222h),A
000059EA:	INC L
000059EB:	NOP
000059EC:	NOP
000059ED:	NOP
000059EE:	NOP
000059EF:	NOP
000059F0:	NOP
000059F1:	NOP
000059F2:	INC E
000059F3:	LD (2220h),HL
000059F6:	INC E
000059F7:	NOP
000059F8:	NOP
000059F9:	NOP
000059FA:	NOP
000059FB:	NOP
000059FC:	LD (BC),A
000059FD:	LD (BC),A
000059FE:	LD A,(DE)
000059FF:	LD H,22h
00005A01:	LD H,1Ah
00005A03:	NOP
00005A04:	NOP
00005A05:	NOP
00005A06:	NOP
00005A07:	NOP
00005A08:	NOP
00005A09:	NOP
00005A0A:	INC E
00005A0B:	LD (203Eh),HL
00005A0E:	LD E,00h
00005A10:	NOP
00005A11:	NOP
00005A12:	NOP
00005A13:	NOP
00005A14:	INC C
00005A15:	DJNZ +10h
00005A17:	LD A,H
00005A18:	DJNZ +10h
00005A1A:	DJNZ +00h
00005A1C:	NOP
00005A1D:	NOP
00005A1E:	NOP
00005A1F:	NOP
00005A20:	NOP
00005A21:	NOP
00005A22:	LD A,(DE)
00005A23:	LD H,22h
00005A25:	LD H,1Ah
00005A27:	LD (BC),A
00005A28:	INC E
00005A29:	NOP
00005A2A:	NOP
00005A2B:	NOP
00005A2C:	JR NZ,+20h
00005A2E:	INC L
00005A2F:	LD (2222h),A
00005A32:	LD (0000h),HL
00005A35:	NOP
00005A36:	NOP
00005A37:	NOP
00005A38:	EX AF,AF'
00005A39:	NOP
00005A3A:	JR +08h
00005A3C:	EX AF,AF'
00005A3D:	EX AF,AF'
00005A3E:	INC E
00005A3F:	NOP
00005A40:	NOP
00005A41:	NOP
00005A42:	NOP
00005A43:	NOP
00005A44:	INC B
00005A45:	NOP
00005A46:	INC C
00005A47:	INC B
00005A48:	INC B
00005A49:	INC B
00005A4A:	INC H
00005A4B:	JR +00h
00005A4D:	NOP
00005A4E:	NOP
00005A4F:	NOP
00005A50:	JR NZ,+20h
00005A52:	LD (2824h),HL
00005A55:	INC (HL)
00005A56:	LD (0000h),HL
00005A59:	NOP
00005A5A:	NOP
00005A5B:	NOP
00005A5C:	JR +08h
00005A5E:	EX AF,AF'
00005A5F:	EX AF,AF'
00005A60:	EX AF,AF'
00005A61:	EX AF,AF'
00005A62:	INC E
00005A63:	NOP
00005A64:	NOP
00005A65:	NOP
00005A66:	NOP
00005A67:	NOP
00005A68:	NOP
00005A69:	NOP
00005A6A:	HALT
00005A6B:	LD C,C
00005A6C:	LD C,C
00005A6D:	LD C,C
00005A6E:	LD C,C
00005A6F:	NOP
00005A70:	NOP
00005A71:	NOP
00005A72:	NOP
00005A73:	NOP
00005A74:	NOP
00005A75:	NOP
00005A76:	INC L
00005A77:	LD (2222h),A
00005A7A:	LD (0000h),HL
00005A7D:	NOP
00005A7E:	NOP
00005A7F:	NOP
00005A80:	NOP
00005A81:	NOP
00005A82:	INC E
00005A83:	LD (2222h),HL
00005A86:	INC E
00005A87:	NOP
00005A88:	NOP
00005A89:	NOP
00005A8A:	NOP
00005A8B:	NOP
00005A8C:	NOP
00005A8D:	NOP
00005A8E:	INC L
00005A8F:	LD (3222h),A
00005A92:	INC L
00005A93:	JR NZ,+20h
00005A95:	NOP
00005A96:	NOP
00005A97:	NOP
00005A98:	NOP
00005A99:	NOP
00005A9A:	LD A,(DE)
00005A9B:	LD H,22h
00005A9D:	LD H,1Ah
00005A9F:	LD (BC),A
00005AA0:	LD (BC),A
00005AA1:	NOP
00005AA2:	NOP
00005AA3:	NOP
00005AA4:	NOP
00005AA5:	NOP
00005AA6:	LD L,30h
00005AA8:	JR NZ,+20h
00005AAA:	JR NZ,+00h
00005AAC:	NOP
00005AAD:	NOP
00005AAE:	NOP
00005AAF:	NOP
00005AB0:	NOP
00005AB1:	NOP
00005AB2:	LD E,20h
00005AB4:	INC E
00005AB5:	LD (BC),A
00005AB6:	INC A
00005AB7:	NOP
00005AB8:	NOP
00005AB9:	NOP
00005ABA:	NOP
00005ABB:	NOP
00005ABC:	DJNZ +10h
00005ABE:	JR C,+10h
00005AC0:	DJNZ +12h
00005AC2:	INC C
00005AC3:	NOP
00005AC4:	NOP
00005AC5:	NOP
00005AC6:	NOP
00005AC7:	NOP
00005AC8:	NOP
00005AC9:	NOP
00005ACA:	LD (2222h),HL
00005ACD:	LD H,1Ah
00005ACF:	NOP
00005AD0:	NOP
00005AD1:	NOP
00005AD2:	NOP
00005AD3:	NOP
00005AD4:	NOP
00005AD5:	NOP
00005AD6:	LD (2222h),HL
00005AD9:	INC D
00005ADA:	EX AF,AF'
00005ADB:	NOP
00005ADC:	NOP
00005ADD:	NOP
00005ADE:	NOP
00005ADF:	NOP
00005AE0:	NOP
00005AE1:	NOP
00005AE2:	LD C,C
00005AE3:	LD C,C
00005AE4:	LD C,C
00005AE5:	LD C,C
00005AE6:	LD (HL),00h
00005AE8:	NOP
00005AE9:	NOP
00005AEA:	NOP
00005AEB:	NOP
00005AEC:	NOP
00005AED:	NOP
00005AEE:	LD (0814h),HL
00005AF1:	INC D
00005AF2:	LD (0000h),HL
00005AF5:	NOP
00005AF6:	NOP
00005AF7:	NOP
00005AF8:	NOP
00005AF9:	NOP
00005AFA:	LD (2222h),HL
00005AFD:	LD H,1Ah
00005AFF:	LD (BC),A
00005B00:	INC E
00005B01:	NOP
00005B02:	NOP
00005B03:	NOP
00005B04:	NOP
00005B05:	NOP
00005B06:	LD A,04h
00005B08:	EX AF,AF'
00005B09:	DJNZ +3Eh
00005B0B:	NOP
00005B0C:	NOP
00005B0D:	NOP
00005B0E:	NOP
00005B0F:	NOP
00005B10:	EX AF,AF'
00005B11:	DJNZ +10h
00005B13:	JR NZ,+10h
00005B15:	DJNZ +08h
00005B17:	NOP
00005B18:	NOP
00005B19:	NOP
00005B1A:	NOP
00005B1B:	NOP
00005B1C:	NOP
00005B1D:	LD D,H
00005B1E:	CP 54h
00005B20:	CP 54h
00005B22:	JR Z,+00h
00005B24:	NOP
00005B25:	NOP
00005B26:	NOP
00005B27:	NOP
00005B28:	DJNZ +08h
00005B2A:	EX AF,AF'
00005B2B:	INC B
00005B2C:	EX AF,AF'
00005B2D:	EX AF,AF'
00005B2E:	DJNZ +00h
00005B30:	NOP
00005B31:	NOP
00005B32:	NOP
00005B33:	NOP
00005B34:	NOP
00005B35:	NOP
00005B36:	NOP
00005B37:	LD (004Ch),A
00005B3A:	NOP
00005B3B:	NOP
00005B3C:	NOP
00005B3D:	NOP
00005B3E:	NOP
00005B3F:	NOP
00005B40:	NOP
00005B41:	NOP
00005B42:	LD BC,543Eh
00005B45:	INC D
00005B46:	INC D
00005B47:	NOP
00005B48:	NOP
00005B49:	NOP


00005B4A:	PUSH HL
00005B4B:	LD HL,0008h
00005B4E:	ADD HL,DE
00005B4F:	EX DE,HL
00005B50:	POP HL
00005B51:	RET

; octal format
00005B52:	PUSH HL
00005B53:	LD HL,5BA1h
00005B56:	LD (5B7Bh),HL
00005B59:	LD HL,0000h		; Self Modifying code..   NOP, NOP..
00005B5C:	XOR A			; ..., NOP
00005B5D:	JR +0Ch

; hex format
00005B5F:	PUSH HL
00005B60:	LD HL,5BA8h
00005B63:	LD (5B7Bh),HL
00005B66:	LD HL,5D38h			; Self Modifying code..
00005B69:	LD A,CDh			;      .. CALL ADHLCK
;
00005B6B:	LD (5B89h),HL		; Self Modifying code..
00005B6E:	LD (5B88h),A		;     .. (NOP for octal or CALL ADHLCK for hex)
00005B71:	LD HL,0000h
00005B74:	CALL 5D51h			; TSTNUM
00005B77:	CALL 631Ch			; TOUPPER
00005B7A:	CALL 5BA8h
00005B7D:	JR C,+17h
00005B7F:	CALL 5D38h			; ADHLCK:
00005B82:	CALL 5D38h			; ADHLCK:
00005B85:	CALL 5D38h			; ADHLCK:
00005B88:	CALL 5D38h			; ADHLCK:	(Self Modifying code..)
00005B8B:	ADD L
00005B8C:	LD L,A
00005B8D:	LD A,00h
00005B8F:	ADC H
00005B90:	JP C,6EE4h
00005B93:	LD H,A
00005B94:	JR -22h
00005B96:	DEC DE
00005B97:	LD C,E
00005B98:	LD B,D
00005B99:	EX DE,HL
00005B9A:	POP HL
00005B9B:	CALL 2902h		; FLTHEX:  (HL)=DE
00005B9E:	LD E,C
00005B9F:	LD D,B
00005BA0:	RET

00005BA1:	SUB 30h
00005BA3:	RET C
00005BA4:	CP 08h
00005BA6:	CCF
00005BA7:	RET

00005BA8:	SUB 30h
00005BAA:	RET C
00005BAB:	CP 0Ah
00005BAD:	CCF
00005BAE:	RET NC
00005BAF:	CP 11h
00005BB1:	RET C
00005BB2:	SUB 07h
00005BB4:	CP 10h
00005BB6:	CCF
00005BB7:	RET

; ....get number
00005BB8:	LD (IY+00h),08h	; data type, aka PRCSON, double precision
00005BBC:	XOR A
00005BBD:	LD (IY+FFh),A	; EXPFLG?
00005BC0:	LD C,A
00005BC1:	INC C
00005BC2:	EX DE,HL
00005BC3:	LD B,08h
00005BC5:	CALL 6210h
00005BC8:	EX DE,HL
00005BC9:	CALL 5D51h			; TSTNUM
00005BCC:	CP 2Bh	; '+'
00005BCE:	JR Z,-18h
00005BD0:	CP 2Dh	; '-'
00005BD2:	JR Z,+0Bh
00005BD4:	JR +03h
00005BD6:	CALL 5D51h			; TSTNUM
00005BD9:	CP 30h	; '0'
00005BDB:	JR Z,-07h
00005BDD:	JR +06h
00005BDF:	CALL 5BB8h	; if negative, get number, then..
00005BE2:	JP 6BEBh		; TOGLE:  toggle number sign
; if positive, proceed with formatting
00005BE5:	CP 26h		; '&'
00005BE7:	JR NZ,+17h
00005BE9:	CALL 5D51h			; TSTNUM
00005BEC:	CALL 631Ch			; TOUPPER
00005BEF:	CP 48h		; 'H' (hex)
00005BF1:	JP Z,5B5Fh
00005BF4:	CP 4Fh		; 'O' (octal)
00005BF6:	CALL Z,5D51h		; TSTNUM
00005BF9:	DEC DE
00005BFA:	JP 5B52h	; octal format

00005BFD:	CALL 5D51h			; TSTNUM
00005C00:	CP 2Eh		; '.'
00005C02:	JR Z,+23h
00005C04:	CP 45h
00005C06:	JP Z,5CA8h
00005C09:	CP 44h
00005C0B:	JP Z,5CB6h
00005C0E:	CP 30h
00005C10:	JR C,+47h
00005C12:	CP 3Ah
00005C14:	JR NC,+43h
00005C16:	SUB 30h
00005C18:	CALL 6142h			; MULTEN:
00005C1B:	INC (IY+FFh)	; EXPFLG?
00005C1E:	SET 6,(IY-01h)
00005C22:	CALL 5D3Dh
00005C25:	JR -2Ah

00005C27:	SET 7,(IY-01h)
00005C2B:	CALL 5D51h			; TSTNUM
00005C2E:	CP 30h
00005C30:	JR C,+1Fh
00005C32:	CP 3Ah
00005C34:	JR NC,+1Bh
00005C36:	SUB 30h
00005C38:	INC C
00005C39:	CALL 6142h			; MULTEN:
00005C3C:	BIT 6,(IY-01h)
00005C40:	JR NZ,+07h
00005C42:	OR A
00005C43:	JR Z,-1Ah
00005C45:	SET 6,(IY-01h)
00005C49:	CALL 5D3Dh
00005C4C:	INC (IY+FFh)	; EXPFLG?
00005C4F:	JR -26h
00005C51:	DEC C
00005C52:	JR Z,+05h
00005C54:	CALL 5D27h		; DIVTEN:
00005C57:	JR -08h
00005C59:	CP 45h				; 'E' ..exponent
00005C5B:	JP Z,5CAFh			; EXPON:
00005C5E:	CP 44h
00005C60:	JP Z,5CB6h
00005C63:	CP 23h	; '#'
00005C65:	JR NZ,+09h
00005C67:	LD (IY+00h),08h	; data type, aka PRCSON, double precision
00005C6B:	SET 7,(IY-01h)
00005C6F:	RET

00005C70:	CP 21h	; '!'
00005C72:	JR NZ,+1Dh
; 'CSNG'
00005C74:	SET 7,(IY-01h)
00005C78:	PUSH DE
00005C79:	PUSH BC
00005C7A:	CALL 2B26h
00005C7D:	PUSH HL
00005C7E:	INC HL
00005C7F:	INC HL
00005C80:	INC HL
00005C81:	INC HL
00005C82:	LD B,04h
00005C84:	LD (HL),00h
00005C86:	INC HL
00005C87:	DJNZ -05h
00005C89:	POP HL
00005C8A:	POP BC
00005C8B:	POP DE
00005C8C:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00005C90:	RET

00005C91:	CP 25h
00005C93:	JR NZ,+08h

00005C95:	CALL 6010h		; 'FIX'
00005C98:	RES 7,(IY-01h)
00005C9C:	RET

00005C9D:	DEC DE
00005C9E:	LD A,(IY+FFh)	; EXPFLG?
00005CA1:	AND 3Fh
00005CA3:	CP 08h
00005CA5:	RET NC
00005CA6:	JR -30h
00005CA8:	LD A,(DE)
00005CA9:	CP 4Ch
00005CAB:	JR NZ,+0Fh
00005CAD:	JR -12h

; EXPON:
00005CAF:	LD A,(DE)
00005CB0:	CP 4Ch
00005CB2:	JR NZ,+08h
00005CB4:	JR -19h
00005CB6:	LD (IY+00h),08h	; data type, aka PRCSON, double precision
00005CBA:	JR +04h
00005CBC:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00005CC0:	SET 7,(IY-01h)
00005CC4:	PUSH HL
00005CC5:	LD HL,6FE0h			; MUL:
00005CC8:	LD (5D22h),HL		; EXJPVC
00005CCB:	LD HL,0000h
00005CCE:	CALL 5D51h			; TSTNUM
00005CD1:	CP 2Bh	; '+'
00005CD3:	JR Z,+0Ch
00005CD5:	CP 2Dh	; '-'
00005CD7:	JR NZ,+0Bh
00005CD9:	PUSH HL
00005CDA:	LD HL,70BDh			; DIV:
00005CDD:	LD (5D22h),HL		; EXJPVC
00005CE0:	POP HL
00005CE1:	CALL 5D51h			; TSTNUM
00005CE4:	SUB 30h				; '0'
00005CE6:	JR C,+1Ch
00005CE8:	CP 0Ah				; 10
00005CEA:	JR NC,+18h
00005CEC:	PUSH DE
00005CED:	CALL 5D38h			; ADHLCK:
00005CF0:	LD E,L
00005CF1:	LD D,H
00005CF2:	CALL 5D38h			; ADHLCK:
00005CF5:	CALL 5D38h			; ADHLCK:
00005CF8:	CALL 5D34h			; ADDECK:
00005CFB:	LD E,A
00005CFC:	LD D,00h
00005CFE:	CALL 5D34h			; ADDECK:
00005D01:	POP DE
00005D02:	JR -23h
00005D04:	DEC DE
00005D05:	LD A,H
00005D06:	OR A
00005D07:	JR NZ,+31h
00005D09:	LD A,L
00005D0A:	POP HL
00005D0B:	PUSH DE
00005D0C:	PUSH BC
00005D0D:	PUSH HL
00005D0E:	LD DE,62FAh		; ZFAC1  - FP accumulator
00005D11:	PUSH DE
00005D12:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00005D15:	POP HL
00005D16:	LD B,A
00005D17:	INC B
00005D18:	JR +03h
00005D1A:	CALL 6142h			; MULTEN:
00005D1D:	DJNZ -05h
00005D1F:	EX DE,HL
00005D20:	POP HL
00005D21:	CALL 0000h
00005D24:	POP BC
00005D25:	POP DE
00005D26:	RET

; DIVTEN:
00005D27:	PUSH AF
00005D28:	PUSH BC
00005D29:	PUSH DE
00005D2A:	LD DE,6290h		; FLTEN
00005D2D:	CALL 70BDh		; DIV:
00005D30:	POP DE
00005D31:	POP BC
00005D32:	POP AF
00005D33:	RET

; ADDECK:
00005D34:	ADD HL,DE
00005D35:	RET NC
00005D36:	JR +02h

; ADHLCK:
00005D38:	ADD HL,HL
00005D39:	RET NC
00005D3A:	JP 6EE4h

; MULDEC:
00005D3D:	PUSH DE
00005D3E:	PUSH HL
00005D3F:	LD HL,62FAh		; ZFAC1  - FP accumulator
00005D42:	LD E,A
00005D43:	LD D,00h
00005D45:	CALL 2902h		; FLTHEX:  (HL)=DE
00005D48:	EX DE,HL
00005D49:	POP HL
00005D4A:	PUSH BC
00005D4B:	CALL 6CA6h		; ADD:
00005D4E:	POP BC
00005D4F:	POP DE
00005D50:	RET

; TSTNUM
00005D51:	LD A,(DE)
00005D52:	CP 20h
00005D54:	INC DE
00005D55:	JR Z,-06h
00005D57:	RET

00005D58:	LD A,(HL)
00005D59:	OR A
00005D5A:	JR Z,+06h
00005D5C:	INC HL
00005D5D:	LD A,(HL)
00005D5E:	RES 7,(HL)
00005D60:	DEC HL
00005D61:	RLCA
00005D62:	LD A,20h
00005D64:	JR NC,+02h
00005D66:	LD A,2Dh
00005D68:	PUSH AF
00005D69:	CALL 5E1Ah
00005D6C:	POP AF
00005D6D:	INC B
00005D6E:	DEC DE
00005D6F:	LD (DE),A
00005D70:	RET

00005D71:	LD BC,0000h
00005D74:	CALL 61D6h		; CMP:
00005D77:	JR NC,+06h
00005D79:	CALL 6142h		; MULTEN:
00005D7C:	DEC BC
00005D7D:	JR -0Bh

00005D7F:	PUSH HL
00005D80:	LD HL,FFF8h			; -8 (normal precision BASICs would have '-5')
00005D83:	ADD HL,DE
00005D84:	EX DE,HL
00005D85:	POP HL
00005D86:	CALL 61D6h		; CMP:
00005D89:	RET C
00005D8A:	CALL 5D27h		; DIVTEN:
00005D8D:	INC BC
00005D8E:	JR -0Ah
00005D90:	LD A,44h
00005D92:	BIT 3,(IY+00h)	; data type, aka PRCSON
00005D96:	JR NZ,+01h
00005D98:	INC A
00005D99:	LD (DE),A
00005D9A:	INC DE
00005D9B:	LD A,H
00005D9C:	OR A
00005D9D:	LD A,2Bh
00005D9F:	JR Z,+09h
00005DA1:	LD A,L
00005DA2:	CPL
00005DA3:	LD L,A
00005DA4:	LD A,H
00005DA5:	CPL
00005DA6:	LD H,A
00005DA7:	INC HL
00005DA8:	LD A,2Dh
00005DAA:	LD (DE),A
00005DAB:	INC DE
00005DAC:	PUSH DE
00005DAD:	LD DE,62F2h
00005DB0:	CALL 62A8h
00005DB3:	POP DE
00005DB4:	LD A,(62F5h)
00005DB7:	LD (DE),A
00005DB8:	INC DE
00005DB9:	LD A,(62F6h)
00005DBC:	LD (DE),A
00005DBD:	RET

00005DBE:	PUSH HL
00005DBF:	LD DE,62F2h
00005DC2:	PUSH DE
00005DC3:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00005DC6:	POP HL
00005DC7:	LD DE,6298h		; FLONE
00005DCA:	CALL 5D71h
00005DCD:	PUSH BC
00005DCE:	CALL 5E1Ah
00005DD1:	POP HL
00005DD2:	PUSH DE
00005DD3:	PUSH BC
00005DD4:	LD A,E
00005DD5:	ADD B
00005DD6:	LD E,A
00005DD7:	LD A,00h
00005DD9:	ADC D
00005DDA:	LD D,A
00005DDB:	DEC DE
00005DDC:	LD A,(DE)
00005DDD:	CP 30h
00005DDF:	INC DE
00005DE0:	JR NZ,+05h
00005DE2:	DEC DE
00005DE3:	POP BC
00005DE4:	DEC B
00005DE5:	PUSH BC
00005DE6:	INC HL
00005DE7:	CALL 5D90h
00005DEA:	POP BC
00005DEB:	POP DE
00005DEC:	INC B
00005DED:	INC B
00005DEE:	INC B
00005DEF:	INC B
00005DF0:	POP HL
00005DF1:	RET

; CVASF1:
00005DF2:	PUSH HL
00005DF3:	CALL 6167h		; HLFLT
00005DF6:	LD DE,6307h
00005DF9:	CALL 62A8h
00005DFC:	EX DE,HL
00005DFD:	LD B,05h
00005DFF:	LD A,(HL)
00005E00:	CP 30h
00005E02:	JR NZ,+03h
00005E04:	INC HL
00005E05:	DJNZ -08h
00005E07:	LD C,B
00005E08:	LD A,(HL)
00005E09:	INC IX
00005E0B:	LD (IX+00h),A
00005E0E:	INC HL
00005E0F:	DJNZ -09h
00005E11:	POP HL
00005E12:	CALL 6095h
00005E15:	LD DE,62A0h
00005E18:	JR +57h
00005E1A:	XOR A
00005E1B:	CP (HL)
00005E1C:	JP Z,5EB4h
00005E1F:	LD A,(IY+00h)	; data type, aka PRCSON
00005E22:	CP 08h			; double precision ?
00005E24:	JR Z,+0Bh
00005E26:	LD DE,62EEh
00005E29:	CALL 61D6h		; CMP:
00005E2C:	JP NC,5DBEh
00005E2F:	JR +09h
00005E31:	LD DE,62E6h
00005E34:	CALL 61D6h		; CMP:
00005E37:	JP NC,5DBEh
00005E3A:	LD DE,62A0h
00005E3D:	CALL 61D6h		; CMP:
00005E40:	JP C,5DBEh
00005E43:	PUSH HL
00005E44:	LD DE,62FAh		; ZFAC1  - FP accumulator
00005E47:	PUSH DE
00005E48:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00005E4B:	POP HL
00005E4C:	CALL 5FFAh
00005E4F:	LD IX,6304h
00005E53:	LD (IX+00h),30h
00005E57:	LD A,(HL)
00005E58:	CP 81h
00005E5A:	JR C,+1Eh
00005E5C:	CP 91h
00005E5E:	JP C,5DF2h
00005E61:	LD DE,6220h
00005E64:	CALL 5FECh
00005E67:	CALL 61D6h		; CMP:
00005E6A:	JR NC,+0Bh
00005E6C:	CALL 5B4Ah
00005E6F:	JR -0Ah
00005E71:	CALL 5FFAh
00005E74:	LD A,B
00005E75:	SUB C
00005E76:	LD B,A
00005E77:	CALL 5FC0h
00005E7A:	INC IX
00005E7C:	LD (IX+00h),2Eh
00005E80:	LD DE,6218h
00005E83:	CALL 5FECh
00005E86:	PUSH BC
00005E87:	PUSH IX
00005E89:	CALL 6FE0h		; MUL:
00005E8C:	POP IX
00005E8E:	POP BC
00005E8F:	CALL 5FBDh
00005E92:	LD A,B
00005E93:	OR A
00005E94:	JR NZ,-16h
00005E96:	CALL 5EBDh
00005E99:	DEC HL
00005E9A:	LD A,(HL)
00005E9B:	CP 2Eh		; '.'
00005E9D:	DEC HL
00005E9E:	JR Z,+05h
00005EA0:	INC HL
00005EA1:	CP 30h
00005EA3:	JR Z,-0Ch
00005EA5:	LD DE,6304h
00005EA8:	LD A,(DE)
00005EA9:	CP 30h
00005EAB:	JR NZ,+01h
00005EAD:	INC DE
00005EAE:	SBC HL,DE
00005EB0:	LD B,L
00005EB1:	INC B
00005EB2:	POP HL
00005EB3:	RET
00005EB4:	LD DE,6304h
00005EB7:	LD A,30h
00005EB9:	LD (DE),A
00005EBA:	LD B,01h
00005EBC:	RET
00005EBD:	PUSH IX
00005EBF:	POP HL
00005EC0:	LD A,(HL)
00005EC1:	PUSH HL
00005EC2:	LD (HL),30h
00005EC4:	CP 35h
00005EC6:	JR C,+0Ch
00005EC8:	DEC HL
00005EC9:	LD A,(HL)
00005ECA:	CP 2Eh		; '.'
00005ECC:	JR Z,-06h
00005ECE:	INC A
00005ECF:	LD (HL),A
00005ED0:	CP 3Ah
00005ED2:	JR Z,-12h
00005ED4:	POP HL
00005ED5:	RET

00005ED6:	PUSH BC
00005ED7:	CALL 5F4Ah
00005EDA:	POP BC
00005EDB:	LD A,B
00005EDC:	CP 02h
00005EDE:	RET C
00005EDF:	DEC B

00005EE0:	LD DE,7A4Fh
00005EE3:	INC DE
00005EE4:	LD A,(DE)
00005EE5:	CP 30h
00005EE7:	RET NZ
00005EE8:	LD A,20h
00005EEA:	LD (DE),A
00005EEB:	DJNZ -0Ah
00005EED:	RET

00005EEE:	PUSH BC
00005EEF:	LD A,B
00005EF0:	CP 11h
00005EF2:	JP NC,5FA6h
00005EF5:	OR A
00005EF6:	JR Z,+01h
00005EF8:	DEC A
00005EF9:	CALL 5FDDh
00005EFC:	LD A,(HL)
00005EFD:	OR A
00005EFE:	LD BC,0000h
00005F01:	CALL NZ,5D71h
00005F04:	LD E,C
00005F05:	LD D,B
00005F06:	POP BC
00005F07:	LD (5F2Dh),BC
00005F0B:	LD (5F30h),HL
00005F0E:	PUSH DE
00005F0F:	PUSH BC
00005F10:	LD DE,62F2h
00005F13:	PUSH DE
00005F14:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00005F17:	POP HL
00005F18:	POP BC
00005F19:	CALL 5F46h
00005F1C:	LD DE,7A4Fh
00005F1F:	LD A,(DE)
00005F20:	CP 2Fh
00005F22:	JR NZ,+06h
00005F24:	INC DE
00005F25:	LD A,(DE)
00005F26:	CP 31h
00005F28:	JR NZ,+0Dh
00005F2A:	POP DE
00005F2B:	INC DE
00005F2C:	LD BC,0000h
00005F2F:	LD HL,0000h
00005F32:	CALL 5D27h		; DIVTEN:
00005F35:	JR -29h
00005F37:	CP 2Eh		; '.'
00005F39:	JR Z,+03h
00005F3B:	LD A,20h
00005F3D:	LD (DE),A
00005F3E:	POP DE
00005F3F:	EX DE,HL
00005F40:	CALL 5D90h
00005F43:	INC DE
00005F44:	EX DE,HL
00005F45:	RET
00005F46:	LD A,2Fh
00005F48:	JR +05h
00005F4A:	OR A
00005F4B:	JR NZ,-5Fh
00005F4D:	LD A,30h
00005F4F:	LD IX,7A4Fh
00005F53:	LD (IX+00h),A
00005F56:	LD A,B
00005F57:	OR A
00005F58:	JR Z,+1Dh
00005F5A:	CP 11h
00005F5C:	JR C,+0Bh
00005F5E:	INC IX
00005F60:	LD (IX+00h),30h
00005F64:	DEC A
00005F65:	CP 10h
00005F67:	JR NZ,-0Bh
00005F69:	INC A
00005F6A:	CALL 5FDDh
00005F6D:	CALL 61D6h		; CMP:
00005F70:	JR NC,+34h
00005F72:	LD B,00h
00005F74:	CALL 5FBBh
00005F77:	CALL 61D3h		; ONECMP:
00005F7A:	JR NC,+2Ah
00005F7C:	LD A,C
00005F7D:	OR A
00005F7E:	JR Z,+2Bh
00005F80:	INC IX
00005F82:	LD (IX+00h),2Eh
00005F86:	LD B,C
00005F87:	PUSH BC
00005F88:	PUSH IX
00005F8A:	LD DE,6218h
00005F8D:	CALL 5FECh
00005F90:	CALL 6FE0h		; MUL:
00005F93:	POP IX
00005F95:	POP BC
00005F96:	CALL 5FBDh
00005F99:	LD A,B
00005F9A:	OR A
00005F9B:	JR NZ,-16h
00005F9D:	CALL 5EBDh
00005FA0:	LD A,(7A4Fh)
00005FA3:	CP 31h
00005FA5:	RET C
00005FA6:	LD A,15h
00005FA8:	JP 2196h		; error handling

00005FAB:	INC (HL)
00005FAC:	CALL 61D3h		; ONECMP:
00005FAF:	INC IX
00005FB1:	PUSH IX
00005FB3:	POP HL
00005FB4:	RET C
00005FB5:	LD (IX+00h),39h
00005FB9:	JR -1Eh
00005FBB:	DEC B
00005FBC:	RET Z
00005FBD:	CALL 5B4Ah

; GENDGT:
00005FC0:	LD A,(DE)
00005FC1:	CP 7Dh
00005FC3:	RET Z
00005FC4:	INC IX
00005FC6:	LD (IX+00h),30h
00005FCA:	CALL 61D6h		; CMP:
00005FCD:	JR C,-14h
00005FCF:	INC (IX+00h)
00005FD2:	PUSH IX
00005FD4:	PUSH BC
00005FD5:	CALL 6BD1h		; SUB:
00005FD8:	POP BC
00005FD9:	POP IX
00005FDB:	JR -13h

00005FDD:	ADD A
00005FDE:	ADD A
00005FDF:	ADD A
00005FE0:	LD B,A
00005FE1:	LD DE,62A0h
00005FE4:	LD A,E
00005FE5:	SUB B
00005FE6:	LD E,A
00005FE7:	LD A,D
00005FE8:	SBC 00h
00005FEA:	LD D,A
00005FEB:	RET

00005FEC:	LD A,(IY+00h)	; data type, aka PRCSON
00005FEF:	CP 08h			; double precision ?
00005FF1:	RET Z
00005FF2:	PUSH HL
00005FF3:	LD HL,0048h
00005FF6:	ADD HL,DE
00005FF7:	EX DE,HL
00005FF8:	POP HL
00005FF9:	RET

00005FFA:	LD A,(IY+00h)	; data type, aka PRCSON
00005FFD:	LD B,11h
00005FFF:	CP 08h
00006001:	RET Z
00006002:	LD B,07h
00006004:	RET

00006005:	LD B,(IY+00h)	; data type, aka PRCSON
00006008:	EX DE,HL
00006009:	CALL 6210h
0000600C:	POP DE
0000600D:	POP HL
0000600E:	POP BC
0000600F:	RET

; 'FIX'
00006010:	PUSH BC
00006011:	PUSH HL
00006012:	PUSH DE
00006013:	LD A,(HL)
00006014:	CP 81h
00006016:	JR C,-13h
00006018:	BIT 3,(IY+00h)	; data type, aka PRCSON
0000601C:	JR NZ,+24h
0000601E:	CP 98h			; Token code for 'ON'
00006020:	JR NC,-16h
00006022:	INC HL
00006023:	CALL 608Eh
00006026:	DEC HL
00006027:	LD B,00h
00006029:	SRL E
0000602B:	RR D
0000602D:	RR C
0000602F:	INC A
00006030:	INC B
00006031:	CP 98h			; Token code for 'ON'
00006033:	JR NZ,-0Ch
00006035:	SLA C
00006037:	RL D
00006039:	RL E
0000603B:	DJNZ -08h
0000603D:	CALL 6088h
00006040:	JR -36h
00006042:	CP B8h			; Token code for 'ELSE'
00006044:	JR NC,-3Ah
00006046:	INC HL
00006047:	CALL 608Eh
0000604A:	PUSH HL
0000604B:	EXX
0000604C:	POP HL
0000604D:	CALL 608Eh
00006050:	LD B,(HL)
00006051:	EXX
00006052:	LD B,00h
00006054:	SRL E
00006056:	RR D
00006058:	RR C
0000605A:	EXX
0000605B:	RR E
0000605D:	RR D
0000605F:	RR C
00006061:	RR B
00006063:	EXX
00006064:	INC B
00006065:	INC A
00006066:	CP B8h
00006068:	JR NZ,-16h
0000606A:	EXX
0000606B:	SLA B
0000606D:	RL C
0000606F:	RL D
00006071:	RL E
00006073:	EXX
00006074:	RL C
00006076:	RL D
00006078:	RL E
0000607A:	DJNZ -12h
0000607C:	EXX
0000607D:	LD (HL),B
0000607E:	DEC HL
0000607F:	CALL 6088h
00006082:	DEC HL
00006083:	PUSH HL
00006084:	EXX
00006085:	POP HL
00006086:	JR -4Bh
00006088:	LD (HL),C
00006089:	DEC HL
0000608A:	LD (HL),D
0000608B:	DEC HL
0000608C:	LD (HL),E
0000608D:	RET

0000608E:	LD E,(HL)
0000608F:	INC HL
00006090:	LD D,(HL)
00006091:	INC HL
00006092:	LD C,(HL)
00006093:	INC HL
00006094:	RET

00006095:	LD A,(HL)
00006096:	OR A
00006097:	RET Z
00006098:	INC HL
00006099:	LD A,(HL)
0000609A:	SET 7,(HL)
0000609C:	DEC HL
0000609D:	PUSH AF
0000609E:	CALL 60A7h
000060A1:	POP AF
000060A2:	RLCA
000060A3:	RET C
000060A4:	JP 6BC0h		; 'ABS'

000060A7:	PUSH BC
000060A8:	PUSH HL
000060A9:	PUSH DE
000060AA:	LD A,(HL)
000060AB:	CP 81h
000060AD:	JP C,600Ch
000060B0:	BIT 3,(IY+00h)	; data type, aka PRCSON
000060B4:	JR NZ,+31h
000060B6:	CP 98h			; Token code for 'ON'
000060B8:	JP NC,6005h
000060BB:	INC HL
000060BC:	CALL 608Eh
000060BF:	DEC HL
000060C0:	SLA C
000060C2:	RL D
000060C4:	RL E
000060C6:	DEC A
000060C7:	CP 80h
000060C9:	JR NZ,-0Bh
000060CB:	EX AF,AF'
000060CC:	LD A,E
000060CD:	OR D
000060CE:	OR C
000060CF:	JR Z,+0Eh
000060D1:	EX AF,AF'
000060D2:	BIT 7,E
000060D4:	JR NZ,+09h
000060D6:	SLA C
000060D8:	RL D
000060DA:	RL E
000060DC:	DEC A
000060DD:	JR -0Dh
000060DF:	CALL 6088h
000060E2:	DEC HL
000060E3:	LD (HL),A
000060E4:	JP 600Ch

000060E7:	CP B8h			; Token code for 'ELSE'
000060E9:	JP NC,6005h
000060EC:	INC HL
000060ED:	CALL 608Eh
000060F0:	PUSH HL
000060F1:	EXX
000060F2:	POP HL
000060F3:	CALL 608Eh
000060F6:	LD B,(HL)
000060F7:	SLA B
000060F9:	RL C
000060FB:	RL D
000060FD:	RL E
000060FF:	EXX
00006100:	RL C
00006102:	RL D
00006104:	RL E
00006106:	EXX
00006107:	DEC A
00006108:	CP 80h
0000610A:	JR NZ,-15h
0000610C:	EX AF,AF'
0000610D:	LD A,B
0000610E:	OR C
0000610F:	OR D
00006110:	OR E
00006111:	EXX
00006112:	OR C
00006113:	OR D
00006114:	OR E
00006115:	EXX
00006116:	JR Z,+19h
00006118:	EX AF,AF'
00006119:	EXX
0000611A:	BIT 7,E
0000611C:	EXX
0000611D:	JR NZ,+12h
0000611F:	SLA B
00006121:	RL C
00006123:	RL D
00006125:	RL E
00006127:	EXX
00006128:	RL C
0000612A:	RL D
0000612C:	RL E
0000612E:	DEC A
0000612F:	JR -17h
00006131:	LD (HL),B
00006132:	DEC HL
00006133:	CALL 6088h
00006136:	DEC HL
00006137:	PUSH HL
00006138:	EXX
00006139:	POP HL
0000613A:	CALL 6088h
0000613D:	DEC HL
0000613E:	LD (HL),A
0000613F:	JP 600Ch

; MULTEN:
00006142:	PUSH AF
00006143:	PUSH BC
00006144:	PUSH DE
00006145:	LD DE,6290h		; FLTEN
00006148:	CALL 6FE0h		; MUL:
0000614B:	POP DE
0000614C:	POP BC
0000614D:	POP AF
0000614E:	RET

0000614F:	PUSH HL
00006150:	PUSH DE
00006151:	CALL 70BDh		; DIV:
00006154:	CALL 6095h
00006157:	CALL 6FE0h		; MUL:
0000615A:	POP DE
0000615B:	POP HL
0000615C:	RET

0000615D:	LD A,(HL)
0000615E:	CP 91h			; Token code for 'DIM'
00006160:	JR C,+05h
00006162:	CCF
00006163:	LD HL,0000h
00006166:	RET

; HLFLT
00006167:	INC HL
00006168:	BIT 7,(HL)
0000616A:	JR Z,+0Bh
0000616C:	CALL 6177h
0000616F:	LD A,H
00006170:	CPL
00006171:	LD H,A
00006172:	LD A,L
00006173:	CPL
00006174:	LD L,A
00006175:	INC HL
00006176:	RET

00006177:	DEC HL
00006178:	LD A,(HL)
00006179:	CP 91h
0000617B:	JP NC,6EE4h
0000617E:	CP 81h
00006180:	JR C,-20h
00006182:	PUSH AF
00006183:	INC HL
00006184:	LD A,(HL)
00006185:	INC HL
00006186:	LD L,(HL)
00006187:	LD H,A
00006188:	POP AF
00006189:	SET 7,H
0000618B:	CP 90h			; Token code for 'READ'
0000618D:	RET Z
0000618E:	INC A
0000618F:	SRL H
00006191:	RR L
00006193:	JR -0Ah
00006195:	LD (IY+00h),04h	; data type, aka PRCSON, single precision
00006199:	CALL 6BF6h		; Load a string parameter
0000619C:	EX DE,HL
0000619D:	CALL 6BF6h		; Load a string parameter
000061A0:	EX DE,HL
000061A1:	LD E,(HL)
000061A2:	INC HL
000061A3:	LD D,(HL)
000061A4:	POP HL
000061A5:	PUSH HL
000061A6:	LD A,(HL)
000061A7:	INC HL
000061A8:	LD H,(HL)
000061A9:	LD L,A
000061AA:	EX DE,HL
000061AB:	PUSH HL
000061AC:	PUSH DE
000061AD:	LD A,(DE)
000061AE:	CP (HL)
000061AF:	JR C,+01h
000061B1:	LD A,(HL)
000061B2:	LD B,A
000061B3:	OR A
000061B4:	JR Z,+13h
000061B6:	INC HL
000061B7:	INC DE
000061B8:	PUSH DE
000061B9:	LD E,(HL)
000061BA:	INC HL
000061BB:	LD D,(HL)
000061BC:	POP HL
000061BD:	LD A,(HL)
000061BE:	INC HL
000061BF:	LD H,(HL)
000061C0:	LD L,A
000061C1:	LD A,(DE)
000061C2:	CP (HL)
000061C3:	INC HL
000061C4:	INC DE
000061C5:	JR NZ,+08h
000061C7:	DJNZ -08h
000061C9:	POP HL
000061CA:	POP DE
000061CB:	LD A,(DE)
000061CC:	CP (HL)
000061CD:	JR +2Bh
000061CF:	POP HL
000061D0:	POP DE
000061D1:	JR +27h

; ONECMP:
000061D3:	LD DE,6298h		; FLONE

; CMP:
000061D6:	PUSH BC
000061D7:	PUSH HL
000061D8:	PUSH DE
000061D9:	LD A,(IY+00h)	; data type, aka PRCSON
000061DC:	CP 03h			; string type ?
000061DE:	JR Z,-4Bh
000061E0:	INC HL
000061E1:	INC DE
000061E2:	BIT 7,(HL)
000061E4:	JR NZ,+18h
000061E6:	LD A,(DE)
000061E7:	RLCA
000061E8:	JR C,+22h
000061EA:	DEC HL
000061EB:	DEC DE
000061EC:	LD C,00h
000061EE:	LD B,(IY+00h)	; data type, aka PRCSON
000061F1:	EX DE,HL
000061F2:	LD A,(DE)
000061F3:	CP (HL)
000061F4:	JR NZ,+04h
000061F6:	INC HL
000061F7:	INC DE
000061F8:	DJNZ -08h
000061FA:	POP DE
000061FB:	POP HL
000061FC:	POP BC
000061FD:	RET

000061FE:	LD A,(DE)
000061FF:	RLCA
00006200:	JR NC,+05h
00006202:	DEC HL
00006203:	DEC DE
00006204:	EX DE,HL
00006205:	JR -1Bh
00006207:	XOR A
00006208:	INC A
00006209:	SCF
0000620A:	JR -12h
0000620C:	XOR A
0000620D:	INC A
0000620E:	JR -16h
00006210:	XOR A
00006211:	PUSH DE
00006212:	LD (DE),A
00006213:	INC DE
00006214:	DJNZ -04h
00006216:	POP DE
00006217:	RET

00006218:	OR (HL)
00006219:	LD C,1Bh
0000621B:	RET
0000621C:	CP A
0000621D:	INC B
0000621E:	NOP
0000621F:	NOP
00006220:	OR D
00006221:	LD H,E
00006222:	LD E,A
00006223:	XOR C
00006224:	LD SP,00A0h
00006227:	NOP
00006228:	XOR A
00006229:	DEC (HL)
0000622A:	AND 20h
0000622C:	CALL P,0080h	; FSAVE
0000622F:	NOP
00006230:	XOR H
00006231:	LD DE,E784h
00006234:	LD HL,(0000h)
00006237:	NOP
00006238:	XOR B
00006239:	LD L,B
0000623A:	CALL NC,10A5h
0000623D:	NOP
0000623E:	NOP
0000623F:	NOP
00006240:	AND L
00006241:	LD A,(B743h)
00006244:	LD B,B
00006245:	NOP
00006246:	NOP
00006247:	NOP
00006248:	AND D
00006249:	DEC D
0000624A:	LD (BC),A
0000624B:	LD SP,HL
0000624C:	NOP
0000624D:	NOP
0000624E:	NOP
0000624F:	NOP
00006250:	SBC (HL)
00006251:	LD L,(HL)
00006252:	LD L,E
00006253:	JR Z,+00h
00006255:	NOP
00006256:	NOP
00006257:	NOP
00006258:	SBC E
00006259:	LD A,BCh
0000625B:	JR NZ,+00h
0000625D:	NOP
0000625E:	NOP
0000625F:	NOP
00006260:	SBC B
00006261:	JR -6Ah
00006263:	ADD B
00006264:	NOP
00006265:	NOP
00006266:	NOP
00006267:	NOP
00006268:	SUB H
00006269:	LD (HL),H
0000626A:	INC H
0000626B:	NOP
0000626C:	NOP
0000626D:	NOP
0000626E:	NOP
0000626F:	NOP
00006270:	SUB C
00006271:	LD B,E
00006272:	LD D,B
00006273:	NOP
00006274:	NOP
00006275:	NOP
00006276:	NOP
00006277:	NOP
00006278:	ADC (HL)
00006279:	INC E
0000627A:	LD B,B
0000627B:	NOP
0000627C:	NOP
0000627D:	NOP
0000627E:	NOP
0000627F:	NOP
00006280:	ADC D
00006281:	LD A,D
00006282:	NOP
00006283:	NOP
00006284:	NOP
00006285:	NOP
00006286:	NOP
00006287:	NOP
00006288:	ADD A
00006289:	LD C,B
0000628A:	NOP
0000628B:	NOP
0000628C:	NOP
0000628D:	NOP
0000628E:	NOP
0000628F:	NOP
; FLTEN
00006290:	ADD H
00006291:	JR NZ,+00h
00006293:	NOP
00006294:	NOP
00006295:	NOP
00006296:	NOP
00006297:	NOP
; FLONE
00006298:	ADD C
00006299:	NOP
0000629A:	NOP
0000629B:	NOP
0000629C:	NOP
0000629D:	NOP
0000629E:	NOP
0000629F:	NOP
000062A0:	LD A,L
000062A1:	LD C,H
000062A2:	CALL Z,CCCCh
000062A5:	CALL Z,CDCCh
000062A8:	PUSH HL
000062A9:	PUSH DE
000062AA:	PUSH BC
000062AB:	LD C,00h
000062AD:	PUSH DE
000062AE:	LD B,00h
000062B0:	LD DE,2710h
000062B3:	CALL 62D1h
000062B6:	LD DE,03E8h
000062B9:	CALL 62D1h
000062BC:	LD DE,0064h
000062BF:	CALL 62D1h
000062C2:	LD DE,000Ah
000062C5:	CALL 62D1h
000062C8:	LD A,L
000062C9:	POP DE
000062CA:	OR 30h
000062CC:	LD (DE),A
000062CD:	POP BC
000062CE:	POP DE
000062CF:	POP HL
000062D0:	RET
000062D1:	LD A,FFh
000062D3:	INC A
000062D4:	OR A
000062D5:	SBC HL,DE
000062D7:	JR NC,-06h
000062D9:	ADD HL,DE
000062DA:	OR A
000062DB:	INC B
000062DC:	OR 30h
000062DE:	POP DE
000062DF:	EX HL,(SP)
000062E0:	LD (HL),A
000062E1:	INC HL
000062E2:	EX HL,(SP)
000062E3:	PUSH DE
000062E4:	INC C
000062E5:	RET

000062E6:	OR (HL)
000062E7:	LD C,1Bh
000062E9:	RET

000062EA:	CP A
000062EB:	INC BC
000062EC:	RST 38h
000062ED:	CP 94h
000062EF:	LD (HL),H
000062F0:	INC HL
000062F1:	RET M
000062F2:	NOP
000062F3:	NOP
000062F4:	NOP
000062F5:	NOP
000062F6:	NOP
000062F7:	NOP
000062F8:	NOP
000062F9:	NOP
; ZFAC1  - FP accumulator
000062FA:	NOP
000062FB:	NOP
000062FC:	NOP
000062FD:	NOP
000062FE:	NOP
000062FF:	NOP
00006300:	NOP
00006301:	NOP

00006302:	NOP
00006303:	NOP
00006304:	NOP
00006305:	NOP
00006306:	NOP
00006307:	NOP
00006308:	NOP
00006309:	NOP
0000630A:	NOP
0000630B:	NOP
0000630C:	NOP
0000630D:	NOP
0000630E:	NOP
0000630F:	NOP
00006310:	NOP
00006311:	NOP
00006312:	NOP
00006313:	NOP
00006314:	NOP
00006315:	NOP
00006316:	NOP
00006317:	NOP
00006318:	NOP
00006319:	NOP
0000631A:	NOP

; TOUPPER (DE)
0000631B:	LD A,(DE)
; TOUPPER
0000631C:	CP 61h
0000631E:	RET C
0000631F:	CP 7Bh
00006321:	RET NC
00006322:	SUB 20h
00006324:	RET

; CVIMTX: convert immediate buffer for direct execution
00006325:	PUSH BC
00006326:	PUSH DE
; parser
00006327:	CALL 64ADh	; pick next byte from line
0000632A:	OR A
0000632B:	JR Z,+2Fh
0000632D:	INC DE
0000632E:	CP 80h
00006330:	JR NC,-0Bh
00006332:	CP 20h
00006334:	JR C,-0Fh
00006336:	DEC DE
00006337:	CP 3Fh		; '?'
00006339:	JR Z,+1Ah
0000633B:	CP 22h
0000633D:	JR Z,+21h
0000633F:	CP 27h
00006341:	JR Z,+24h
00006343:	CP 2Eh		; '.'
00006345:	JR Z,+09h
00006347:	CP 26h
00006349:	JR Z,+05h
0000634B:	CALL 652Eh
0000634E:	JR C,+45h
00006350:	CALL 64B6h
00006353:	JR -2Eh
00006355:	LD (HL),8Ch
00006357:	INC HL
00006358:	INC DE
00006359:	JR -34h
0000635B:	EX DE,HL
0000635C:	LD (HL),A
0000635D:	POP DE
0000635E:	POP BC
0000635F:	RET

00006360:	CALL 649Dh
00006363:	JR Z,-09h
00006365:	JR -40h
00006367:	LD (HL),3Ah
00006369:	INC HL
0000636A:	LD (HL),A
0000636B:	INC DE
0000636C:	INC HL
0000636D:	LD A,(DE)
0000636E:	OR A
0000636F:	JR NZ,-07h
00006371:	JP 6327h

00006374:	INC HL
00006375:	CALL 631Bh		; TOUPPER (DE)
00006378:	LD (HL),A
00006379:	INC DE
0000637A:	CP 41h
0000637C:	JR C,+14h
0000637E:	CP 5Bh			; '['  (some BASIC subtracts "A" and checks for 26)
00006380:	JR NC,+10h
00006382:	CALL 631Bh		; TOUPPER (DE)
00006385:	CP 30h
00006387:	JR C,+09h
00006389:	CP 3Ah
0000638B:	JR NC,+05h
0000638D:	INC HL
0000638E:	LD (HL),A
0000638F:	INC DE
00006390:	JR -10h
00006392:	INC HL
00006393:	JR -24h

00006395:	LD BC,6737h		; TOKEN table
00006398:	CALL 6461h		; IMSER: search in Token Table
0000639B:	JR NC,+21h		; ..to 63be

0000639D:	LD BC,68D3h		; TOKEN table for functions
000063A0:	CALL 6461h		; IMSER: search in Token Table
000063A3:	JR C,-30h

000063A5:	DEC HL
000063A6:	LD A,(HL)
000063A7:	LD (HL),FFh
000063A9:	INC HL
000063AA:	LD (HL),A
000063AB:	CP C0h
000063AD:	JR NZ,-1Dh
000063AF:	INC HL
000063B0:	CALL 64ADh		; IMSPACE: check for required SPACE and pick next byte from line
000063B3:	CP 3Dh			;'='
000063B5:	JP NZ,6371h
000063B8:	LD (HL),F5h		; Token for '='
000063BA:	INC HL
000063BB:	INC DE
000063BC:	JR +25h


; BASIC CMD found in token table..
000063BE:	LD A,B
000063BF:	CP 92h		; Token code for 'REM'
000063C1:	JR Z,-56h
000063C3:	CP 8Fh		; Token code for 'DATA'
000063C5:	JP Z,643Ch
000063C8:	CP B8h		; Token code for 'ELSE'
000063CA:	JR Z,+68h
000063CC:	CP E1h		; Token code for 'THEN'
000063CE:	JR Z,+13h
000063D0:	CP B6h		; Token code for 'RESUME'
000063D2:	JR Z,+0Fh
000063D4:	CP 93h		; Token code for 'EDIT'
000063D6:	JR Z,+3Ah
000063D8:	CP 8Ah		; Token code < 'FOR' ?
000063DA:	JP NC,6371h
000063DD:	CP 86h		; Token code for 'LIST'
000063DF:	JR Z,+74h
000063E1:	JR NC,+2Fh
000063E3:	CALL 64ADh	; IMSPACE: check for required SPACE and pick next byte from line
000063E6:	CP 2Ch		; ','
000063E8:	JR Z,+0Dh
000063EA:	CALL 652Eh
000063ED:	JR C,+0Dh
000063EF:	CALL 30BDh
000063F2:	CALL 650Ch
000063F5:	JR -14h
000063F7:	LD (HL),A
000063F8:	INC HL
000063F9:	INC DE
000063FA:	JR -19h
000063FC:	CP 3Ah		; ':'
000063FE:	JP Z,6371h
00006401:	OR A		; \0  (end of BASIC line)
00006402:	JP Z,6371h
00006405:	CP 22h		; '"'
00006407:	JP NZ,6371h
0000640A:	CALL 649Dh
0000640D:	JP Z,635Ch
00006410:	JR -2Fh
00006412:	CALL 64ADh	; IMSPACE: check for required SPACE and pick next byte from line
00006415:	CP 2Eh		; '.'
00006417:	JR Z,+16h

00006419:	CP 2Dh		; '-'
0000641B:	JR Z,+12h
0000641D:	CP 2Ch		; ','
0000641F:	JR Z,+0Eh
00006421:	CALL 652Eh
00006424:	JP C,6371h
00006427:	CALL 30BDh
0000642A:	CALL 650Ch
0000642D:	JR -1Dh

0000642F:	LD (HL),A
00006430:	INC HL
00006431:	INC DE
00006432:	JR -22h

; 'CALL'
00006434:	DEC HL
00006435:	LD (HL),3Ah
00006437:	INC HL
00006438:	LD (HL),A
00006439:	INC HL
0000643A:	JR -59h

0000643C:	LD A,(DE)
0000643D:	OR A
0000643E:	JP Z,635Ch
00006441:	LD (HL),A
00006442:	INC HL
00006443:	INC DE
00006444:	CP 3Ah
00006446:	JP Z,6327h
00006449:	CP 22h
0000644B:	JR NZ,-11h
0000644D:	CALL 64A0h
00006450:	JP Z,635Ch
00006453:	JR -19h
; .. 'LIST' token found
00006455:	LD A,(DE)
00006456:	CP 23h
00006458:	JR NZ,-48h
0000645A:	DEC HL
0000645B:	INC (HL)
0000645C:	INC HL
0000645D:	INC DE
0000645E:	INC DE
0000645F:	JR -4Fh

; IMSER: search in Token Table
; Encode Token, BC=table, A=code
00006461:	PUSH HL
00006462:	PUSH DE
00006463:	LD L,C
00006464:	LD H,B		; HL = token table address
00006465:	LD B,80h
00006467:	POP DE
00006468:	PUSH DE
00006469:	INC B
0000646A:	LD A,(HL)
0000646B:	INC A
0000646C:	JR Z,+1Eh
0000646E:	CALL 631Bh		; TOUPPER (DE)
00006471:	LD C,(HL)
00006472:	INC HL
00006473:	INC DE
00006474:	CP 2Eh		; '.'
00006476:	JR Z,+18h
00006478:	SUB C
00006479:	JR Z,-0Dh
0000647B:	CP 80h
0000647D:	JR Z,+08h
0000647F:	DEC HL
00006480:	LD A,(HL)
00006481:	RLCA
00006482:	INC HL
00006483:	JR NC,-05h
00006485:	JR -20h
00006487:	POP HL
00006488:	POP HL
00006489:	LD (HL),B
0000648A:	INC HL
0000648B:	RET

0000648C:	POP DE
0000648D:	POP HL
0000648E:	SCF
0000648F:	RET

00006490:	EX AF,AF'
00006491:	LD A,B
00006492:	CP EEh
00006494:	JR NC,+03h
00006496:	EX AF,AF'
00006497:	JR -12h
00006499:	EX AF,AF'
0000649A:	DEC HL
0000649B:	JR -1Dh
0000649D:	LD (HL),A
0000649E:	INC DE
0000649F:	INC HL
000064A0:	LD A,(DE)
000064A1:	OR A
000064A2:	RET Z
000064A3:	CP 22h
000064A5:	JR NZ,-0Ah
000064A7:	LD (HL),A
000064A8:	INC DE
000064A9:	INC HL
000064AA:	INC A
000064AB:	DEC A
000064AC:	RET

; IMSPACE: check for required SPACE and pick next byte from line
000064AD:	LD A,(DE)
000064AE:	CP 20h
000064B0:	RET NZ
000064B1:	LD (HL),A
000064B2:	INC DE
000064B3:	INC HL
000064B4:	JR -09h

000064B6:	LD A,(DE)
000064B7:	CP 26h
000064B9:	PUSH HL
000064BA:	INC HL
000064BB:	JR NZ,+23h
000064BD:	PUSH DE
000064BE:	INC DE
000064BF:	CALL 5D51h			; TSTNUM
000064C2:	CALL 631Ch			; TOUPPER
000064C5:	POP DE
000064C6:	PUSH AF
000064C7:	CALL 5BB8h	; ....get number
000064CA:	CALL 615Dh
000064CD:	POP AF
000064CE:	CP 48h	; 'H' (hex)
000064D0:	LD A,11h
000064D2:	JR Z,+01h
000064D4:	DEC A
000064D5:	LD C,L
000064D6:	LD B,H
000064D7:	POP HL
000064D8:	LD (HL),A
000064D9:	INC HL
000064DA:	LD (HL),C
000064DB:	INC HL
000064DC:	LD (HL),B
000064DD:	INC HL
000064DE:	JR +24h

000064E0:	CALL 5BB8h	; ....get number
000064E3:	BIT 7,(IY-01h)
000064E7:	JR NZ,+32h
000064E9:	LD A,(HL)
000064EA:	CP 90h
000064EC:	JR NC,+2Dh
000064EE:	CALL 615Dh
000064F1:	PUSH DE
000064F2:	EX DE,HL
000064F3:	LD HL,0009h
000064F6:	OR A
000064F7:	SBC HL,DE
000064F9:	EX DE,HL
000064FA:	POP DE
000064FB:	LD A,12h
000064FD:	JR C,+11h
000064FF:	LD A,L
00006500:	INC A
00006501:	POP HL
00006502:	LD (HL),A
00006503:	INC HL
00006504:	DEC DE
00006505:	LD A,(DE)
00006506:	CP 20h
00006508:	JR Z,-06h
0000650A:	INC DE
0000650B:	RET
0000650C:	LD A,0Bh
0000650E:	JR +03h
00006510:	LD C,L
00006511:	LD B,H
00006512:	POP HL
00006513:	LD (HL),A
00006514:	INC HL
00006515:	LD (HL),C
00006516:	INC HL
00006517:	LD (HL),B
00006518:	INC HL
00006519:	JR -17h
0000651B:	LD A,(IY+00h)	; data type, aka PRCSON
0000651E:	AND 0Fh
00006520:	OR 10h
00006522:	POP HL
00006523:	LD (HL),A
00006524:	INC HL
00006525:	LD C,(IY+00h)	; data type, aka PRCSON
00006528:	LD B,00h
0000652A:	ADD HL,BC
0000652B:	JR -29h
0000652D:	LD A,(DE)
0000652E:	CP 30h
00006530:	RET C
00006531:	CP 3Ah
00006533:	CCF
00006534:	RET

00006535:	LD (DE),A
00006536:	POP BC
00006537:	POP DE
00006538:	POP HL
00006539:	RET

0000653A:	PUSH HL
0000653B:	PUSH DE
0000653C:	PUSH BC
0000653D:	LD (654Ah),DE
00006541:	PUSH HL
00006542:	PUSH DE
00006543:	EX DE,HL
00006544:	DEC H
00006545:	LD DE,001Ah
00006548:	ADD HL,DE
00006549:	LD DE,0000h
0000654C:	XOR A
0000654D:	SBC HL,DE
0000654F:	POP DE
00006550:	POP HL
00006551:	JP NC,6535h
00006554:	LD A,(HL)
00006555:	OR A
00006556:	JP Z,6535h
00006559:	CP 81h
0000655B:	JR NC,+13h
0000655D:	CP 20h
0000655F:	JR C,+32h
00006561:	CP 22h
00006563:	JP Z,665Dh
00006566:	CP 3Ah
00006568:	JP Z,6674h
0000656B:	LD (DE),A
0000656C:	INC DE
0000656D:	INC HL
0000656E:	JR -2Fh
00006570:	CP FFh
00006572:	JR Z,+15h

00006574:	LD BC,6737h		; TOKEN table
00006577:	PUSH AF
00006578:	CALL 6684h
0000657B:	POP AF
0000657C:	INC HL
0000657D:	CP 92h			; Token code for 'REM'
0000657F:	JP Z,6670h
00006582:	CP 8Fh			; Token code for 'DATA'
;
00006584:	JP Z,663Dh
00006587:	JR -48h

00006589:	INC HL
0000658A:	LD A,(HL)
0000658B:	LD BC,68D3h		; TOKEN table for functions
0000658E:	CALL 6684h
00006591:	JR -26h

00006593:	CP 10h
00006595:	JR NC,+41h
00006597:	CP 0Bh
00006599:	JR NC,+05h
0000659B:	DEC A
0000659C:	OR 30h
0000659E:	JR -35h
000065A0:	CP 0Ch
000065A2:	JP Z,662Dh
000065A5:	PUSH DE
000065A6:	INC HL
000065A7:	LD E,(HL)
000065A8:	INC HL
000065A9:	LD D,(HL)
000065AA:	INC HL
000065AB:	PUSH HL
000065AC:	CP 10h
000065AE:	JR C,+05h
000065B0:	CP 12h
000065B2:	JP C,66AEh
000065B5:	EX DE,HL
000065B6:	LD DE,69ABh
000065B9:	CALL 62A8h
000065BC:	XOR A
000065BD:	LD (69B0h),A
000065C0:	LD B,04h
000065C2:	LD A,(DE)
000065C3:	CP 30h
000065C5:	JR NZ,+03h
000065C7:	INC DE
000065C8:	DJNZ -08h
000065CA:	LD C,E
000065CB:	LD B,D
000065CC:	POP HL
000065CD:	POP DE
000065CE:	LD A,(BC)
000065CF:	OR A
000065D0:	JP Z,6541h
000065D3:	LD (DE),A
000065D4:	INC DE
000065D5:	INC BC
000065D6:	JR -0Ah
000065D8:	CP 13h
000065DA:	JR C,-37h
000065DC:	AND 0Fh
000065DE:	LD (IY+00h),A	; data type, aka PRCSON
000065E1:	INC HL
000065E2:	PUSH HL
000065E3:	PUSH DE
000065E4:	CALL 5E1Ah
000065E7:	EX DE,HL
000065E8:	POP DE
000065E9:	LD A,(HL)
000065EA:	LD (DE),A
000065EB:	CP 2Eh		; '.'
000065ED:	JR Z,+29h
000065EF:	CP 45h
000065F1:	JR Z,+25h
000065F3:	CP 44h
000065F5:	JR Z,+30h
000065F7:	INC HL
000065F8:	INC DE
000065F9:	DJNZ -12h
000065FB:	LD A,(IY+00h)	; data type, aka PRCSON
000065FE:	CP 08h			; double precision ?
00006600:	LD A,21h
00006602:	JR NZ,+02h
00006604:	LD A,23h
00006606:	LD (DE),A
00006607:	INC DE
00006608:	LD C,(IY+00h)	; data type, aka PRCSON
0000660B:	LD B,00h
0000660D:	POP HL
0000660E:	ADD HL,BC
0000660F:	JP 6541h
00006612:	LD A,(HL)
00006613:	LD (DE),A
00006614:	CP 44h
00006616:	JR Z,+0Fh
00006618:	INC HL
00006619:	INC DE
0000661A:	DJNZ -0Ah
0000661C:	LD A,(IY+00h)	; data type, aka PRCSON
0000661F:	CP 08h			; double precision ?
00006621:	JR Z,-1Fh
00006623:	JR -1Dh
00006625:	LD A,(HL)
00006626:	LD (DE),A
00006627:	INC HL
00006628:	INC DE
00006629:	DJNZ -06h
0000662B:	JR -25h
0000662D:	PUSH DE
0000662E:	INC HL
0000662F:	LD E,(HL)
00006630:	INC HL
00006631:	LD D,(HL)
00006632:	INC HL
00006633:	PUSH HL
00006634:	EX DE,HL
00006635:	INC HL
00006636:	INC HL
00006637:	LD E,(HL)
00006638:	INC HL
00006639:	LD D,(HL)
0000663A:	JP 65B5h

0000663D:	LD A,(HL)
0000663E:	CP 22h
00006640:	JR Z,+0Eh
00006642:	LD (DE),A
00006643:	CP 3Ah
00006645:	INC HL
00006646:	INC DE
00006647:	JP Z,6541h
0000664A:	OR A
0000664B:	JP Z,6535h
0000664E:	JR -13h
00006650:	LD (DE),A
00006651:	INC HL
00006652:	INC DE
00006653:	LD A,(HL)
00006654:	CP 22h
00006656:	JR Z,-16h
00006658:	OR A
00006659:	JR Z,-19h
0000665B:	JR -0Dh
0000665D:	LD B,22h
0000665F:	LD (DE),A
00006660:	INC HL
00006661:	INC DE
00006662:	LD A,(HL)
00006663:	LD (DE),A
00006664:	OR A
00006665:	JP Z,6535h
00006668:	CP B
00006669:	INC HL
0000666A:	INC DE
0000666B:	JP Z,6541h
0000666E:	JR -0Eh
00006670:	LD B,00h
00006672:	JR -12h
00006674:	LD (DE),A
00006675:	INC HL
00006676:	LD A,(HL)
00006677:	CP 27h
00006679:	JR Z,-0Bh
0000667B:	CP B8h			; Token code for 'ELSE'
0000667D:	JP Z,6541h
00006680:	INC DE
00006681:	JP 6541h

00006684:	DEC A
00006685:	CP 80h
00006687:	JR Z,+0Bh
00006689:	EX AF,AF'
0000668A:	LD A,(BC)
0000668B:	RLCA
0000668C:	INC BC
0000668D:	JP NC,668Ah
00006690:	EX AF,AF'
00006691:	JP 6684h
00006694:	LD A,(BC)
00006695:	PUSH AF
00006696:	AND 7Fh
00006698:	LD (DE),A
00006699:	POP AF
0000669A:	INC DE
0000669B:	INC BC
0000669C:	RLCA
0000669D:	JR NC,-0Bh
0000669F:	RET
000066A0:	LD A,4Fh
000066A2:	EX AF,AF'
000066A3:	EX DE,HL
000066A4:	LD DE,69ABh
000066A7:	CALL 66DBh
000066AA:	LD B,05h
000066AC:	JR +10h
000066AE:	CP 11h
000066B0:	JR NZ,-12h
000066B2:	LD A,48h
000066B4:	EX AF,AF'
000066B5:	EX DE,HL
000066B6:	LD DE,69ABh
000066B9:	CALL 6712h
000066BC:	LD B,03h
000066BE:	LD A,(DE)
000066BF:	CP 30h
000066C1:	JR NZ,+03h
000066C3:	INC DE
000066C4:	DJNZ -08h
000066C6:	LD C,E
000066C7:	LD B,D
000066C8:	POP HL
000066C9:	POP DE
000066CA:	LD A,26h
000066CC:	LD (DE),A
000066CD:	INC DE
000066CE:	EX AF,AF'
000066CF:	LD (DE),A
000066D0:	INC DE
000066D1:	LD A,(BC)
000066D2:	OR A
000066D3:	JP Z,6541h
000066D6:	LD (DE),A
000066D7:	INC DE
000066D8:	INC BC
000066D9:	JR -0Ah
000066DB:	PUSH DE
000066DC:	CALL 66E1h
000066DF:	POP DE
000066E0:	RET
000066E1:	LD A,H
000066E2:	RLA
000066E3:	LD A,00h
000066E5:	ADC 30h
000066E7:	LD (DE),A
000066E8:	INC DE
000066E9:	LD A,H
000066EA:	RRCA
000066EB:	RRCA
000066EC:	RRCA
000066ED:	RRCA
000066EE:	CALL 670Bh
000066F1:	LD A,H
000066F2:	RRCA
000066F3:	CALL 670Bh
000066F6:	LD A,H
000066F7:	AND 01h
000066F9:	LD H,L
000066FA:	RL H
000066FC:	RLA
000066FD:	RL H
000066FF:	RLA
00006700:	CALL 670Bh
00006703:	LD A,L
00006704:	RRCA
00006705:	RRCA
00006706:	RRCA
00006707:	CALL 670Bh
0000670A:	LD A,L
0000670B:	AND 07h
0000670D:	ADD 30h
0000670F:	LD (DE),A
00006710:	INC DE
00006711:	RET
00006712:	PUSH DE
00006713:	CALL 671Ah
00006716:	XOR A
00006717:	LD (DE),A
00006718:	POP DE
00006719:	RET

0000671A:	LD A,H
0000671B:	CALL 671Fh
0000671E:	LD A,L
0000671F:	PUSH AF
00006720:	RRCA
00006721:	RRCA
00006722:	RRCA
00006723:	RRCA
00006724:	AND 0Fh
00006726:	CALL 672Ch
00006729:	POP AF
0000672A:	AND 0Fh
0000672C:	ADD 30h
0000672E:	CP 3Ah
00006730:	JR C,+02h
00006732:	ADD 07h
00006734:	LD (DE),A
00006735:	INC DE
00006736:	RET

00006737:	LD B,A
00006738:	LD C,A
00006739:	LD D,H
0000673A:	RST 08h
0000673B:	LD B,A
0000673C:	LD C,A
0000673D:	LD D,E
0000673E:	LD D,L
0000673F:	JP NZ,5552h
00006742:	ADC 52h
00006744:	LD B,L
00006745:	LD D,H
00006746:	LD D,L
00006747:	LD D,D
00006748:	ADC 52h
0000674A:	LD B,L
0000674B:	LD D,E
0000674C:	LD D,H
0000674D:	LD C,A
0000674E:	LD D,D
0000674F:	PUSH BC
00006750:	LD C,H
00006751:	LD C,C
00006752:	LD D,E
00006753:	CALL NC,494Ch
00006756:	LD D,E
00006757:	LD D,H
00006758:	INC HL
00006759:	OR C
0000675A:	LD B,C
0000675B:	LD D,L
0000675C:	LD D,H
0000675D:	RST 08h
0000675E:	LD B,H
0000675F:	LD B,L
00006760:	LD C,H
00006761:	LD B,L
00006762:	LD D,H
00006763:	PUSH BC
00006764:	LD B,(HL)
00006765:	LD C,A
00006766:	JP NC,454Eh
00006769:	LD E,B
0000676A:	CALL NC,5250h
0000676D:	LD C,C
0000676E:	LD C,(HL)
0000676F:	CALL NC,4E49h
00006772:	LD D,B
00006773:	LD D,L
00006774:	CALL NC,C649h
00006777:	LD B,H
00006778:	LD B,C
00006779:	LD D,H
0000677A:	POP BC
0000677B:	LD D,D
0000677C:	LD B,L
0000677D:	LD B,C
0000677E:	CALL NZ,4944h
00006781:	CALL 4552h
00006784:	CALL 4445h
00006787:	LD C,C
00006788:	CALL NC,5453h
0000678B:	LD C,A
0000678C:	RET NC
0000678D:	LD B,E
0000678E:	LD C,A
0000678F:	LD C,(HL)
00006790:	CALL NC,4C43h
00006793:	OUTA (43h)
00006795:	LD C,H
00006796:	LD B,L
00006797:	LD B,C
00006798:	JP NC,CE4Fh
0000679B:	LD C,H
0000679C:	LD B,L
0000679D:	CALL NC,454Eh
000067A0:	RST 10h
000067A1:	LD D,B
000067A2:	LD C,A
000067A3:	LD C,E
000067A4:	PUSH BC
000067A5:	LD C,A
000067A6:	LD B,(HL)
000067A7:	ADD 57h
000067A9:	LD C,B
000067AA:	LD C,C
000067AB:	LD C,H
000067AC:	PUSH BC
000067AD:	LD D,A
000067AE:	LD B,L
000067AF:	LD C,(HL)
000067B0:	CALL NZ,4552h
000067B3:	LD D,B
000067B4:	LD B,L
000067B5:	LD B,C
000067B6:	CALL NC,4E55h
000067B9:	LD D,H
000067BA:	LD C,C
000067BB:	CALL Z,5254h
000067BE:	LD B,C
000067BF:	LD B,E
000067C0:	PUSH BC
000067C1:	LD B,L
000067C2:	LD C,(HL)
000067C3:	CALL NZ,4C50h
000067C6:	LD B,C
000067C7:	EXX
000067C8:	LD B,D
000067C9:	LD B,L
000067CA:	LD B,L
000067CB:	RET NC
000067CC:	LD B,H
000067CD:	LD B,L
000067CE:	LD B,(HL)
000067CF:	LD C,C
000067D0:	LD C,(HL)
000067D1:	CALL NC,4544h
000067D4:	LD B,(HL)
000067D5:	LD D,E
000067D6:	LD C,(HL)
000067D7:	RST 00h
000067D8:	LD B,H
000067D9:	LD B,L
000067DA:	LD B,(HL)
000067DB:	LD B,H
000067DC:	LD B,D
000067DD:	CALL Z,4544h
000067E0:	LD B,(HL)
000067E1:	LD D,E
000067E2:	LD D,H
000067E3:	JP NC,4544h
000067E6:	ADD 44h
000067E8:	LD D,L
000067E9:	LD C,L
000067EA:	RET NC
000067EB:	LD C,H
000067EC:	LD C,A
000067ED:	LD B,C
000067EE:	CALL NZ,4153h
000067F1:	LD D,(HL)
000067F2:	PUSH BC
000067F3:	LD C,L
000067F4:	LD B,L
000067F5:	LD D,D
000067F6:	LD B,A
000067F7:	PUSH BC
000067F8:	ADD B
000067F9:	LD C,A
000067FA:	LD D,L
000067FB:	CALL NC,4553h
000067FE:	LD B,C
000067FF:	LD D,D
00006800:	LD B,E
00006801:	RET Z
00006802:	LD D,E
00006803:	LD C,A
00006804:	LD D,L
00006805:	LD C,(HL)
00006806:	CALL NZ,5380h
00006809:	LD D,A
0000680A:	LD B,C
0000680B:	RET NC
0000680C:	ADD B
0000680D:	LD B,L
0000680E:	LD D,D
0000680F:	LD D,D
00006810:	LD C,A
00006811:	JP NC,4552h
00006814:	LD D,E
00006815:	LD D,L
00006816:	LD C,L
00006817:	PUSH BC
00006818:	LD D,D
00006819:	LD B,L
0000681A:	LD C,(HL)
0000681B:	LD D,L
0000681C:	CALL 4C45h
0000681F:	LD D,E
00006820:	PUSH BC
00006821:	LD B,E
00006822:	LD B,C
00006823:	LD C,H
00006824:	CALL Z,4F4Ch
00006827:	LD B,E
00006828:	LD B,C
00006829:	LD D,H
0000682A:	PUSH BC
0000682B:	ADD B
0000682C:	LD C,L
0000682D:	LD C,A
0000682E:	ADC 48h
00006830:	LD B,E
00006831:	LD C,A
00006832:	LD D,B
00006833:	EXX
00006834:	LD C,E
00006835:	LD B,L
00006836:	EXX
00006837:	LD D,B
00006838:	LD D,L
00006839:	LD D,E
0000683A:	RET Z
0000683B:	LD D,B
0000683C:	LD C,A
0000683D:	RET NC
0000683E:	ADD B
0000683F:	LD C,H
00006840:	LD B,C
00006841:	LD B,D
00006842:	LD B,L
00006843:	CALL Z,5380h
00006846:	LD B,E
00006847:	LD D,D
00006848:	LD B,L
00006849:	LD B,L
0000684A:	ADC 4Ch
0000684C:	LD C,C
0000684D:	LD C,(HL)
0000684E:	PUSH BC
0000684F:	LD B,E
00006850:	LD C,A
00006851:	LD C,H
00006852:	LD C,A
00006853:	JP NC,5350h
00006856:	LD B,L
00006857:	CALL NC,5250h
0000685A:	LD B,L
0000685B:	LD D,E
0000685C:	LD B,L
0000685D:	CALL NC,4743h
00006860:	LD C,C
00006861:	LD C,(HL)
00006862:	LD C,C
00006863:	CALL NC,4150h
00006866:	LD D,H
00006867:	LD D,H
00006868:	LD B,L
00006869:	LD D,D
0000686A:	ADC 43h
0000686C:	LD C,C
0000686D:	LD D,D
0000686E:	LD B,E
0000686F:	LD C,H
00006870:	PUSH BC
00006871:	LD D,B
00006872:	LD B,C
00006873:	LD C,C
00006874:	LD C,(HL)
00006875:	CALL NC,4F52h
00006878:	LD D,B
00006879:	LD B,L
0000687A:	ADC 57h
0000687C:	LD C,A
0000687D:	LD D,B
0000687E:	LD B,L
0000687F:	ADC 43h
00006881:	LD C,H
00006882:	LD C,A
00006883:	LD D,E
00006884:	PUSH BC
00006885:	ADD B
00006886:	ADD B
00006887:	ADD B
00006888:	ADD B
00006889:	ADD B
0000688A:	ADD B
0000688B:	ADD B
0000688C:	ADD B
0000688D:	ADD B
0000688E:	ADD B
0000688F:	ADD B
00006890:	ADD B
00006891:	ADD B
00006892:	ADD B
00006893:	ADD B
00006894:	LD D,H
00006895:	RST 08h
00006896:	LD D,E
00006897:	LD D,H
00006898:	LD B,L
00006899:	RET NC
0000689A:	LD D,H
0000689B:	LD C,B
0000689C:	LD B,L
0000689D:	ADC 55h
0000689F:	LD D,E
000068A0:	LD C,C
000068A1:	LD C,(HL)
000068A2:	RST 00h
000068A3:	ADD B
000068A4:	ADD B
000068A5:	ADD B
000068A6:	ADD B
000068A7:	LD D,H
000068A8:	LD B,C
000068A9:	JP NZ,5053h
000068AC:	JP 8080h
000068AF:	LD E,B
000068B0:	LD C,A
000068B1:	JP NC,D24Fh
000068B4:	LD B,C
000068B5:	LD C,(HL)
000068B6:	CALL NZ,4F4Eh
000068B9:	CALL NC,BC3Eh
000068BC:	INC A
000068BD:	CP (HL)
000068BE:	DEC A
000068BF:	CP H
000068C0:	DEC A
000068C1:	CP (HL)
000068C2:	INC A
000068C3:	CP L
000068C4:	LD A,BDh
000068C6:	CP L
000068C7:	CP (HL)
000068C8:	CP H
000068C9:	XOR E
000068CA:	XOR L
000068CB:	LD C,L
000068CC:	LD C,A
000068CD:	CALL NZ,AFFCh
000068D0:	XOR D
000068D1:	SBC FFh
000068D3:	LD C,C
000068D4:	LD C,(HL)
000068D5:	CALL NC,4241h
000068D8:	OUTA (53h)
000068DA:	LD C,C
000068DB:	ADC 43h
000068DD:	LD C,A
000068DE:	OUTA (54h)
000068E0:	LD B,C
000068E1:	ADC 4Ch
000068E3:	LD C,A
000068E4:	RST 00h
000068E5:	LD B,L
000068E6:	LD E,B
000068E7:	RET NC
000068E8:	LD D,E
000068E9:	LD D,C
000068EA:	JP NC,4E52h
000068ED:	CALL NZ,4550h
000068F0:	LD B,L
000068F1:	BIT 0,C
000068F3:	LD D,H
000068F4:	ADC 53h
000068F6:	LD B,A
000068F7:	ADC 46h
000068F9:	LD D,D
000068FA:	LD B,C
000068FB:	JP 4946h
000068FE:	RET C
000068FF:	LD D,B
00006900:	LD B,C
00006901:	RET
00006902:	LD D,D
00006903:	LD B,C
00006904:	CALL NZ,4E49h
00006907:	RET NC
00006908:	LD B,E
00006909:	LD B,H
0000690A:	LD B,D
0000690B:	CALL Z,5343h
0000690E:	LD C,(HL)
0000690F:	RST 00h
00006910:	LD B,E
00006911:	LD C,C
00006912:	LD C,(HL)
00006913:	CALL NC,8080h
00006916:	ADD B
00006917:	ADD B
00006918:	ADD B
00006919:	LD D,B
0000691A:	LD C,A
0000691B:	OUTA (4Ch)
0000691D:	LD D,B
0000691E:	LD C,A
0000691F:	OUTA (46h)
00006921:	LD B,C
00006922:	JP 5553h
00006925:	CALL 8080h
00006928:	LD B,E
00006929:	LD C,B
0000692A:	LD D,D
0000692B:	AND H
0000692C:	LD D,E
0000692D:	LD D,H
0000692E:	LD D,D
0000692F:	AND H
00006930:	LD C,B
00006931:	LD B,L
00006932:	LD E,B
00006933:	AND H
00006934:	LD C,A
00006935:	LD B,E
00006936:	LD D,H
00006937:	AND H
00006938:	LD C,L
00006939:	LD C,E
0000693A:	LD C,C
0000693B:	AND H
0000693C:	LD C,L
0000693D:	LD C,E
0000693E:	LD D,E
0000693F:	AND H
00006940:	LD C,L
00006941:	LD C,E
00006942:	LD B,H
00006943:	AND H
00006944:	LD D,E
00006945:	LD D,B
00006946:	LD B,C
00006947:	LD B,E
00006948:	LD B,L
00006949:	AND H
0000694A:	ADD B
0000694B:	LD B,C
0000694C:	LD D,E
0000694D:	JP 454Ch
00006950:	ADC 56h
00006952:	LD B,C
00006953:	CALL Z,5643h
00006956:	OUTA (43h)
00006958:	LD D,(HL)
00006959:	CALL NZ,5643h
0000695C:	RET
0000695D:	LD D,E
0000695E:	LD D,H
0000695F:	LD B,C
00006960:	CALL NC,4150h
00006963:	JP NC,4C80h
00006966:	LD B,L
00006967:	LD B,(HL)
00006968:	LD D,H
00006969:	AND H
0000696A:	LD D,D
0000696B:	LD C,C
0000696C:	LD B,A
0000696D:	LD C,B
0000696E:	LD D,H
0000696F:	AND H
00006970:	LD C,L
00006971:	LD C,C
00006972:	LD B,H
00006973:	AND H
00006974:	LD C,C
00006975:	LD C,(HL)
00006976:	LD C,E
00006977:	LD B,L
00006978:	LD E,C
00006979:	AND H
0000697A:	LD C,C
0000697B:	LD C,(HL)
0000697C:	LD D,E
0000697D:	LD D,H
0000697E:	JP NC,5246h
00006981:	PUSH BC
00006982:	LD C,L
00006983:	LD B,L
00006984:	LD C,L
00006985:	AND H
00006986:	LD D,E
00006987:	LD B,E
00006988:	LD D,D
00006989:	LD C,(HL)
0000698A:	AND H
0000698B:	LD D,(HL)
0000698C:	LD B,C
0000698D:	LD D,D
0000698E:	LD D,B
0000698F:	LD D,H
00006990:	JP NC,5453h
00006993:	LD D,D
00006994:	LD C,C
00006995:	LD C,(HL)
00006996:	LD B,A
00006997:	AND H
00006998:	ADD B
00006999:	LD B,(HL)
0000699A:	ADC 55h
0000699C:	LD D,E
0000699D:	JP NC,5245h
000069A0:	JP NC,5245h
000069A3:	CALL Z,5343h
000069A6:	LD D,D
000069A7:	LD C,H
000069A8:	LD C,C
000069A9:	ADC FFh
000069AB:	NOP
000069AC:	NOP
000069AD:	NOP
000069AE:	NOP
000069AF:	NOP
000069B0:	NOP
000069B1:	NOP


; Error message table

000069B2:	NOP
69B0        00 4E 45 58 54 20-57 49 54 48 4F 55 54 20     .NEXT WITHOUT
69C0  46 4F 52 00 53 59 4E 54-41 58 20 45 52 52 4F 52   FOR.SYNTAX ERROR
69D0  00 52 45 54 55 52 4E 20-57 49 54 48 4F 55 54 20   .RETURN WITHOUT
69E0  47 4F 53 55 42 00 4F 55-54 20 4F 46 20 44 41 54   GOSUB.OUT OF DAT
69F0  41 00 49 4C 4C 45 47 41-4C 20 46 55 4E 43 54 49   A.ILLEGAL FUNCTI
6A00  4F 4E 20 43 41 4C 4C 00-4F 56 45 52 46 4C 4F 57   ON CALL.OVERFLOW
6A10  00 4F 55 54 20 4F 46 20-4D 45 4D 4F 52 59 00 55   .OUT OF MEMORY.U
6A20  4E 44 45 46 49 4E 45 44-20 4C 49 4E 45 20 4E 55   NDEFINED LINE NU
6A30  4D 42                                             MB
6A30        45 52 00 53 55 42-53 43 52 49 50 54 20 4F     ER.SUBSCRIPT O
6A40  55 54 20 4F 46 20 52 41-4E 47 45 00 44 55 50 4C   UT OF RANGE.DUPL
6A50  49 43 41 54 45 20 44 45-46 49 4E 49 54 49 4F 4E   ICATE DEFINITION
6A60  00 44 49 56 49 53 49 4F-4E 20 42 59 20 5A 45 52   .DIVISION BY ZER
6A70  4F 00 49 4C 4C 45 47 41-4C 20 44 49 52 45 43 54   O.ILLEGAL DIRECT
6A80  00 54 59 50 45 20 4D 49-53 4D 41 54 43 48 00 48   .TYPE MISMATCH.H
6A90  55 42 41 53 49 43 00 53-54 52 49 4E 47 20 54 4F   UBASIC.STRING TO
6AA0  4F 20 4C 4F 4E 47 00 45-58 50 52 45 53 53 49 4F   O LONG.EXPRESSIO
6AB0  4E 20                                             N
6AB0        54 4F 4F 20 43 4F-4D 50 4C 45 58 00 43 41     TOO COMPLEX.CA
6AC0  4E 27 54 20 43 4F 4E 54-49 4E 55 45 00 55 4E 44   N'T CONTINUE.UND
6AD0  45 46 49 4E 45 44 20 55-53 45 52 20 46 55 4E 43   EFINED USER FUNC
6AE0  54 49 4F 4E 00 4E 4F 20-52 45 53 55 4D 45 00 52   TION.NO RESUME.R
6AF0  45 53 55 4D 45 20 57 49-54 48 4F 55 54 20 45 52   ESUME WITHOUT ER
6B00  52 4F 52 00 46 4F 52 4D-41 54 20 4F 56 45 52 00   ROR.FORMAT OVER.
6B10  4D 49 53 53 49 4E 47 20-4F 50 45 52 41 4E 44 00   MISSING OPERAND.
6B20  52 45 50 45 41 54 20 57-49 54 48 4F 55 54 20 55   REPEAT WITHOUT U
6B30  4E 54                                             NT
6B30        49 4C 00 55 4E 54-49 4C 20 57 49 54 48 4F     IL.UNTIL WITHO
6B40  55 54 20 52 45 50 45 41-54 00 57 48 49 4C 45 20   UT REPEAT.WHILE
6B50  57 49 54 48 4F 55 54 20-57 45 4E 44 00 57 45 4E   WITHOUT WEND.WEN
6B60  44 20 57 49 54 48 4F 55-54 20 57 48 49 4C 45 00   D WITHOUT WHILE.
6B70  54 41 50 45 20 52 45 41-44 20 45 52 52 4F 52 00   TAPE READ ERROR.
6B80  44 45 56 49 43 45 20 55-4E 41 56 41 49 4C 41 42   DEVICE UNAVAILAB
6B90  4C 45 00 53 54 41 54 45-4D 45 4E 54 20 4E 4F 54   LE.STATEMENT NOT
6BA0  20 49 4E 53 54 41 4C 4C-00 53 54 41 43 4B 20 45    INSTALL.STACK E
6BB0  4D 50                                             MP
6BB0        54 59 00 46 49 4C-45 20 45 52 52 4F 52 00     TY.FILE ERROR.
00006BBF:	NOP

; 'ABS'
00006BC0:	INC HL
00006BC1:	RES 7,(HL)
00006BC3:	DEC HL
00006BC4:	RET

00006BC5:	LD A,(IY+00h)	; data type, aka PRCSON
00006BC8:	CP 03h			; string type ?
00006BCA:	JP Z,1732h		; ERROR: Type mismatch
00006BCD:	RET

; ONESUB:
00006BCE:	LD DE,6298h		; FLONE
00006BD1:	CALL 6BC5h		; SUB:
00006BD4:	CALL 6BEBh		; TOGLE:  toggle number sign
00006BD7:	CALL 6CA6h		; ADD:
00006BDA:	PUSH AF
00006BDB:	CALL 6BEBh		; TOGLE:  toggle number sign
00006BDE:	XOR A
00006BDF:	CP (HL)
00006BE0:	JR Z,+03h
00006BE2:	POP AF
00006BE3:	CCF
00006BE4:	RET

00006BE5:	POP AF
00006BE6:	XOR A
00006BE7:	INC HL
00006BE8:	LD (HL),A
00006BE9:	DEC HL
00006BEA:	RET

00006BEB:	INC HL		; TOGLE:  toggle number sign
00006BEC:	LD A,(HL)
00006BED:	XOR 80h
00006BEF:	LD (HL),A
00006BF0:	DEC HL
00006BF1:	RET
00006BF2:	PUSH HL
00006BF3:	PUSH DE
00006BF4:	JR +0Fh

00006BF6:	PUSH HL		; Load a string parameter
00006BF7:	PUSH DE
00006BF8:	LD E,(HL)
00006BF9:	INC HL
00006BFA:	LD D,(HL)
00006BFB:	INC HL
00006BFC:	OR A
00006BFD:	SBC HL,DE
00006BFF:	JR Z,+03h
00006C01:	POP DE
00006C02:	POP HL
00006C03:	RET
00006C04:	EX DE,HL
00006C05:	LD A,(HL)
00006C06:	OR A
00006C07:	JR Z,-08h
00006C09:	INC HL
00006C0A:	LD E,(HL)
00006C0B:	INC HL
00006C0C:	LD D,(HL)
00006C0D:	LD HL,(7A41h)
00006C10:	SBC HL,DE
00006C12:	JR NC,-13h
00006C14:	EX DE,HL
00006C15:	DEC HL
00006C16:	LD (HL),00h
00006C18:	DEC HL
00006C19:	LD (HL),A
00006C1A:	POP DE
00006C1B:	POP HL
00006C1C:	RET

00006C1D:	LD A,0Fh
00006C1F:	JP 2196h		; error handling

00006C22:	POP DE
00006C23:	POP HL
00006C24:	CALL 6BF6h		; Load a string parameter
00006C27:	PUSH HL
00006C28:	PUSH DE
00006C29:	LD HL,62F2h
00006C2C:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00006C2F:	POP HL
00006C30:	PUSH HL
00006C31:	LD E,L
00006C32:	LD D,H
00006C33:	INC DE
00006C34:	INC DE
00006C35:	LD (HL),E
00006C36:	INC HL
00006C37:	LD (HL),D
00006C38:	EX DE,HL
00006C39:	INC HL
00006C3A:	LD E,(HL)
00006C3B:	INC HL
00006C3C:	LD D,(HL)
00006C3D:	DEC HL
00006C3E:	DEC HL
00006C3F:	EX DE,HL
00006C40:	DEC HL
00006C41:	LD (HL),D
00006C42:	DEC HL
00006C43:	LD (HL),E
00006C44:	POP HL
00006C45:	POP DE
00006C46:	RET
00006C47:	PUSH DE
00006C48:	PUSH HL
00006C49:	LD C,(HL)
00006C4A:	INC HL
00006C4B:	LD B,(HL)
00006C4C:	EX DE,HL
00006C4D:	LD E,(HL)
00006C4E:	INC HL
00006C4F:	LD D,(HL)
00006C50:	LD L,C
00006C51:	LD H,B
00006C52:	LD A,(HL)
00006C53:	EX AF,AF'
00006C54:	LD A,(DE)
00006C55:	ADD (HL)
00006C56:	JR C,-3Bh
00006C58:	JR Z,-16h
00006C5A:	LD HL,62F2h
00006C5D:	CALL 28A9h		; CLRFAC: Set FP accumulator to 0
00006C60:	PUSH HL
00006C61:	PUSH DE
00006C62:	LD E,L
00006C63:	LD D,H
00006C64:	INC HL
00006C65:	INC HL
00006C66:	EX DE,HL
00006C67:	LD (HL),E
00006C68:	INC HL
00006C69:	LD (HL),D
00006C6A:	EX DE,HL
00006C6B:	LD (HL),A
00006C6C:	LD E,L
00006C6D:	LD D,H
00006C6E:	EX AF,AF'
00006C6F:	PUSH AF
00006C70:	CALL 2D9Eh
00006C73:	INC HL
00006C74:	LD A,(HL)
00006C75:	INC HL
00006C76:	LD H,(HL)
00006C77:	LD L,A
00006C78:	INC BC
00006C79:	LD A,(BC)
00006C7A:	LD E,A
00006C7B:	INC BC
00006C7C:	LD A,(BC)
00006C7D:	LD D,A
00006C7E:	POP AF
00006C7F:	OR A
00006C80:	JR Z,+07h
00006C82:	LD B,A
00006C83:	LD A,(DE)
00006C84:	LD (HL),A
00006C85:	INC HL
00006C86:	INC DE
00006C87:	DJNZ -06h
00006C89:	POP BC
00006C8A:	LD A,(BC)
00006C8B:	EX AF,AF'
00006C8C:	INC BC
00006C8D:	LD A,(BC)
00006C8E:	LD E,A
00006C8F:	INC BC
00006C90:	LD A,(BC)
00006C91:	LD D,A
00006C92:	EX AF,AF'
00006C93:	OR A
00006C94:	JR Z,+07h
00006C96:	LD B,A
00006C97:	LD A,(DE)
00006C98:	LD (HL),A
00006C99:	INC HL
00006C9A:	INC DE
00006C9B:	DJNZ -06h
00006C9D:	POP DE
00006C9E:	POP HL
00006C9F:	PUSH HL
00006CA0:	CALL 6BF6h		; Load a string parameter
00006CA3:	JP 6C22h

; ADD:
00006CA6:	LD A,(IY+00h)	; data type, aka PRCSON
00006CA9:	CP 03h			; string type ?
00006CAB:	JR Z,-66h
00006CAD:	PUSH DE
00006CAE:	PUSH HL
00006CAF:	INC HL
00006CB0:	LD A,(HL)
00006CB1:	RLCA
00006CB2:	JR C,+0Fh
00006CB4:	INC DE
00006CB5:	LD A,(DE)
00006CB6:	RLCA
00006CB7:	JR C,+2Eh
00006CB9:	DEC DE
00006CBA:	DEC HL
00006CBB:	CALL 6CFCh
00006CBE:	POP HL
00006CBF:	POP DE
00006CC0:	JP 6BC0h		; 'ABS'

00006CC3:	LD A,(DE)
00006CC4:	OR A
00006CC5:	JR Z,+0Ah
00006CC7:	INC DE
00006CC8:	LD A,(DE)
00006CC9:	RLCA
00006CCA:	JR NC,+0Fh
00006CCC:	DEC DE
00006CCD:	DEC HL
00006CCE:	CALL 6CFCh
00006CD1:	POP HL
00006CD2:	INC HL
00006CD3:	LD A,(HL)
00006CD4:	DEC HL
00006CD5:	OR A
00006CD6:	JR Z,+01h
00006CD8:	SCF
00006CD9:	POP DE
00006CDA:	RET

00006CDB:	DEC DE
00006CDC:	DEC HL
00006CDD:	CALL 6E04h
00006CE0:	POP HL
00006CE1:	JR C,-0Ah
00006CE3:	POP DE
00006CE4:	JP 6BC0h		; 'ABS'

00006CE7:	DEC DE
00006CE8:	DEC HL
00006CE9:	CALL 6E04h
00006CEC:	POP HL
00006CED:	JR NC,+06h
00006CEF:	CALL 6BC0h		; 'ABS'
00006CF2:	POP DE
00006CF3:	OR A
00006CF4:	RET
00006CF5:	XOR A
00006CF6:	CP (HL)
00006CF7:	JR Z,-07h
00006CF9:	POP DE
00006CFA:	SCF
00006CFB:	RET
00006CFC:	LD A,B7h
00006CFE:	LD (6D7Ch),A
00006D01:	BIT 2,(IY+00h)	; data type, aka PRCSON
00006D05:	JP NZ,6EEAh
00006D08:	XOR A
00006D09:	CP (HL)
00006D0A:	JP Z,6ECFh
00006D0D:	LD A,(DE)
00006D0E:	OR A
00006D0F:	RET Z
00006D10:	SUB (HL)
00006D11:	JR NC,+0Bh
00006D13:	NEG
00006D15:	CP 38h
00006D17:	RET NC
00006D18:	LD (6D6Ah),HL
00006D1B:	EX DE,HL
00006D1C:	JR +08h
00006D1E:	CP 38h
00006D20:	JP NC,6ECFh
00006D23:	LD (6D6Ah),HL
00006D26:	CALL 6D7Fh
00006D29:	PUSH IX
00006D2B:	EX HL,(SP)
00006D2C:	LD A,D
00006D2D:	ADD H
00006D2E:	LD D,A
00006D2F:	LD A,L
00006D30:	ADC E
00006D31:	LD E,A
00006D32:	POP HL
00006D33:	LD A,B
00006D34:	EXX
00006D35:	ADC B
00006D36:	EXX
00006D37:	LD B,A
00006D38:	LD A,C
00006D39:	EXX
00006D3A:	ADC C
00006D3B:	EXX
00006D3C:	LD C,A
00006D3D:	LD A,H
00006D3E:	EXX
00006D3F:	ADC H
00006D40:	EXX
00006D41:	LD H,A
00006D42:	LD A,L
00006D43:	EXX
00006D44:	ADC L
00006D45:	EXX
00006D46:	LD L,A
00006D47:	EXX
00006D48:	EX AF,AF'
00006D49:	LD B,A
00006D4A:	EX AF,AF'
00006D4B:	LD A,B
00006D4C:	ADC D
00006D4D:	LD D,A
00006D4E:	JP NC,6D66h
00006D51:	INC E
00006D52:	JP Z,6EE4h
00006D55:	EXX
00006D56:	SCF
00006D57:	RRA
00006D58:	RR L
00006D5A:	RR H
00006D5C:	RR C
00006D5E:	RR B
00006D60:	RR E
00006D62:	RR D
00006D64:	EXX
00006D65:	LD D,A
00006D66:	LD BC,0008h
00006D69:	LD HL,0000h
00006D6C:	ADD HL,BC
00006D6D:	LD (705Bh),SP
00006D71:	LD SP,HL
00006D72:	EXX
00006D73:	PUSH DE
00006D74:	PUSH BC
00006D75:	PUSH HL
00006D76:	EXX
00006D77:	PUSH DE
00006D78:	LD SP,(705Bh)
00006D7C:	NOP
00006D7D:	EI
00006D7E:	RET
00006D7F:	DI
00006D80:	LD (705Bh),SP
00006D84:	LD C,A
00006D85:	AND 07h
00006D87:	INC A
00006D88:	LD B,A
00006D89:	LD A,C
00006D8A:	AND 38h
00006D8C:	LD (6D99h),A
00006D8F:	LD SP,HL
00006D90:	EX AF,AF'
00006D91:	EXX
00006D92:	POP AF
00006D93:	SET 7,A
00006D95:	POP HL
00006D96:	POP BC
00006D97:	POP DE
00006D98:	JR +00h
00006D9A:	JP 6DD1h
00006D9D:	XOR A
00006D9E:	JP 6DD1h
00006DA1:	NOP
00006DA2:	LD D,E
00006DA3:	LD E,B
00006DA4:	LD B,C
00006DA5:	LD C,H
00006DA6:	LD H,L
00006DA7:	LD L,A
00006DA8:	JR -0Dh
00006DAA:	LD D,B
00006DAB:	LD E,C
00006DAC:	LD B,H
00006DAD:	LD C,L
00006DAE:	LD H,A
00006DAF:	XOR A
00006DB0:	JR +1Eh
00006DB2:	LD D,C
00006DB3:	LD E,H
00006DB4:	LD B,L
00006DB5:	LD C,A
00006DB6:	XOR A
00006DB7:	JP 6DCFh
00006DBA:	LD D,H
00006DBB:	LD E,L
00006DBC:	LD B,A
00006DBD:	XOR A
00006DBE:	JP 6DCEh
00006DC1:	NOP
00006DC2:	LD D,L
00006DC3:	LD E,A
00006DC4:	XOR A
00006DC5:	JP 6DCDh
00006DC8:	NOP
00006DC9:	NOP
00006DCA:	LD D,A
00006DCB:	XOR A
00006DCC:	LD E,A
00006DCD:	LD B,A
00006DCE:	LD C,A
00006DCF:	LD H,A
00006DD0:	LD L,A
00006DD1:	EX AF,AF'
00006DD2:	RRCA
00006DD3:	RRCA
00006DD4:	ADD EBh
00006DD6:	LD (6DF1h),A
00006DD9:	EX AF,AF'
00006DDA:	JP 6DEBh
00006DDD:	OR A
00006DDE:	RRA
00006DDF:	RR L
00006DE1:	RR H
00006DE3:	RR C
00006DE5:	RR B
00006DE7:	RR E
00006DE9:	RR D
00006DEB:	EXX
00006DEC:	SCF
00006DED:	CCF
00006DEE:	DEC B
00006DEF:	EXX
00006DF0:	JR NZ,+00h
00006DF2:	EXX
00006DF3:	EX DE,HL
00006DF4:	LD SP,HL
00006DF5:	POP DE
00006DF6:	SET 7,D
00006DF8:	POP HL
00006DF9:	POP BC
00006DFA:	POP IX
00006DFC:	LD SP,(705Bh)
00006E00:	EXX
00006E01:	SCF
00006E02:	EX AF,AF'
00006E03:	RET

00006E04:	BIT 3,(IY+00h)	; data type, aka PRCSON
00006E08:	JP Z,6F83h
00006E0B:	XOR A
00006E0C:	CP (HL)
00006E0D:	JP Z,6ECEh
00006E10:	LD A,(DE)
00006E11:	OR A
00006E12:	RET Z
00006E13:	SUB (HL)
00006E14:	JR NC,+0Fh
00006E16:	NEG
00006E18:	CP 38h
00006E1A:	CCF
00006E1B:	RET C
00006E1C:	LD (6D6Ah),HL
00006E1F:	EX DE,HL
00006E20:	CALL 6E2Dh
00006E23:	CCF
00006E24:	RET

00006E25:	CP 38h
00006E27:	JP NC,6ECEh
00006E2A:	LD (6D6Ah),HL
00006E2D:	PUSH AF
00006E2E:	PUSH HL
00006E2F:	PUSH DE
00006E30:	LD A,(DE)
00006E31:	CP (HL)
00006E32:	JR NZ,+1Dh
00006E34:	INC DE
00006E35:	INC HL
00006E36:	LD A,(DE)
00006E37:	SET 7,A
00006E39:	CP (HL)
00006E3A:	JR Z,+05h
00006E3C:	RES 7,A
00006E3E:	CP (HL)
00006E3F:	JR NZ,+10h
00006E41:	INC HL
00006E42:	INC DE
00006E43:	LD B,06h
00006E45:	LD A,(DE)
00006E46:	CP (HL)
00006E47:	JP NZ,6E51h
00006E4A:	INC HL
00006E4B:	INC DE
00006E4C:	DJNZ -09h
00006E4E:	JP 6ED8h
00006E51:	POP DE
00006E52:	POP HL
00006E53:	POP AF
00006E54:	CALL 6D7Fh
00006E57:	PUSH IX
00006E59:	EX HL,(SP)
00006E5A:	LD A,H
00006E5B:	SUB D
00006E5C:	LD D,A
00006E5D:	LD A,L
00006E5E:	SBC E
00006E5F:	LD E,A
00006E60:	POP HL
00006E61:	EXX
00006E62:	LD A,B
00006E63:	EXX
00006E64:	SBC B
00006E65:	LD B,A
00006E66:	EXX
00006E67:	LD A,C
00006E68:	EXX
00006E69:	SBC C
00006E6A:	LD C,A
00006E6B:	EXX
00006E6C:	LD A,H
00006E6D:	EXX
00006E6E:	SBC H
00006E6F:	LD H,A
00006E70:	EXX
00006E71:	LD A,L
00006E72:	EXX
00006E73:	SBC L
00006E74:	LD L,A
00006E75:	EXX
00006E76:	EX AF,AF'
00006E77:	LD B,A
00006E78:	EX AF,AF'
00006E79:	LD A,D
00006E7A:	SBC B
00006E7B:	LD D,A
00006E7C:	LD A,B7h
00006E7E:	LD (6D7Ch),A
00006E81:	EXX
00006E82:	CALL C,6EA2h
00006E85:	EXX
00006E86:	BIT 7,D
00006E88:	JP NZ,6D66h
00006E8B:	EXX
00006E8C:	OR A
00006E8D:	RL D
00006E8F:	RL E
00006E91:	RL B
00006E93:	RL C
00006E95:	RL H
00006E97:	RL L
00006E99:	EXX
00006E9A:	RL D
00006E9C:	DEC E
00006E9D:	JR NZ,-19h
00006E9F:	JP 6D66h

00006EA2:	EXX
00006EA3:	LD A,3Fh		; '?'
00006EA5:	LD (6D7Ch),A
00006EA8:	LD A,D
00006EA9:	CPL
00006EAA:	LD D,A
00006EAB:	EXX
00006EAC:	LD A,D
00006EAD:	CPL
00006EAE:	LD D,A
00006EAF:	LD A,E
00006EB0:	CPL
00006EB1:	LD E,A
00006EB2:	LD A,B
00006EB3:	CPL
00006EB4:	LD B,A
00006EB5:	LD A,C
00006EB6:	CPL
00006EB7:	LD C,A
00006EB8:	LD A,H
00006EB9:	CPL
00006EBA:	LD H,A
00006EBB:	LD A,L
00006EBC:	CPL
00006EBD:	LD L,A
00006EBE:	INC D
00006EBF:	RET NZ
00006EC0:	INC E
00006EC1:	RET NZ
00006EC2:	INC B
00006EC3:	RET NZ
00006EC4:	INC C
00006EC5:	RET NZ
00006EC6:	INC H
00006EC7:	RET NZ
00006EC8:	INC L
00006EC9:	RET NZ
00006ECA:	EXX
00006ECB:	INC D
00006ECC:	EXX
00006ECD:	RET

00006ECE:	OR A
00006ECF:	LD C,(IY+00h)	; data type, aka PRCSON
00006ED2:	LD B,00h
00006ED4:	EX DE,HL
00006ED5:	LDIR
00006ED7:	RET

00006ED8:	POP DE
00006ED9:	POP HL
00006EDA:	POP AF
00006EDB:	LD B,(IY+00h)	; data type, aka PRCSON
00006EDE:	XOR A
00006EDF:	LD (HL),A
00006EE0:	INC HL
00006EE1:	DJNZ -04h
00006EE3:	RET
00006EE4:	LD A,06h
00006EE6:	EI
00006EE7:	JP 2196h		; error handling

00006EEA:	XOR A
00006EEB:	CP (HL)
00006EEC:	JP Z,6ECFh
00006EEF:	LD A,(DE)
00006EF0:	OR A
00006EF1:	RET Z
00006EF2:	SUB (HL)
00006EF3:	JR NC,+0Ch
00006EF5:	NEG
00006EF7:	CP 18h
00006EF9:	RET NC
00006EFA:	LD (6F79h),HL
00006EFD:	EX DE,HL
00006EFE:	JP 6F09h
00006F01:	CP 18h
00006F03:	JP NC,6ECFh
00006F06:	LD (6F79h),HL
00006F09:	LD (705Bh),SP
00006F0D:	DI
00006F0E:	LD C,A
00006F0F:	AND 07h
00006F11:	INC A
00006F12:	LD B,A
00006F13:	LD A,C
00006F14:	AND 38h
00006F16:	LD C,A
00006F17:	LD (6F21h),A
00006F1A:	LD SP,HL
00006F1B:	EXX
00006F1C:	POP DE
00006F1D:	SET 7,D
00006F1F:	POP HL
00006F20:	JR +00h
00006F22:	LD C,00h
00006F24:	JP 6F37h
00006F27:	NOP
00006F28:	NOP
00006F29:	NOP
00006F2A:	LD C,H
00006F2B:	LD H,L
00006F2C:	LD L,D
00006F2D:	XOR A
00006F2E:	JP 6F36h
00006F31:	NOP
00006F32:	LD C,L
00006F33:	LD H,D
00006F34:	XOR A
00006F35:	LD L,A
00006F36:	LD D,A
00006F37:	EXX
00006F38:	LD A,C
00006F39:	RRCA
00006F3A:	RRCA
00006F3B:	ADD F5h
00006F3D:	LD (6F50h),A
00006F40:	LD A,B
00006F41:	EXX
00006F42:	LD B,A
00006F43:	JP 6F4Eh
00006F46:	RR D
00006F48:	RR L
00006F4A:	RR H
00006F4C:	RR C
00006F4E:	OR A
00006F4F:	DJNZ +00h
00006F51:	RL C
00006F53:	EXX
00006F54:	EX DE,HL
00006F55:	LD SP,HL
00006F56:	POP DE
00006F57:	SET 7,D
00006F59:	EXX
00006F5A:	POP BC
00006F5B:	LD A,H
00006F5C:	ADC B
00006F5D:	LD H,A
00006F5E:	LD A,C
00006F5F:	ADC L
00006F60:	LD L,A
00006F61:	EXX
00006F62:	LD A,D
00006F63:	EXX
00006F64:	ADC D
00006F65:	LD D,A
00006F66:	EXX
00006F67:	LD A,E
00006F68:	EXX
00006F69:	LD E,A
00006F6A:	JP NC,6F74h
00006F6D:	RR D
00006F6F:	RR L
00006F71:	RR H
00006F73:	INC E
00006F74:	EXX
00006F75:	LD BC,0004h
00006F78:	LD HL,0000h
00006F7B:	ADD HL,BC
00006F7C:	LD SP,HL
00006F7D:	EXX
00006F7E:	PUSH HL
00006F7F:	PUSH DE
00006F80:	JP 6D78h
00006F83:	PUSH HL
00006F84:	PUSH DE
00006F85:	LD A,(DE)
00006F86:	CP (HL)
00006F87:	JR C,+01h
00006F89:	LD A,(HL)
00006F8A:	CP 80h
00006F8C:	LD A,00h
00006F8E:	JR NC,+10h
00006F90:	PUSH HL
00006F91:	INC HL
00006F92:	INC HL
00006F93:	INC HL
00006F94:	LD C,(HL)
00006F95:	POP HL
00006F96:	EX DE,HL
00006F97:	INC HL
00006F98:	INC HL
00006F99:	INC HL
00006F9A:	LD A,(HL)
00006F9B:	EX DE,HL
00006F9C:	CP C
00006F9D:	JR C,+01h
00006F9F:	LD A,C
00006FA0:	LD DE,7393h
00006FA3:	LD BC,0004h
00006FA6:	LDIR
00006FA8:	LD B,04h
00006FAA:	LD (DE),A
00006FAB:	INC DE
00006FAC:	DJNZ -04h
00006FAE:	POP DE
00006FAF:	PUSH DE
00006FB0:	EX DE,HL
00006FB1:	LD DE,739Bh
00006FB4:	LD BC,0004h
00006FB7:	LDIR
00006FB9:	LD B,04h
00006FBB:	LD (DE),A
00006FBC:	INC DE
00006FBD:	DJNZ -04h
00006FBF:	LD HL,7393h
00006FC2:	LD DE,739Bh
00006FC5:	DEC IY
00006FC7:	LD (IY+00h),08h	; data type, aka PRCSON, double precision
00006FCB:	CALL 6E0Bh
00006FCE:	INC IY
00006FD0:	POP DE
00006FD1:	POP HL
00006FD2:	PUSH HL
00006FD3:	PUSH DE
00006FD4:	EX DE,HL
00006FD5:	LD HL,7393h
00006FD8:	LD BC,0004h
00006FDB:	LDIR
00006FDD:	POP DE
00006FDE:	POP HL
00006FDF:	RET
; MUL:
00006FE0:	CALL 6BC5h
00006FE3:	DI
00006FE4:	PUSH DE
00006FE5:	PUSH HL
00006FE6:	LD (705Bh),SP
00006FEA:	BIT 3,(IY+00h)	; data type, aka PRCSON
00006FEE:	JP NZ,718Eh
00006FF1:	LD SP,HL
00006FF2:	LD A,(DE)
00006FF3:	OR A
00006FF4:	JP Z,70ABh
00006FF7:	XOR A
00006FF8:	EXX
00006FF9:	POP DE
00006FFA:	SET 7,D
00006FFC:	CP E
00006FFD:	JP Z,70ABh
00007000:	POP HL
00007001:	EXX
00007002:	EX DE,HL
00007003:	LD SP,HL
00007004:	POP DE
00007005:	SET 7,D
00007007:	CP E
00007008:	JP Z,70ABh
0000700B:	POP HL
0000700C:	LD BC,5F00h
0000700F:	LD SP,7399h
00007012:	PUSH BC
00007013:	PUSH BC
00007014:	LD C,A
00007015:	LD B,A
00007016:	PUSH BC
00007017:	EXX
00007018:	PUSH DE
00007019:	LD E,A
0000701A:	EXX
0000701B:	CP H
0000701C:	LD IX,7397h
00007020:	JR Z,+04h
00007022:	LD C,H
00007023:	CALL 7077h
00007026:	DEC IX
00007028:	CP L
00007029:	JR Z,+04h
0000702B:	LD C,L
0000702C:	CALL 7077h
0000702F:	DEC IX
00007031:	LD C,D
00007032:	CALL 7077h
00007035:	POP HL
00007036:	LD A,E
00007037:	ADD L
00007038:	LD L,A
00007039:	LD A,00h
0000703B:	ADC A
0000703C:	LD H,A
0000703D:	POP BC
0000703E:	POP DE
0000703F:	BIT 7,C
00007041:	JR NZ,+09h
00007043:	RL D
00007045:	RL E
00007047:	RL B
00007049:	RL C
0000704B:	DEC HL
0000704C:	LD A,L
0000704D:	SUB 80h
0000704F:	LD L,A
00007050:	LD A,H
00007051:	SBC 00h
00007053:	JP C,70ABh
00007056:	JP NZ,6EE4h
00007059:	LD A,L
0000705A:	LD SP,0000h
0000705D:	POP HL
0000705E:	LD (HL),A
0000705F:	INC HL
00007060:	LD A,(HL)
00007061:	EX HL,(SP)
00007062:	INC HL
00007063:	XOR (HL)
00007064:	DEC HL
00007065:	EX HL,(SP)
00007066:	DEC HL
00007067:	PUSH HL
00007068:	INC HL
00007069:	RLCA
0000706A:	JR C,+02h
0000706C:	RES 7,C
0000706E:	LD (HL),C
0000706F:	INC HL
00007070:	LD (HL),B
00007071:	INC HL
00007072:	LD (HL),E
00007073:	POP HL
00007074:	POP DE
00007075:	EI
00007076:	RET

00007077:	LD B,08h
00007079:	RR C
0000707B:	EXX
0000707C:	JP NC,7094h
0000707F:	LD SP,IX
00007081:	POP BC
00007082:	PUSH HL
00007083:	LD A,H
00007084:	ADD B
00007085:	LD H,A
00007086:	LD A,L
00007087:	ADC C
00007088:	LD L,A
00007089:	EX HL,(SP)
0000708A:	DEC SP
0000708B:	DEC SP
0000708C:	EX HL,(SP)
0000708D:	LD A,H
0000708E:	ADC D
0000708F:	LD H,A
00007090:	LD A,L
00007091:	ADC E
00007092:	LD L,A
00007093:	EX HL,(SP)
00007094:	OR A
00007095:	RL H
00007097:	RL L
00007099:	RL D
0000709B:	RL E
0000709D:	EXX
0000709E:	DJNZ -27h
000070A0:	EXX
000070A1:	LD H,L
000070A2:	LD L,D
000070A3:	LD D,E
000070A4:	XOR A
000070A5:	LD E,A
000070A6:	EXX
000070A7:	LD SP,738Fh
000070AA:	RET
000070AB:	LD SP,(705Bh)
000070AF:	POP HL
000070B0:	PUSH HL
000070B1:	CALL 6EDBh
000070B4:	POP HL
000070B5:	POP DE
000070B6:	EI
000070B7:	RET

000070B8:	LD A,0Bh
000070BA:	JP 2196h		; error handling

000070BD:	CALL 6BC5h		; DIV:
000070C0:	DI
000070C1:	XOR A
000070C2:	PUSH DE
000070C3:	PUSH HL
000070C4:	LD (705Bh),SP
000070C8:	BIT 3,(IY+00h)	; data type, aka PRCSON
000070CC:	JP NZ,7289h
000070CF:	LD SP,HL
000070D0:	EXX
000070D1:	POP DE
000070D2:	SET 7,D
000070D4:	CP E
000070D5:	JR Z,-2Ch
000070D7:	LD E,A
000070D8:	POP HL
000070D9:	EXX
000070DA:	EX DE,HL
000070DB:	LD SP,HL
000070DC:	POP DE
000070DD:	SET 7,D
000070DF:	CP E
000070E0:	JR Z,-2Ah
000070E2:	LD E,A
000070E3:	POP HL
000070E4:	LD SP,(705Bh)
000070E8:	LD IX,7392h
000070EC:	LD C,04h
000070EE:	INC IX
000070F0:	LD B,08h
000070F2:	EXX
000070F3:	RL (IX+00h)
000070F7:	LD A,H
000070F8:	EXX
000070F9:	SUB H
000070FA:	EXX
000070FB:	LD H,A
000070FC:	LD A,L
000070FD:	EXX
000070FE:	SBC L
000070FF:	EXX
00007100:	LD L,A
00007101:	LD A,D
00007102:	EXX
00007103:	SBC D
00007104:	EXX
00007105:	LD D,A
00007106:	LD A,E
00007107:	EXX
00007108:	SBC E
00007109:	EXX
0000710A:	LD E,A
0000710B:	SET 0,(IX+00h)
0000710F:	JR NC,+18h
00007111:	RES 0,(IX+00h)
00007115:	EXX
00007116:	LD A,H
00007117:	EXX
00007118:	ADD H
00007119:	LD H,A
0000711A:	EXX
0000711B:	LD A,L
0000711C:	EXX
0000711D:	ADC L
0000711E:	LD L,A
0000711F:	EXX
00007120:	LD A,D
00007121:	EXX
00007122:	ADC D
00007123:	LD D,A
00007124:	EXX
00007125:	LD A,E
00007126:	EXX
00007127:	ADC E
00007128:	LD E,A
00007129:	SLA H
0000712B:	RL L
0000712D:	RL D
0000712F:	RL E
00007131:	EXX
00007132:	DJNZ -42h
00007134:	DEC C
00007135:	JR NZ,-49h
00007137:	LD HL,7396h
0000713A:	LD A,67h
0000713C:	ADD (HL)
0000713D:	LD (HL),A
0000713E:	LD B,03h
00007140:	DEC HL
00007141:	LD A,00h
00007143:	ADC (HL)
00007144:	LD (HL),A
00007145:	DJNZ -07h
00007147:	XOR A
00007148:	BIT 7,(HL)
0000714A:	JR NZ,+0Dh
0000714C:	LD HL,7396h
0000714F:	RL (HL)
00007151:	LD B,03h
00007153:	DEC HL
00007154:	RL (HL)
00007156:	DJNZ -05h
00007158:	SCF
00007159:	POP HL
0000715A:	POP DE
0000715B:	PUSH DE
0000715C:	PUSH HL
0000715D:	LD A,(HL)
0000715E:	CCF
0000715F:	ADC 80h
00007161:	LD C,A
00007162:	LD A,00h
00007164:	ADC A
00007165:	LD B,A
00007166:	EX DE,HL
00007167:	LD A,C
00007168:	SUB (HL)
00007169:	EX DE,HL
0000716A:	LD C,A
0000716B:	LD A,B
0000716C:	SBC 00h
0000716E:	JP C,70ABh
00007171:	JP NZ,6EE4h
00007174:	LD (HL),C
00007175:	INC HL
00007176:	INC DE
00007177:	LD A,(DE)
00007178:	XOR (HL)
00007179:	RLCA
0000717A:	LD B,03h
0000717C:	LD DE,7393h
0000717F:	LD A,(DE)
00007180:	LD (HL),A
00007181:	INC HL
00007182:	INC DE
00007183:	DJNZ -06h
00007185:	POP HL
00007186:	JR C,+03h
00007188:	CALL 6BC0h		; 'ABS'
0000718B:	POP DE
0000718C:	EI
0000718D:	RET

0000718E:	LD SP,HL
0000718F:	LD A,(DE)
00007190:	OR A
00007191:	JP Z,70ABh
00007194:	XOR A
00007195:	EXX
00007196:	POP DE
00007197:	SET 7,D
00007199:	CP E
0000719A:	JP Z,70ABh
0000719D:	LD E,A
0000719E:	POP BC
0000719F:	POP HL
000071A0:	POP IX
000071A2:	EXX
000071A3:	LD SP,73A1h
000071A6:	LD BC,5F00h
000071A9:	PUSH BC
000071AA:	PUSH BC
000071AB:	PUSH BC
000071AC:	PUSH BC
000071AD:	LD B,A
000071AE:	PUSH BC
000071AF:	PUSH BC
000071B0:	PUSH BC
000071B1:	LD SP,(705Bh)
000071B5:	EX DE,HL
000071B6:	LD B,06h
000071B8:	LD DE,0007h
000071BB:	ADD HL,DE
000071BC:	LD DE,73A0h
000071BF:	CALL 7213h
000071C2:	DEC DE
000071C3:	DEC HL
000071C4:	DJNZ -07h
000071C6:	LD A,(HL)
000071C7:	SET 7,A
000071C9:	CALL 7216h
000071CC:	LD HL,7393h
000071CF:	BIT 7,(HL)
000071D1:	SCF
000071D2:	JR NZ,+0Bh
000071D4:	LD HL,739Ah
000071D7:	LD B,08h
000071D9:	RL (HL)
000071DB:	DEC HL
000071DC:	DJNZ -05h
000071DE:	OR A
000071DF:	POP HL
000071E0:	POP DE
000071E1:	PUSH DE
000071E2:	PUSH HL
000071E3:	LD A,(DE)
000071E4:	LD C,A
000071E5:	ADC (HL)
000071E6:	LD C,A
000071E7:	LD A,00h
000071E9:	ADC A
000071EA:	LD B,A
000071EB:	LD A,C
000071EC:	SUB 81h
000071EE:	LD C,A
000071EF:	LD A,B
000071F0:	SBC 00h
000071F2:	JP M,70ABh
000071F5:	JP NZ,6EE4h
000071F8:	LD (HL),C
000071F9:	INC DE
000071FA:	INC HL
000071FB:	LD A,(DE)
000071FC:	XOR (HL)
000071FD:	RLCA
000071FE:	LD DE,7393h
00007201:	JR C,+04h
00007203:	EX DE,HL
00007204:	RES 7,(HL)
00007206:	EX DE,HL
00007207:	LD B,07h
00007209:	LD A,(DE)
0000720A:	LD (HL),A
0000720B:	INC DE
0000720C:	INC HL
0000720D:	DJNZ -06h
0000720F:	POP HL
00007210:	POP DE
00007211:	EI
00007212:	RET
00007213:	LD A,(HL)
00007214:	OR A
00007215:	RET Z
00007216:	PUSH HL
00007217:	PUSH BC
00007218:	PUSH DE
00007219:	LD B,08h
0000721B:	RRCA
0000721C:	PUSH AF
0000721D:	JP NC,7254h
00007220:	LD A,(DE)
00007221:	PUSH IX
00007223:	EX HL,(SP)
00007224:	ADD H
00007225:	LD (DE),A
00007226:	DEC DE
00007227:	LD A,(DE)
00007228:	ADC L
00007229:	LD (DE),A
0000722A:	POP HL
0000722B:	DEC DE
0000722C:	LD A,(DE)
0000722D:	EXX
0000722E:	ADC H
0000722F:	EXX
00007230:	LD (DE),A
00007231:	DEC DE
00007232:	LD A,(DE)
00007233:	EXX
00007234:	ADC L
00007235:	EXX
00007236:	LD (DE),A
00007237:	DEC DE
00007238:	LD A,(DE)
00007239:	EXX
0000723A:	ADC B
0000723B:	EXX
0000723C:	LD (DE),A
0000723D:	DEC DE
0000723E:	LD A,(DE)
0000723F:	EXX
00007240:	ADC C
00007241:	EXX
00007242:	LD (DE),A
00007243:	DEC DE
00007244:	LD A,(DE)
00007245:	EXX
00007246:	ADC D
00007247:	EXX
00007248:	LD (DE),A
00007249:	DEC DE
0000724A:	LD A,(DE)
0000724B:	EXX
0000724C:	ADC E
0000724D:	EXX
0000724E:	LD (DE),A
0000724F:	DEC DE
00007250:	LD A,(DE)
00007251:	ADC 00h
00007253:	LD (DE),A
00007254:	EXX
00007255:	PUSH IX
00007257:	EX HL,(SP)
00007258:	LD A,H
00007259:	ADD A
0000725A:	LD H,A
0000725B:	LD A,L
0000725C:	RLA
0000725D:	LD L,A
0000725E:	EX HL,(SP)
0000725F:	POP IX
00007261:	RL H
00007263:	RL L
00007265:	RL B
00007267:	RL C
00007269:	RL D
0000726B:	RL E
0000726D:	EXX
0000726E:	POP AF
0000726F:	POP DE
00007270:	PUSH DE
00007271:	DJNZ -58h
00007273:	EXX
00007274:	LD A,H
00007275:	PUSH IX
00007277:	EX HL,(SP)
00007278:	LD H,L
00007279:	LD L,A
0000727A:	EX HL,(SP)
0000727B:	POP IX
0000727D:	LD H,L
0000727E:	LD L,B
0000727F:	LD B,C
00007280:	LD C,D
00007281:	LD D,E
00007282:	LD E,00h
00007284:	EXX
00007285:	POP DE
00007286:	POP BC
00007287:	POP HL
00007288:	RET
00007289:	LD SP,HL
0000728A:	EXX
0000728B:	POP DE
0000728C:	SET 7,D
0000728E:	CP E
0000728F:	JP Z,70ABh
00007292:	LD E,A
00007293:	POP BC
00007294:	POP HL
00007295:	POP IX
00007297:	EXX
00007298:	EX DE,HL
00007299:	LD SP,(705Bh)
0000729D:	CP (HL)
0000729E:	JP Z,70B8h
000072A1:	LD DE,0007h
000072A4:	ADD HL,DE
000072A5:	EX DE,HL
000072A6:	LD HL,7392h
000072A9:	LD C,08h
000072AB:	INC HL
000072AC:	LD B,08h
000072AE:	RL (HL)
000072B0:	PUSH DE
000072B1:	EX DE,HL
000072B2:	PUSH BC
000072B3:	PUSH IX
000072B5:	POP BC
000072B6:	LD A,B
000072B7:	SUB (HL)
000072B8:	LD B,A
000072B9:	DEC HL
000072BA:	LD A,C
000072BB:	SBC (HL)
000072BC:	LD C,A
000072BD:	PUSH BC
000072BE:	POP IX
000072C0:	POP BC
000072C1:	DEC HL
000072C2:	EXX
000072C3:	LD A,H
000072C4:	EXX
000072C5:	SBC (HL)
000072C6:	EXX
000072C7:	LD H,A
000072C8:	LD A,L
000072C9:	EXX
000072CA:	DEC HL
000072CB:	SBC (HL)
000072CC:	EXX
000072CD:	LD L,A
000072CE:	LD A,B
000072CF:	EXX
000072D0:	DEC HL
000072D1:	SBC (HL)
000072D2:	EXX
000072D3:	LD B,A
000072D4:	LD A,C
000072D5:	EXX
000072D6:	DEC HL
000072D7:	SBC (HL)
000072D8:	EXX
000072D9:	LD C,A
000072DA:	LD A,D
000072DB:	EXX
000072DC:	DEC HL
000072DD:	PUSH BC
000072DE:	LD C,(HL)
000072DF:	SET 7,C
000072E1:	SBC C
000072E2:	POP BC
000072E3:	EXX
000072E4:	LD D,A
000072E5:	LD A,E
000072E6:	SBC 00h
000072E8:	LD E,A
000072E9:	EXX
000072EA:	EX DE,HL
000072EB:	POP DE
000072EC:	PUSH DE
000072ED:	SET 0,(HL)
000072EF:	JR NC,+37h
000072F1:	RES 0,(HL)
000072F3:	EX DE,HL
000072F4:	PUSH BC
000072F5:	PUSH IX
000072F7:	POP BC
000072F8:	LD A,B
000072F9:	ADD (HL)
000072FA:	LD B,A
000072FB:	DEC HL
000072FC:	LD A,C
000072FD:	ADC (HL)
000072FE:	LD C,A
000072FF:	PUSH BC
00007300:	POP IX
00007302:	POP BC
00007303:	DEC HL
00007304:	LD A,(HL)
00007305:	EXX
00007306:	ADC H
00007307:	LD H,A
00007308:	EXX
00007309:	DEC HL
0000730A:	LD A,(HL)
0000730B:	EXX
0000730C:	ADC L
0000730D:	LD L,A
0000730E:	EXX
0000730F:	DEC HL
00007310:	LD A,(HL)
00007311:	EXX
00007312:	ADC B
00007313:	LD B,A
00007314:	EXX
00007315:	DEC HL
00007316:	LD A,(HL)
00007317:	EXX
00007318:	ADC C
00007319:	LD C,A
0000731A:	EXX
0000731B:	DEC HL
0000731C:	LD A,(HL)
0000731D:	EXX
0000731E:	SET 7,A
00007320:	ADC D
00007321:	LD D,A
00007322:	LD A,E
00007323:	ADC 00h
00007325:	LD E,A
00007326:	EXX
00007327:	EX DE,HL
00007328:	POP DE
00007329:	PUSH IX
0000732B:	EX HL,(SP)
0000732C:	SLA H
0000732E:	RL L
00007330:	EX HL,(SP)
00007331:	POP IX
00007333:	EXX
00007334:	RL H
00007336:	RL L
00007338:	RL B
0000733A:	RL C
0000733C:	RL D
0000733E:	RL E
00007340:	EXX
00007341:	DEC B
00007342:	JP NZ,72AEh
00007345:	DEC C
00007346:	JP NZ,72ABh
00007349:	LD HL,739Ah
0000734C:	LD A,67h
0000734E:	ADD (HL)
0000734F:	LD (HL),A
00007350:	LD B,07h
00007352:	DEC HL
00007353:	LD A,00h
00007355:	ADC (HL)
00007356:	LD (HL),A
00007357:	DJNZ -07h
00007359:	XOR A
0000735A:	BIT 7,(HL)
0000735C:	JR NZ,+0Bh
0000735E:	LD HL,739Bh
00007361:	LD B,08h
00007363:	DEC HL
00007364:	RL (HL)
00007366:	DJNZ -05h
00007368:	SCF
00007369:	POP HL
0000736A:	POP DE
0000736B:	PUSH DE
0000736C:	PUSH HL
0000736D:	LD A,(HL)
0000736E:	CCF
0000736F:	ADC 80h
00007371:	LD C,A
00007372:	LD A,00h
00007374:	ADC A
00007375:	LD B,A
00007376:	EX DE,HL
00007377:	LD A,C
00007378:	SUB (HL)
00007379:	EX DE,HL
0000737A:	LD C,A
0000737B:	LD A,B
0000737C:	SBC 00h
0000737E:	JP C,70ABh
00007381:	JP NZ,6EE4h
00007384:	LD (HL),C
00007385:	INC HL
00007386:	INC DE
00007387:	LD A,(DE)
00007388:	XOR (HL)
00007389:	RLCA
0000738A:	LD B,07h
0000738C:	JP 717Ch
0000738F:	NOP
00007390:	NOP
00007391:	NOP
00007392:	NOP
00007393:	NOP
00007394:	NOP
00007395:	NOP
00007396:	NOP
00007397:	NOP
00007398:	NOP
00007399:	NOP
0000739A:	NOP
0000739B:	NOP
0000739C:	NOP
0000739D:	NOP
0000739E:	NOP
0000739F:	NOP
000073A0:	NOP
000073A1:	NOP
000073A2:	NOP

; LDIR1: (DE) = (FLONE), 8 bytes
000073A3:	LD HL,6298h		; FLONE

; LDIR5: (DE) = (HL), 8 bytes
000073A6:	LD BC,0008h
000073A9:	LDIR
000073AB:	RET

000073AC:	LD DE,6298h		; ONEADD:
000073AF:	JP 6CA6h		; ADD:

; ADDHL5:	pick 8 more bytes from the number queue (HL ptr)
000073B2:	EX DE,HL
000073B3:	LD HL,0008h
000073B6:	ADD HL,DE
000073B7:	EX DE,HL
000073B8:	RET

; 'SQR'
000073B9:	XOR A
000073BA:	CP (HL)
000073BB:	RET Z
000073BC:	INC HL
000073BD:	BIT 7,(HL)
000073BF:	DEC HL
000073C0:	JP NZ,1736h		; ERROR: Illegal function call
000073C3:	PUSH BC
000073C4:	LD DE,0008h
000073C7:	PUSH HL
000073C8:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000073C9:	LD (73D2h),HL
000073CC:	ADD HL,DE
000073CD:	LD (73E5h),HL
000073D0:	POP HL
000073D1:	LD DE,0000h
000073D4:	PUSH HL
000073D5:	PUSH DE
000073D6:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000073D9:	POP HL
000073DA:	LD A,(HL)
000073DB:	CP 82h
000073DD:	ADC 81h
000073DF:	DEC A
000073E0:	RRA
000073E1:	LD (HL),A
000073E2:	POP HL
000073E3:	PUSH HL
000073E4:	LD DE,0000h
000073E7:	PUSH DE
000073E8:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000073EB:	POP HL
000073EC:	LD DE,(73D2h)
000073F0:	CALL 70BDh		; DIV:
000073F3:	CALL 6CA6h		; ADD:
000073F6:	DEC (HL)
000073F7:	CALL 61D6h		; CMP:
000073FA:	JR Z,+05h
000073FC:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000073FF:	JR -1Fh
00007401:	POP DE
00007402:	PUSH DE
00007403:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007406:	POP HL
00007407:	POP BC
00007408:	RET

; 'SUM'
00007409:	CALL 6010h		; 'FIX'
0000740C:	LD A,(HL)
0000740D:	OR A
0000740E:	RET Z
0000740F:	INC HL
00007410:	BIT 7,(HL)
00007412:	DEC HL
00007413:	JP NZ,1736h		; ERROR: Illegal function call
00007416:	PUSH BC
00007417:	CALL 73B2h		; ADDHL5:	pick 8 more bytes from the number queue (HL ptr)
0000741A:	PUSH HL
0000741B:	PUSH DE
0000741C:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000741F:	POP HL
00007420:	CALL 73ACh		; ONEADD:
00007423:	EX DE,HL
00007424:	POP HL
00007425:	CALL 6FE0h		; MUL:
00007428:	DEC (HL)
00007429:	POP BC
0000742A:	RET

; 'FAC'
0000742B:	PUSH BC
0000742C:	CALL 6010h		; 'FIX'
0000742F:	LD A,(HL)
00007430:	OR A
00007431:	JR Z,+04h
00007433:	CP 82h
00007435:	JR NC,+08h
00007437:	PUSH HL
00007438:	EX DE,HL
00007439:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
0000743C:	POP HL
0000743D:	POP BC
0000743E:	RET

0000743F:	PUSH HL
00007440:	CALL 615Dh
00007443:	XOR A
00007444:	CP H
00007445:	JP NZ,6EE4h
00007448:	LD A,L
00007449:	CP 22h
0000744B:	JP NC,6EE4h
0000744E:	LD B,L
0000744F:	POP DE
00007450:	LD HL,0008h
00007453:	ADD HL,DE
00007454:	PUSH HL
00007455:	PUSH DE
00007456:	PUSH BC
00007457:	EX DE,HL
00007458:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
0000745B:	POP BC
0000745C:	POP DE
0000745D:	POP HL
0000745E:	PUSH BC
0000745F:	CALL 6FE0h		; MUL:
00007462:	PUSH HL
00007463:	EX DE,HL
00007464:	CALL 6BCEh		; ONESUB:
00007467:	EX DE,HL
00007468:	POP HL
00007469:	POP BC
0000746A:	DJNZ -0Eh
0000746C:	PUSH DE
0000746D:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007470:	POP HL
00007471:	POP BC
00007472:	RET

; ATNLM1
00007473:	LD A,(HL)
00007474:	LD C,H
; ATNLM2
00007475:	ADD B
00007476:	DEC HL

; 'ATN'
00007477:	PUSH BC
00007478:	INC HL
00007479:	LD A,(HL)
0000747A:	RES 7,(HL)
0000747C:	DEC HL
0000747D:	PUSH AF
0000747E:	CALL 7488h		; ATN2:
00007481:	POP AF
00007482:	POP BC
00007483:	RLCA
00007484:	RET NC
00007485:	JP 6BEBh		; TOGLE:  toggle number sign

; ATN2:
00007488:	CALL 61D3h		; ONECMP:
0000748B:	JR C,+20h		; ATN1:
0000748D:	CALL 73B2h		; ADDHL5:	pick 8 more bytes from the number queue (HL ptr)
00007490:	PUSH DE
00007491:	PUSH HL
00007492:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007495:	POP DE
00007496:	PUSH DE
00007497:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
0000749A:	POP HL
0000749B:	POP DE
0000749C:	CALL 70BDh		; DIV:
0000749F:	CALL 74ADh		; ATN1:
000074A2:	LD DE,7778h		; FLTPAI  (Greek PI)
000074A5:	INC (HL)
000074A6:	CALL 6BD1h		; SUB:
000074A9:	DEC (HL)
000074AA:	JP 6BC0h		; 'ABS'

; ATN1:
000074AD:	LD A,FFh
000074AF:	LD (7603h),A 	; SINSGN ..Self Modifying Code
000074B2:	LD DE,7473h		; ATNLM1
000074B5:	CALL 61D6h		; CMP:
000074B8:	JR C,+4Fh
000074BA:	LD DE,7475h		; ATNLM2
000074BD:	CALL 61D6h		; CMP:
000074C0:	PUSH AF
000074C1:	CALL 73B2h		; ADDHL5:	pick 8 more bytes from the number queue (HL ptr)
000074C4:	POP AF
000074C5:	PUSH HL
000074C6:	PUSH DE
000074C7:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000074CA:	POP HL
000074CB:	JR C,+14h		; ATNMID:
000074CD:	CALL 73ACh		; ONEADD:
000074D0:	EX HL,(SP)
000074D1:	CALL 6BD1h		; SUB:
000074D4:	POP DE
000074D5:	CALL 70BDh		; DIV:
000074D8:	CALL 7509h		; ATNCUL:
000074DB:	LD DE,774Ah		; FLTQPI (PI/4)
000074DE:	JP 6CA6h		; ADD:
; ATNMID:
000074E1:	LD DE,7501h		; SQRTMO
000074E4:	CALL 6FE0h		; MUL:
000074E7:	CALL 73ACh		; ONEADD:
000074EA:	EX HL,(SP)
000074EB:	LD DE,7501h		; SQRTMO
000074EE:	CALL 6BD1h		; SUB:
000074F1:	POP DE
000074F2:	CALL 70BDh		; DIV:
000074F5:	CALL 7509h		; ATNCUL:
000074F8:	INC (HL)
000074F9:	LD DE,774Ah		; FLTQPI (PI/4)
000074FC:	CALL 6CA6h		; ADD:
000074FF:	DEC (HL)
00007500:	RET

; SQRTMO
00007501:	LD A,A
00007502:	LD D,H
00007503:	INC DE
00007504:	CALL Z,E7CFh
00007507:	LD A,C
00007508:	SUB B

; ATNCUL:
00007509:	PUSH BC
0000750A:	PUSH HL
0000750B:	LD (75F3h),HL
0000750E:	LD DE,0008h
00007511:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00007512:	LD (75E3h),HL	; SNFAC1 ..Self Modifying Code
00007515:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00007516:	LD (75C8h),HL
00007519:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
0000751A:	LD (75DBh),HL	; SNFAC3
0000751D:	EX DE,HL
0000751E:	POP HL
0000751F:	PUSH HL
00007520:	PUSH DE
00007521:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007524:	POP HL
00007525:	LD E,L
00007526:	LD D,H
00007527:	CALL 6FE0h		; MUL:
0000752A:	LD DE,(75C8h)
0000752E:	POP HL
0000752F:	PUSH HL
00007530:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007533:	LD A,(IY+00h)	; data type, aka PRCSON
00007536:	DEC A
00007537:	CP 03h			; single precision ? (type = 4-1)
00007539:	LD B,A
0000753A:	LD HL,76FAh
0000753D:	JP Z,75D5h
00007540:	LD B,0Ah
00007542:	JP 75D5h

; 'COS'
00007545:	PUSH BC
00007546:	LD A,(HL)
00007547:	OR A
00007548:	JP Z,7437h
0000754B:	LD DE,774Ah		; FLTQPI (PI/4)
0000754E:	DEC (HL)
0000754F:	CALL 6BD1h		; SUB:
00007552:	INC (HL)
00007553:	CALL 6BEBh		; TOGLE:  toggle number sign
00007556:	POP BC
; 'SIN'
00007557:	PUSH BC
00007558:	PUSH HL
00007559:	INC HL
0000755A:	LD A,(HL)
0000755B:	RES 7,(HL)
0000755D:	AND 80h
0000755F:	CPL
00007560:	LD (7603h),A 	; SINSGN ..Self Modifying Code
00007563:	DEC HL
00007564:	CALL 73B2h		; ADDHL5:	pick 8 more bytes from the number queue (HL ptr)
00007567:	LD HL,774Ah		; FLTQPI (PI/4)
0000756A:	PUSH DE
0000756B:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000756E:	POP HL
0000756F:	INC (HL)
00007570:	INC (HL)
00007571:	INC (HL)
00007572:	EX DE,HL
00007573:	POP HL
00007574:	PUSH HL
00007575:	CALL 61D6h		; CMP:
00007578:	CALL NC,614Fh
0000757B:	EX DE,HL
0000757C:	DEC (HL)
0000757D:	EX DE,HL
0000757E:	CALL 61D6h		; CMP:
00007581:	JR C,+0Bh
00007583:	CALL 6BD1h		; SUB:
00007586:	LD A,(7603h) 	; SINSGN ..Self Modifying Code
00007589:	XOR 80h
0000758B:	LD (7603h),A 	; SINSGN ..Self Modifying Code
0000758E:	EX DE,HL
0000758F:	DEC (HL)
00007590:	EX DE,HL
00007591:	CALL 61D6h		; CMP:
00007594:	JR C,+08h
00007596:	DEC (HL)
00007597:	CALL 6BD1h		; SUB:
0000759A:	INC (HL)
0000759B:	CALL 6BC0h		; 'ABS'
0000759E:	LD (75F3h),HL
000075A1:	LD DE,0008h
000075A4:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000075A5:	LD (75E3h),HL	; SNFAC1 ..Self Modifying Code
000075A8:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000075A9:	LD (75C8h),HL	; SNFAC2 ..Self Modifying Code
000075AC:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000075AD:	LD (75DBh),HL	; SNFAC3
000075B0:	EX DE,HL
000075B1:	POP HL
000075B2:	PUSH DE
000075B3:	LD DE,774Ah		; FLTQPI (PI/4)
000075B6:	CALL 61D6h		; CMP:
000075B9:	JR NC,+60h
000075BB:	POP DE
000075BC:	PUSH HL
000075BD:	PUSH DE
000075BE:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000075C1:	POP HL
000075C2:	LD E,L
000075C3:	LD D,H
000075C4:	CALL 6FE0h		; MUL:
000075C7:	LD DE,0000h		; SNFAC2 ..Self Modifying Code
000075CA:	POP HL
000075CB:	PUSH HL
000075CC:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000075CF:	LD B,(IY+00h)	; data type, aka PRCSON
000075D2:	LD HL,767Ah		; SINTBL
; SIN6:
000075D5:	PUSH BC
000075D6:	PUSH HL
000075D7:	LD HL,(75C8h)	; SNFAC2 ..Self Modifying Code
000075DA:	LD DE,0000h		; SNFAC3
000075DD:	CALL 6FE0h		; MUL:
000075E0:	POP HL
000075E1:	PUSH HL
000075E2:	LD DE,0000h		; SNFAC1 ..Self Modifying Code
000075E5:	PUSH DE
000075E6:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000075E9:	POP HL
000075EA:	LD DE,(75C8h)	; SNFAC2 ..Self Modifying Code
000075EE:	CALL 6FE0h		; MUL:
000075F1:	EX DE,HL
000075F2:	LD HL,0000h		; SNFAC2 ..Self Modifying Code
000075F5:	CALL 6CA6h		; ADD:
000075F8:	POP HL
000075F9:	LD DE,0008h
000075FC:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000075FD:	POP BC
000075FE:	DJNZ -2Bh
00007600:	POP HL
00007601:	POP BC
00007602:	LD A,00h		; SINSGN ..Self Modifying Code
00007604:	INC HL
00007605:	XOR (HL)
00007606:	CPL
00007607:	LD (HL),A
00007608:	DEC HL
00007609:	LD A,(IY+00h)	; data type, aka PRCSON
0000760C:	CP 08h			; double precision ?
0000760E:	LD A,(HL)
0000760F:	JR Z,+06h
00007611:	CP 6Ch		; ADJUST
00007613:	RET NC
00007614:	JP 28A9h		; CLRFAC: Set FP accumulator to 0
; SIN8:
00007617:	CP 4Dh		; ADJUST
00007619:	JR -08h
0000761B:	DEC (HL)
0000761C:	LD DE,774Ah		; FLTQPI (PI/4)
0000761F:	CALL 6BD1h		; SUB:
00007622:	INC (HL)
00007623:	CALL 6BC0h		; 'ABS'
00007626:	POP DE
00007627:	PUSH HL
00007628:	PUSH DE
00007629:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000762C:	POP HL
0000762D:	LD E,L
0000762E:	LD D,H
0000762F:	CALL 6FE0h		; MUL:
00007632:	LD DE,(75C8h)	; SNFAC2 ..Self Modifying Code
00007636:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00007639:	POP DE
0000763A:	PUSH DE
0000763B:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
0000763E:	LD B,(IY+00h)	; data type, aka PRCSON
00007641:	LD HL,76BAh		; COSTBL
00007644:	JR -71h			; SIN6:

; 'TAN'
00007646:	PUSH BC
00007647:	PUSH HL
00007648:	LD DE,0008h
0000764B:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
0000764C:	LD (766Eh),HL	; SNFAC4 ..Self Modifying Code
0000764F:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00007650:	LD (7663h),HL	; SNFAC5 ..Self Modifying Code
00007653:	EX DE,HL
00007654:	POP HL
00007655:	PUSH HL
00007656:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007659:	LD HL,(766Eh)	; SNFAC4 ..Self Modifying Code
0000765C:	EX DE,HL
0000765D:	POP HL
0000765E:	PUSH HL
0000765F:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007662:	LD HL,0000h		; SNFAC5 ..Self Modifying Code
00007665:	CALL 7557h		; 'SIN'
00007668:	POP DE
00007669:	PUSH DE
0000766A:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000766D:	LD HL,0000h		; SNFAC4 ..Self Modifying Code
00007670:	CALL 7545h		; 'COS'
00007673:	EX DE,HL
00007674:	POP HL
00007675:	CALL 70BDh		; DIV:
00007678:	POP BC
00007679:	RET

; SINTBL
0000767A:	LD A,(HL)
0000767B:	XOR D
0000767C:	XOR D
0000767D:	XOR D
0000767E:	XOR D
0000767F:	XOR D
00007680:	XOR D
00007681:	XOR E
00007682:	LD A,D
00007683:	EX AF,AF'
00007684:	ADC B
00007685:	ADC B
00007686:	ADC B
00007687:	ADC B
00007688:	ADC B
00007689:	ADC C
0000768A:	LD (HL),H
0000768B:	RET NC
0000768C:	DEC C
0000768D:	NOP
0000768E:	RET NC
0000768F:	DEC C
00007690:	NOP
00007691:	RET NC
00007692:	LD L,(HL)
00007693:	JR C,-11h
00007695:	DEC E
00007696:	LD HL,(39B6h)
00007699:	SBC H
0000769A:	LD H,A
0000769B:	RST 10h
0000769C:	LD (3F2Bh),A
0000769F:	XOR D
000076A0:	DAA
000076A1:	INC E
000076A2:	LD H,B
000076A3:	JR NC,-6Eh
000076A5:	JR NC,-63h
000076A7:	LD B,E
000076A8:	LD L,B
000076A9:	LD C,H
000076AA:	LD E,B
000076AB:	RST 10h
000076AC:	CCF
000076AD:	SBC A
000076AE:	ADD HL,SP
000076AF:	SBC L
000076B0:	RET NZ
000076B1:	LD SP,HL
000076B2:	LD D,B
000076B3:	LD C,D
000076B4:	SUB (HL)
000076B5:	DEC SP
000076B6:	ADD C
000076B7:	ADD L
000076B8:	LD L,D
000076B9:	LD D,E

; COSTBL
000076BA:	ADD B
000076BB:	ADD B
000076BC:	NOP
000076BD:	NOP
000076BE:	NOP
000076BF:	NOP
000076C0:	NOP
000076C1:	NOP
000076C2:	LD A,H
000076C3:	LD HL,(AAAAh)
000076C6:	XOR D
000076C7:	XOR D
000076C8:	XOR D
000076C9:	XOR E
000076CA:	LD (HL),A
000076CB:	OR (HL)
000076CC:	DEC BC
000076CD:	LD H,B
000076CE:	OR (HL)
000076CF:	DEC BC
000076D0:	LD H,B
000076D1:	OR A
000076D2:	LD (HL),C
000076D3:	LD D,B
000076D4:	DEC C
000076D5:	NOP
000076D6:	RET NC
000076D7:	DEC C
000076D8:	NOP
000076D9:	POP DE
000076DA:	LD L,E
000076DB:	SUB E
000076DC:	JP P,BB7Dh
000076DF:	CALL NZ,E4FAh
000076E2:	LD H,H
000076E3:	RRCA
000076E4:	HALT
000076E5:	RST 00h
000076E6:	LD A,A
000076E7:	ADD C4h
000076E9:	CP (HL)
000076EA:	LD E,H
000076EB:	RET
000076EC:	RES 4,L
000076EE:	LD B,(HL)
000076EF:	INC BC
000076F0:	CALL PO,54EAh
000076F3:	LD D,A
000076F4:	CCF
000076F5:	SBC A
000076F6:	ADD HL,SP
000076F7:	SBC L
000076F8:	RET NZ
000076F9:	LD SP,HL
000076FA:	LD A,A
000076FB:	XOR D
000076FC:	XOR D
000076FD:	XOR D
000076FE:	XOR D
000076FF:	XOR D
00007700:	XOR D
00007701:	XOR E
00007702:	LD A,(HL)
00007703:	LD C,H
00007704:	CALL Z,CCCCh
00007707:	CALL Z,CDCCh
0000770A:	LD A,(HL)
0000770B:	SUB D
0000770C:	LD C,C
0000770D:	INC H
0000770E:	SUB D
0000770F:	LD C,C
00007710:	INC H
00007711:	SUB E
00007712:	LD A,L
00007713:	LD H,E
00007714:	ADC (HL)
00007715:	JR C,-1Dh
00007717:	ADC (HL)
00007718:	JR C,-1Ch
0000771A:	LD A,L
0000771B:	CP D
0000771C:	LD L,8Bh
0000771E:	AND D
0000771F:	RET PE
00007720:	CP D
00007721:	CPL
00007722:	LD A,L
00007723:	DEC E
00007724:	ADC C
00007725:	RET C
00007726:	SBC L
00007727:	ADC C
00007728:	RET C
00007729:	SBC (HL)
0000772A:	LD A,L
0000772B:	ADC B
0000772C:	ADC B
0000772D:	ADC B
0000772E:	ADC B
0000772F:	ADC B
00007730:	ADC B
00007731:	ADC C
00007732:	LD A,H
00007733:	LD (HL),B
00007734:	RET P
00007735:	RET P
00007736:	RET P
00007737:	RET P
00007738:	RET P
00007739:	POP AF
0000773A:	LD A,H
0000773B:	RST 10h
0000773C:	SUB H
0000773D:	DEC (HL)
0000773E:	PUSH HL
0000773F:	DEC C
00007740:	LD A,C
00007741:	LD B,H
00007742:	LD A,H
00007743:	LD B,E
00007744:	INC C
00007745:	JR NC,-3Dh
00007747:	INC C
00007748:	JR NC,-3Ch

; FLTQPI (PI/4)
0000774A:	ADD B
0000774B:	LD C,C
0000774C:	RRCA
0000774D:	JP C,21A2h
00007750:	LD L,B
;00007751:	JP NZ,B77Eh

; 'SGN'
00007752:	LD A,(HL)
00007753:	OR A
00007754:	RET Z
00007755:	INC HL
00007756:	BIT 7,(HL)
00007758:	DEC HL
00007759:	JR NZ,+09h
0000775B:	PUSH HL
0000775C:	EX DE,HL
0000775D:	PUSH BC
0000775E:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00007761:	POP BC
00007762:	POP HL
00007763:	RET

00007764:	CALL 775Bh
00007767:	JP 6BEBh		; TOGLE:  toggle number sign

; 'RAD'
0000776A:	LD DE,7780h
0000776D:	JR +03h

; 'PAI'
0000776F:	LD DE,7778h		; FLTPAI  (Greek PI)
00007772:	PUSH BC
00007773:	CALL 6FE0h		; MUL:
00007776:	POP BC
00007777:	RET

; FLTPAI  (Greek PI)
00007778:	ADD D
00007779:	LD C,C
0000777A:	RRCA
0000777B:	JP C,21A2h
0000777E:	LD L,B
0000777F:	JP NZ,0E7Bh
00007782:	JP M,1235h
00007785:	SUB H
00007786:	LD PC,HL
00007787:	RET

; 'INP'
00007788:	PUSH HL
00007789:	PUSH BC
0000778A:	CALL 6167h		; HLFLT
0000778D:	LD B,H
0000778E:	LD C,L
0000778F:	IN A,(C)
00007791:	LD E,A
00007792:	LD D,00h
00007794:	POP BC
00007795:	POP HL
00007796:	JP 2902h		; FLTHEX:  (HL)=DE

; 'RND'
00007799:	PUSH BC
0000779A:	LD DE,(77C8h)		; SEED
0000779E:	LD A,R
000077A0:	XOR D
000077A1:	RRC A
000077A3:	RRC A
000077A5:	RRC A
000077A7:	LD D,A
000077A8:	LD A,R
000077AA:	XOR E
000077AB:	RLC A
000077AD:	RLC A
000077AF:	LD E,D
000077B0:	LD D,A
000077B1:	LD (77C8h),DE		; SEED
000077B5:	PUSH HL
000077B6:	INC HL
000077B7:	RES 7,D
000077B9:	LD (HL),D
000077BA:	INC HL
000077BB:	LD (HL),E
000077BC:	INC HL
000077BD:	LD A,R
000077BF:	LD (HL),A
000077C0:	POP HL
000077C1:	LD (HL),81h
000077C3:	CALL 6BCEh		; ONESUB:
000077C6:	POP BC
000077C7:	RET

; 'SEED' (RANDOMIZE, etc..)
000077C8:	SUB E
000077C9:	LD B,C
; 'EXP'
000077CA:	PUSH BC
000077CB:	LD A,(HL)
000077CC:	OR A
000077CD:	JP Z,7437h
000077D0:	INC HL
000077D1:	LD A,(HL)
000077D2:	LD (7897h),A
000077D5:	RES 7,(HL)
000077D7:	DEC HL
000077D8:	LD DE,7A2Fh
000077DB:	CALL 6FE0h		; MUL:
000077DE:	PUSH HL
000077DF:	CALL 73B2h		; ADDHL5:	pick 8 more bytes from the number queue (HL ptr)
000077E2:	PUSH DE
000077E3:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000077E6:	POP HL
000077E7:	CALL 6010h		; 'FIX'
000077EA:	PUSH HL
000077EB:	CALL 6167h		; HLFLT
000077EE:	XOR A
000077EF:	CP H
000077F0:	JP NZ,6EE4h
000077F3:	LD A,L
000077F4:	LD (788Ch),A
000077F7:	POP DE
000077F8:	POP HL
000077F9:	PUSH HL
000077FA:	CALL 6BD1h		; SUB:
000077FD:	PUSH DE
000077FE:	PUSH HL
000077FF:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00007802:	POP DE
00007803:	POP HL
00007804:	DEC (HL)
00007805:	EX DE,HL
00007806:	XOR A
00007807:	LD B,08h
00007809:	PUSH BC
0000780A:	PUSH AF
0000780B:	CALL 61D6h		; CMP:
0000780E:	JR C,+07h
00007810:	CALL 6BD1h		; SUB:
00007813:	POP AF
00007814:	SET 7,A
00007816:	PUSH AF
00007817:	POP AF
00007818:	RLC A
0000781A:	EX DE,HL
0000781B:	DEC (HL)
0000781C:	EX DE,HL
0000781D:	POP BC
0000781E:	DJNZ -17h
00007820:	LD (7877h),A
00007823:	PUSH DE
00007824:	LD DE,7A27h
00007827:	CALL 6FE0h		; MUL:
0000782A:	POP DE
0000782B:	PUSH DE
0000782C:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000782F:	POP HL
00007830:	BIT 3,(IY+00h)	; data type, aka PRCSON
00007834:	JP Z,78ADh
00007837:	INC (HL)
00007838:	LD DE,6290h		; FLTEN
0000783B:	CALL 6CA6h		; ADD:
0000783E:	DEC (HL)
0000783F:	POP DE
00007840:	PUSH DE
00007841:	CALL 6FE0h		; MUL:
00007844:	LD DE,6290h		; FLTEN
00007847:	DEC (HL)
00007848:	CALL 6CA6h		; ADD:
0000784B:	INC (HL)
0000784C:	POP DE
0000784D:	PUSH DE
0000784E:	CALL 6FE0h		; MUL:
00007851:	LD DE,7A1Fh
00007854:	CALL 6FE0h		; MUL:
00007857:	INC (HL)
00007858:	CALL 73ACh		; ONEADD:
0000785B:	DEC (HL)
0000785C:	POP DE
0000785D:	PUSH DE
0000785E:	CALL 6FE0h		; MUL:
00007861:	CALL 73ACh		; ONEADD:
00007864:	POP DE
00007865:	PUSH DE
00007866:	CALL 6FE0h		; MUL:
00007869:	CALL 73ACh		; ONEADD:
0000786C:	EX HL,(SP)
0000786D:	EX DE,HL
0000786E:	PUSH DE
0000786F:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
00007872:	POP HL
00007873:	LD DE,799Fh
00007876:	LD A,00h
00007878:	LD B,08h
0000787A:	RLC A
0000787C:	JR NC,+07h
0000787E:	PUSH AF
0000787F:	PUSH BC
00007880:	CALL 6FE0h		; MUL:
00007883:	POP BC
00007884:	POP AF
00007885:	CALL 5B4Ah
00007888:	DJNZ -10h
0000788A:	LD A,(HL)
0000788B:	ADD 00h
0000788D:	JP C,6EE4h
00007890:	LD (HL),A
00007891:	POP DE
00007892:	CALL 6FE0h		; MUL:
00007895:	POP BC
00007896:	LD A,00h
00007898:	RLC A
0000789A:	RET NC
0000789B:	PUSH BC
0000789C:	PUSH DE
0000789D:	PUSH HL
0000789E:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
000078A1:	POP DE
000078A2:	PUSH DE
000078A3:	CALL 73A3h		; LDIR1: (DE) = (FLONE), 8 bytes
000078A6:	POP HL
000078A7:	POP DE
000078A8:	CALL 70BDh		; DIV:
000078AB:	POP BC
000078AC:	RET

000078AD:	POP DE
000078AE:	PUSH DE
000078AF:	CALL 6FE0h		; MUL:
000078B2:	LD A,(HL)
000078B3:	OR A
000078B4:	JR Z,+01h
000078B6:	DEC (HL)
000078B7:	CALL 6CA6h		; ADD:
000078BA:	JP 7869h

; 'LOG'
000078BD:	PUSH BC
000078BE:	INC HL
000078BF:	LD A,(HL)
000078C0:	RLC A
000078C2:	JP C,1736h		; ERROR: Illegal function call
000078C5:	DEC HL
000078C6:	LD A,(HL)
000078C7:	OR A
000078C8:	JP Z,1736h		; ERROR: Illegal function call
000078CB:	SUB 81h
000078CD:	LD (790Ch),A	; LOGEXP
000078D0:	LD (HL),81h
000078D2:	XOR A
000078D3:	LD B,08h
000078D5:	LD DE,799Fh		; EXDTBL
000078D8:	PUSH BC
000078D9:	PUSH AF
000078DA:	CALL 61D6h		; CMP:
000078DD:	JR C,+0Fh
000078DF:	PUSH HL
000078E0:	LD HL,0040h
000078E3:	ADD HL,DE
000078E4:	EX DE,HL
000078E5:	EX HL,(SP)
000078E6:	CALL 6FE0h		; MUL:
000078E9:	POP DE
000078EA:	POP AF
000078EB:	SET 7,A
000078ED:	PUSH AF
000078EE:	POP AF
000078EF:	RLC A
000078F1:	CALL 5B4Ah
000078F4:	POP BC
000078F5:	DJNZ -1Fh
000078F7:	LD (7944h),HL	; SNFAC0
000078FA:	LD DE,0008h		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
000078FD:	ADD HL,DE
000078FE:	LD E,A
000078FF:	LD D,00h
00007901:	CALL 2902h		; FLTHEX:  (HL)=DE
00007904:	LD A,(HL)
00007905:	OR A
00007906:	JR Z,+03h
00007908:	SUB 08h
0000790A:	LD (HL),A
0000790B:	LD A,00h
0000790D:	CP 80h
0000790F:	JR C,+02h
00007911:	NEG
00007913:	PUSH HL
00007914:	LD DE,0008h
00007917:	ADD HL,DE		; {ADDHL5: / LDIR5:}	pick 8 more bytes from the number queue (HL ptr)
00007918:	LD (7941h),HL	; SNFAC1
0000791B:	LD E,A
0000791C:	LD D,00h
0000791E:	CALL 2902h		; FLTHEX:  (HL)=DE
00007921:	LD A,(790Ch)	; LOGEXP
00007924:	AND 80h
00007926:	INC HL
00007927:	OR (HL)
00007928:	LD (HL),A
00007929:	DEC HL
0000792A:	EX DE,HL
0000792B:	POP HL
0000792C:	CALL 6CA6h		; ADD:
0000792F:	LD A,(IY+00h)		; data type, aka PRCSON
00007932:	LD DE,7A37h
00007935:	CP 04h		; single precision variable type?
00007937:	JR Z,+03h
00007939:	LD DE,7A27h
0000793C:	CALL 6FE0h		; MUL:
0000793F:	PUSH HL
00007940:	LD DE,0000h		; SNFAC1
00007943:	LD HL,0000h		; SNFAC0
00007946:	PUSH HL
00007947:	PUSH DE
00007948:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000794B:	POP HL
0000794C:	CALL 73ACh		; ONEADD:
0000794F:	EX HL,(SP)
00007950:	CALL 6BD1h		; SUB:
00007953:	POP DE
00007954:	CALL 70BDh		; DIV:
00007957:	PUSH DE
00007958:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
0000795B:	POP HL
0000795C:	PUSH DE
0000795D:	LD E,L
0000795E:	LD D,H
0000795F:	CALL 6FE0h		; MUL:
00007962:	POP DE
00007963:	PUSH HL
00007964:	PUSH DE
00007965:	CALL 73A6h		; LDIR5: (DE) = (HL), 8 bytes
00007968:	POP HL
00007969:	LD DE,7997h
0000796C:	CALL 6CA6h		; ADD:
0000796F:	EX DE,HL
00007970:	POP HL
00007971:	CALL 6FE0h		; MUL:
00007974:	LD DE,6290h		; FLTEN
00007977:	INC (HL)
00007978:	CALL 6CA6h		; ADD:
0000797B:	DEC (HL)
0000797C:	EX DE,HL
0000797D:	LD HL,(7944h)	; SNFAC0
00007980:	CALL 6FE0h		; MUL:
00007983:	LD DE,798Fh
00007986:	CALL 6FE0h		; MUL:
00007989:	POP DE
0000798A:	CALL 6CA6h		; ADD:
0000798D:	POP BC
0000798E:	RET

0000798F:	LD A,A
00007990:	LD C,H
00007991:	CALL Z,CCCCh
00007994:	CALL Z,CDCCh
00007997:	ADD C
00007998:	LD D,L
00007999:	LD D,L
0000799A:	LD D,L
0000799B:	LD D,L
0000799C:	LD D,L
0000799D:	LD D,L
0000799E:	LD D,L
0000799F:	ADD C
000079A0:	DEC (HL)
000079A1:	INC B
000079A2:	DI
000079A3:	INC SP
000079A4:	LD SP,HL
000079A5:	SBC 65h
000079A7:	ADD C
000079A8:	JR +37h
000079AA:	RET P
000079AB:	LD D,C
000079AC:	ADC L
000079AD:	CP B
000079AE:	XOR D
000079AF:	ADD C
000079B0:	DEC BC
000079B1:	SUB L
000079B2:	POP BC
000079B3:	EX HL,(SP)
000079B4:	JP PE,D78Bh
000079B7:	ADD C
000079B8:	DEC B
000079B9:	XOR D
000079BA:	JP CC67h

000079BD:	LD C,B
000079BE:	LD A,E
000079BF:	ADD C
000079C0:	LD (BC),A
000079C1:	CALL 9886h
000079C4:	XOR H
000079C5:	DEC HL
000079C6:	AND D
000079C7:	ADD C
000079C8:	LD BC,D164h
000079CB:	DI
000079CC:	CP H
000079CD:	INC BC
000079CE:	EX AF,AF'
000079CF:	ADD C
000079D0:	NOP
000079D1:	OR C
000079D2:	LD R,A
000079D4:	EXX
000079D5:	SBC C
000079D6:	XOR H
000079D7:	ADD C
000079D8:	NOP
000079D9:	LD E,B
000079DA:	RST 10h
000079DB:	JP NC,E5D5h
000079DE:	RST 30h
000079DF:	ADD B
000079E0:	DEC (HL)
000079E1:	INC B
000079E2:	DI
000079E3:	INC SP
000079E4:	LD SP,HL
000079E5:	SBC 65h
000079E7:	ADD B
000079E8:	LD D,A
000079E9:	LD B,H
000079EA:	CALL M,D6CAh
000079ED:	SBC L
000079EE:	LD L,E
000079EF:	ADD B
000079F0:	LD L,D
000079F1:	RET NZ
000079F2:	ADD E7h
000079F4:	INC IXh
000079F6:	LD A,(7580h)
000079F9:	DEC H
000079FA:	LD A,L
000079FB:	DEC D
000079FC:	INC H
000079FD:	ADD (HL)
000079FE:	CALL 7A80h
00007A01:	ADD E
00007A02:	OR D
00007A03:	INA (72h)
00007A05:	LD HL,(8003h)
00007A08:	LD A,L
00007A09:	LD A,0Ch
00007A0B:	INC C
00007A0C:	CALL P,C186h
00007A0F:	ADD B
00007A10:	LD A,(HL)
00007A11:	SBC (HL)
00007A12:	LD DE,7B5Ch
00007A15:	ADC A
00007A16:	ADC B
00007A17:	ADD B
00007A18:	LD A,A
00007A19:	LD C,(HL)
00007A1A:	BIT 3,C
00007A1C:	LD D,C
00007A1D:	LD E,C9h
00007A1F:	LD A,D
00007A20:	EX AF,AF'
00007A21:	ADC B
00007A22:	ADC B
00007A23:	ADC B
00007A24:	ADC B
00007A25:	ADC B
00007A26:	ADC C
00007A27:	ADD B
00007A28:	LD SP,1772h
00007A2B:	RST 30h
00007A2C:	POP DE
00007A2D:	RST 08h
00007A2E:	LD A,D
00007A2F:	ADD C
00007A30:	JR C,-56h
00007A32:	DEC SP
00007A33:	ADD HL,HL
00007A34:	LD E,H
00007A35:	RLA
00007A36:	POP AF
00007A37:	ADD B
00007A38:	LD SP,1872h
; VARED
00007A3B:	ADC C
00007A3C:	LD A,H
00007A3D:	NOP
00007A3E:	NOP
; TMPEND
00007A3F:	NOP
00007A40:	NOP
00007A41:	NOP
00007A42:	NOP
00007A43:	NOP
00007A44:	NOP
00007A45:	NOP
00007A46:	NOP
00007A47:	NOP
00007A48:	NOP
00007A49:	NOP
00007A4A:	NOP
00007A4B:	NOP
00007A4C:	NOP
00007A4D:	NOP
00007A4E:	NOP
00007A4F:	INC C
00007A50:	LD D,E
00007A51:	LD B,C
00007A52:	LD C,L
00007A53:	LD D,E
00007A54:	LD D,L
00007A55:	LD C,(HL)
00007A56:	LD B,A
00007A57:	JR NZ,+48h
00007A59:	LD D,L
00007A5A:	LD B,D
00007A5B:	LD B,C
00007A5C:	LD D,E
00007A5D:	LD C,C
00007A5E:	LD B,E
00007A5F:	JR NZ,+56h
00007A61:	LD SP,302Eh
00007A64:	DEC C
00007A65:	LD B,E
00007A66:	LD C,A
00007A67:	LD D,B
00007A68:	LD E,C
00007A69:	LD D,D
00007A6A:	LD C,C
00007A6B:	LD B,A
00007A6C:	LD C,B
00007A6D:	LD D,H
00007A6E:	JR NZ,+28h
00007A70:	LD B,E
00007A71:	ADD HL,HL
00007A72:	JR NZ,+31h
00007A74:	ADD HL,SP
00007A75:	JR C,+32h
00007A77:	DEC C
00007A78:	JR NZ,+20h
00007A7A:	JR NZ,+20h
00007A7C:	JR NZ,+20h
00007A7E:	JR NZ,+42h
00007A80:	LD E,C
00007A81:	JR NZ,+48h
00007A83:	LD D,L
00007A84:	LD B,H
00007A85:	LD D,E
00007A86:	LD C,A
00007A87:	LD C,(HL)
00007A88:	JR NZ,+53h
00007A8A:	LD C,A
00007A8B:	LD B,(HL)
00007A8C:	LD D,H
00007A8D:	DEC C


00007A8E:	NOP
00007A8F:	NOP
00007A90:	NOP
00007A91:	NOP
00007A92:	NOP
00007A93:	NOP
00007A94:	NOP
00007A95:	NOP
00007A96:	NOP
00007A97:	NOP
00007A98:	NOP
00007A99:	NOP
00007A9A:	NOP
00007A9B:	NOP
00007A9C:	NOP
00007A9D:	NOP
00007A9E:	NOP
00007A9F:	NOP
00007AA0:	NOP
00007AA1:	NOP
00007AA2:	NOP
00007AA3:	NOP
00007AA4:	NOP
00007AA5:	NOP
00007AA6:	NOP
00007AA7:	NOP
00007AA8:	NOP
00007AA9:	NOP
00007AAA:	NOP
00007AAB:	NOP
00007AAC:	NOP
00007AAD:	NOP
00007AAE:	NOP
00007AAF:	NOP
00007AB0:	NOP
00007AB1:	NOP
00007AB2:	NOP
00007AB3:	NOP
00007AB4:	NOP
00007AB5:	NOP
00007AB6:	NOP
00007AB7:	NOP
00007AB8:	NOP
00007AB9:	NOP
00007ABA:	NOP
00007ABB:	NOP
00007ABC:	NOP
00007ABD:	NOP
00007ABE:	NOP
00007ABF:	NOP
00007AC0:	NOP
00007AC1:	NOP
00007AC2:	NOP
00007AC3:	NOP
00007AC4:	NOP
00007AC5:	NOP
00007AC6:	NOP
00007AC7:	NOP
00007AC8:	NOP
00007AC9:	NOP
00007ACA:	NOP
00007ACB:	NOP
00007ACC:	NOP
00007ACD:	NOP
00007ACE:	NOP
00007ACF:	NOP
00007AD0:	NOP
00007AD1:	NOP
00007AD2:	NOP
00007AD3:	NOP
00007AD4:	NOP
00007AD5:	NOP
00007AD6:	NOP
00007AD7:	NOP
00007AD8:	NOP
00007AD9:	NOP
00007ADA:	NOP
00007ADB:	NOP
00007ADC:	NOP
00007ADD:	NOP
00007ADE:	NOP
00007ADF:	NOP
00007AE0:	NOP
00007AE1:	NOP
00007AE2:	NOP
00007AE3:	NOP
00007AE4:	NOP
00007AE5:	NOP
00007AE6:	NOP
00007AE7:	NOP
00007AE8:	NOP
00007AE9:	NOP
00007AEA:	NOP
00007AEB:	NOP
00007AEC:	NOP
00007AED:	NOP
00007AEE:	NOP
00007AEF:	NOP
00007AF0:	NOP
00007AF1:	NOP
00007AF2:	NOP
00007AF3:	NOP
00007AF4:	NOP
00007AF5:	NOP
00007AF6:	NOP
00007AF7:	NOP
00007AF8:	NOP
00007AF9:	NOP
00007AFA:	NOP
00007AFB:	NOP
00007AFC:	NOP
00007AFD:	NOP
00007AFE:	NOP
00007AFF:	NOP




; IPL, spcall.rom has it at 7B00h, 
; but the right location for this piece of code is FB00h

0000FB00:	LD HL,FB00h		;  FB00h -FFFFh
0000FB03:	LD DE,FB00h
0000FB06:	LD BC,0500h		; AHEXIN
0000FB09:	LDIR			; copy ROM to RAM

0000FB0B:	LD A,80h		; keyboard IPL routine
0000FB0D:	INA (09h)		; I/O address 8009h
0000FB0F:	AND 01h			; 1 bit..
0000FB11:	JR Z,+19h		; jp to LFB2C: if bit is reset

0000FB13:	LD HL,0000h
0000FB16:	LD DE,0000h
0000FB19:	LD BC,7B00h
0000FB1C:	LDIR			; copy ROM to RAM
0000FB1E:	LD BC,A000h		; RAM control
0000FB21:	IN A,(C)		; page in the RAM (we just copied the BASIC on it)
0000FB23:	LD HL,004Ah		; Change the entry for MAIN
0000FB26:	LD (0001h),HL	; 
0000FB29:	JP FF01h		; Continue with IPL, set SP, etc..

; LFB2C:
0000FB2C:	DI
0000FB2D:	CALL FE49h		; Initialize the system and video RAM
0000FB30:	LD DE,FC4Eh		; "SELECT BASIC (B) OR CP/M (C) ?"
0000FB33:	CALL FDFDh		; Print message in DE via IPL BIOS routine

0000FB36:	LD B,80h		; port 80xxh, check for keypress
0000FB38:	LD C,01h		; 'B' key
0000FB3A:	IN A,(C)
0000FB3C:	AND 10h			; bit mask
0000FB3E:	JR Z,+0Bh		; to FB4B

0000FB40:	LD C,03h		; 'C' key
0000FB42:	IN A,(C)
0000FB44:	AND 10h
0000FB46:	JR NZ,-12h		; back to FB36

0000FB48:	JP 0000h		; enter BASIC


0000FB4B:	LD DE,FC6Dh		; "BOOTING FROM FDD ----- .."

; IMDBUF - Direct command
0000FB4E:	CALL FDFDh		; Print message in DE via IPL BIOS routine
0000FB51:	LD B,C0h
0000FB53:	LD C,02h
0000FB55:	XOR A
0000FB56:	OUT (C),A		; C002h = FDD control port
0000FB58:	LD C,00h		; C000h
0000FB5A:	OUT (C),A		; output 0h
0000FB5C:	LD D,00h
0000FB5E:	CALL FBE8h		; send command to FDD
0000FB61:	LD D,07h
0000FB63:	CALL FBE8h		; send command to FDD
0000FB66:	CALL FC1Fh
0000FB69:	LD A,D
0000FB6A:	AND 10h
0000FB6C:	JR Z,-1Dh
0000FB6E:	JP FBBAh
0000FB71:	RET PE
0000FB72:	EI
0000FB73:	LD D,7Fh
0000FB75:	CALL FBF0h
0000FB78:	LD D,1Ch
0000FB7A:	CALL FBF0h
0000FB7D:	LD D,00h
0000FB7F:	CALL FBF0h
0000FB82:	LD D,02h
0000FB84:	CALL FBF0h
0000FB87:	LD D,0Fh
0000FB89:	CALL FBF0h
0000FB8C:	CALL FBF0h
0000FB8F:	LD D,0Bh
0000FB91:	CALL FBE8h		; send command to FDD
0000FB94:	LD D,7Fh
0000FB96:	CALL FBF0h
0000FB99:	LD D,1Ch
0000FB9B:	CALL FBF0h
0000FB9E:	LD D,00h
0000FBA0:	CALL FBF0h
0000FBA3:	LD D,03h
0000FBA5:	CALL FBF0h
0000FBA8:	CALL FC1Fh
0000FBAB:	LD A,D
0000FBAC:	CP 0Fh
0000FBAE:	JP NZ,FB5Ch
0000FBB1:	CALL FC1Fh
0000FBB4:	LD A,D
0000FBB5:	CP 0Fh
0000FBB7:	JP NZ,FB5Ch
0000FBBA:	LD D,02h
0000FBBC:	CALL FBE8h		; send command to FDD
0000FBBF:	LD D,01h
0000FBC1:	CALL FBF0h
0000FBC4:	LD D,00h
0000FBC6:	CALL FBF0h
0000FBC9:	LD D,00h
0000FBCB:	CALL FBF0h
0000FBCE:	LD D,01h
0000FBD0:	CALL FBF0h
0000FBD3:	LD D,03h
0000FBD5:	CALL FBE8h		; send command to FDD
0000FBD8:	LD E,00h
0000FBDA:	LD HL,CB00h
0000FBDD:	CALL FC1Fh
0000FBE0:	LD (HL),D
0000FBE1:	INC HL
0000FBE2:	DEC E
0000FBE3:	JR NZ,-08h
0000FBE5:	JP CB00h


0000FBE8:	LD B,C0h
0000FBEA:	LD C,02h
0000FBEC:	LD A,80h
0000FBEE:	OUT (C),A


0000FBF0:	LD B,C0h
0000FBF2:	LD C,02h		; C002h = FDD control port

0000FBF4:	IN A,(C)
0000FBF6:	AND 02h
0000FBF8:	JR Z,-06h		; back to FBF4

0000FBFA:	LD C,02h		; C002h = FDD control port
0000FBFC:	XOR A
0000FBFD:	OUT (C),A
0000FBFF:	LD C,00h		; C000h
0000FC01:	OUT (C),D		; output value
0000FC03:	LD C,02h		; C002h = FDD control port
0000FC05:	LD A,10h
0000FC07:	OUT (C),A
0000FC09:	LD C,02h		; C002h = FDD control port
0000FC0B:	IN A,(C)
0000FC0D:	AND 04h
0000FC0F:	JR Z,-06h
0000FC11:	LD C,02h		; C002h = FDD control port
0000FC13:	XOR A
0000FC14:	OUT (C),A
0000FC16:	LD C,02h
0000FC18:	IN A,(C)
0000FC1A:	AND 04h
0000FC1C:	JR NZ,-06h
0000FC1E:	RET

0000FC1F:	PUSH BC
0000FC20:	LD C,02h		; C002h = FDD control port
0000FC22:	LD B,C0h
0000FC24:	LD A,20h
0000FC26:	OUT (C),A
0000FC28:	LD C,02h		; C002h = FDD control port
0000FC2A:	IN A,(C)
0000FC2C:	AND 01h
0000FC2E:	JR Z,-06h

0000FC30:	LD C,02h		; C002h = FDD control port
0000FC32:	XOR A
0000FC33:	OUT (C),A
0000FC35:	LD C,01h		; C001h
0000FC37:	IN D,(C)
0000FC39:	LD C,02h		; C002h = FDD control port
0000FC3B:	LD A,40h
0000FC3D:	OUT (C),A
0000FC3F:	LD C,02h		; C002h = FDD control port
0000FC41:	IN A,(C)
0000FC43:	AND 01h
0000FC45:	JR NZ,-06h
0000FC47:	LD C,02h
0000FC49:	XOR A
0000FC4A:	OUT (C),A
0000FC4C:	POP BC
0000FC4D:	RET

; SCREEN DATA
0000FC4E: defm "SELECT BASIC (B) OR CP/M (C) ?"
0000FC6C: defb 0

0000FC6D: defb 43h, 0Dh, 0AH
0000FC70: defm "BOOTING FROM FDD-----"
0000FC85: defb 13
0000FC86: defm " Wait for a moment!"
0000FC99: defb 13


0000FC98:	LD HL,C200h
0000FC9B:	SBC A
0000FC9C:	CALL M,C937h
0000FC9F:	LD A,40h
0000FCA1:	INA (01h)
0000FCA3:	AND 80h
0000FCA5:	JP NZ,FC94h
0000FCA8:	LD A,80h
0000FCAA:	INA (00h)
0000FCAC:	AND 12h
0000FCAE:	JP NZ,FCB3h
0000FCB1:	SCF
0000FCB2:	RET
0000FCB3:	LD A,40h
0000FCB5:	INA (01h)
0000FCB7:	AND 80h
0000FCB9:	JP Z,FCA8h
0000FCBC:	RET
0000FCBD:	PUSH BC
0000FCBE:	PUSH DE
0000FCBF:	PUSH HL
0000FCC0:	LD HL,0800h
0000FCC3:	LD BC,4000h
0000FCC6:	LD A,0Eh
0000FCC8:	OUT (C),A
0000FCCA:	CALL FC94h
0000FCCD:	JP C,FCF1h
0000FCD0:	CALL FDF6h
0000FCD3:	LD A,40h
0000FCD5:	INA (01h)
0000FCD7:	AND 80h
0000FCD9:	JP Z,FCE6h
0000FCDC:	PUSH HL
0000FCDD:	LD HL,(FEF9h)
0000FCE0:	INC HL
0000FCE1:	LD (FEF9h),HL
0000FCE4:	POP HL
0000FCE5:	SCF
0000FCE6:	LD A,L
0000FCE7:	RLA
0000FCE8:	LD L,A
0000FCE9:	DEC H
0000FCEA:	JP NZ,FCCAh
0000FCED:	CALL FC94h
0000FCF0:	LD A,L
0000FCF1:	POP HL
0000FCF2:	POP DE
0000FCF3:	POP BC
0000FCF4:	RET

0000FCF5:	PUSH BC
0000FCF6:	PUSH DE
0000FCF7:	PUSH HL
0000FCF8:	LD HL,2828h		; 'INKEY$'
0000FCFB:	LD A,E
0000FCFC:	CP CCh
0000FCFE:	JP Z,FD04h
0000FD01:	LD HL,1414h
0000FD04:	LD (FEFDh),HL
0000FD07:	LD BC,4000h
0000FD0A:	LD A,0Eh
0000FD0C:	OUT (C),A
0000FD0E:	LD HL,(FEFDh)
0000FD11:	CALL FC94h
0000FD14:	JP C,FD40h
0000FD17:	CALL FDF6h
0000FD1A:	LD A,40h
0000FD1C:	INA (01h)
0000FD1E:	AND 80h
0000FD20:	JP Z,FD0Eh
0000FD23:	DEC H
0000FD24:	JP NZ,FD11h
0000FD27:	CALL FC94h
0000FD2A:	JP C,FD40h
0000FD2D:	CALL FDF6h
0000FD30:	LD A,40h
0000FD32:	INA (01h)
0000FD34:	AND 80h
0000FD36:	JP NZ,FD0Eh
0000FD39:	DEC L
0000FD3A:	JP NZ,FD27h
0000FD3D:	CALL FC94h
0000FD40:	POP HL
0000FD41:	POP DE
0000FD42:	POP BC
0000FD43:	RET
0000FD44:	PUSH BC
0000FD45:	PUSH DE
0000FD46:	PUSH HL
0000FD47:	LD BC,4000h
0000FD4A:	LD A,07h
0000FD4C:	OUT (C),A
0000FD4E:	INC C
0000FD4F:	LD A,BFh
0000FD51:	OUT (C),A
0000FD53:	DEC C
0000FD54:	LD A,0Eh
0000FD56:	OUT (C),A
0000FD58:	LD L,0Ah
0000FD5A:	LD BC,6000h
0000FD5D:	LD A,40h
0000FD5F:	INA (01h)
0000FD61:	AND 40h
0000FD63:	JP NZ,FD6Bh
0000FD66:	XOR A
0000FD67:	POP HL
0000FD68:	POP DE
0000FD69:	POP BC
0000FD6A:	RET

0000FD6B:	LD A,(FEFBh)
0000FD6E:	RES 1,A
0000FD70:	OUT (C),A
0000FD72:	SET 1,A
0000FD74:	OUT (C),A
0000FD76:	LD (FEFBh),A
0000FD79:	DEC L
0000FD7A:	JP NZ,FD5Dh
0000FD7D:	CALL FE0Dh
0000FD80:	LD DE,FDCDh		; "PLAY"
0000FD83:	CALL FDFDh		; Print message in DE via IPL BIOS routine
0000FD86:	LD A,40h
0000FD88:	INA (01h)
0000FD8A:	AND 40h
0000FD8C:	JP Z,FD66h
0000FD8F:	LD A,80h
0000FD91:	INA (00h)
0000FD93:	AND 12h
0000FD95:	JP NZ,FD86h
0000FD98:	SCF
0000FD99:	JP FD67h

0000FD9C:	PUSH AF
0000FD9D:	PUSH BC
0000FD9E:	PUSH DE
0000FD9F:	LD D,0Ah
0000FDA1:	LD BC,4000h
0000FDA4:	LD A,0Eh
0000FDA6:	OUT (C),A
0000FDA8:	LD BC,6000h
0000FDAB:	LD A,40h
0000FDAD:	INA (01h)
0000FDAF:	AND 40h
0000FDB1:	JR Z,+04h
0000FDB3:	POP DE
0000FDB4:	POP BC
0000FDB5:	POP AF
0000FDB6:	RET

0000FDB7:	LD A,(FEFBh)
0000FDBA:	RES 1,A
0000FDBC:	OUT (C),A
0000FDBE:	SET 1,A
0000FDC0:	OUT (C),A
0000FDC2:	LD (FEFBh),A
0000FDC5:	DEC D
0000FDC6:	JP NZ,FDABh
0000FDC9:	POP DE
0000FDCA:	POP BC
0000FDCB:	POP AF
0000FDCC:	RET

0000FDCD:	defm "PLAY"
0000FDD1:	defb 13
0000FDD2:	defb 0

0000FDD3:	PUSH BC
0000FDD4:	PUSH DE
0000FDD5:	PUSH HL
0000FDD6:	LD DE,0000h
0000FDD9:	LD A,B
0000FDDA:	OR C
0000FDDB:	JR NZ,+08h
0000FDDD:	EX DE,HL
0000FDDE:	LD (FEF9h),HL
0000FDE1:	POP HL
0000FDE2:	POP DE
0000FDE3:	POP BC
0000FDE4:	RET
0000FDE5:	LD A,(HL)
0000FDE6:	PUSH HL
0000FDE7:	LD H,08h
0000FDE9:	RLCA
0000FDEA:	JR NC,+01h
0000FDEC:	INC DE
0000FDED:	DEC H
0000FDEE:	JR NZ,-07h
0000FDF0:	POP HL
0000FDF1:	INC HL
0000FDF2:	DEC BC
0000FDF3:	JP FDD9h
0000FDF6:	LD A,5Ah
0000FDF8:	DEC A
0000FDF9:	JP NZ,FDF8h
0000FDFC:	RET

; IPL BIOS routine to print message in DE via 
0000FDFD:	PUSH AF
0000FDFE:	PUSH DE
0000FDFF:	LD A,(DE)
0000FE00:	CP 00h
0000FE02:	JR Z,+06h
0000FE04:	CALL FE31h		; IPL BIOS routine to print char in A
0000FE07:	INC DE
0000FE08:	JR -0Bh
0000FE0A:	POP DE
0000FE0B:	POP AF
0000FE0C:	RET

0000FE0D:	LD A,(FEFFh)		; CRT controller address
0000FE10:	AND 1Fh
0000FE12:	OR A
0000FE13:	RET Z
0000FE14:	PUSH HL
0000FE15:	PUSH BC
0000FE16:	LD HL,(FEFFh)		; CRT controller address
0000FE19:	LD BC,0020h
0000FE1C:	ADD HL,BC
0000FE1D:	LD A,L
0000FE1E:	AND E0h
0000FE20:	LD L,A
0000FE21:	LD (FEFFh),HL		; CRT controller address
0000FE24:	POP BC
0000FE25:	POP HL
0000FE26:	RET


0000FE27:	PUSH BC
0000FE28:	PUSH DE
0000FE29:	PUSH HL
0000FE2A:	CALL FE59h		; Clear screen (IPL version)
0000FE2D:	POP HL
0000FE2E:	POP DE
0000FE2F:	POP BC
0000FE30:	RET

; IPL BIOS routine to print char in A
0000FE31:	CP 0Dh
0000FE33:	JR Z,-21h
0000FE35:	CP 0Ch
0000FE37:	JR Z,-12h		; to FE27 (cls)
0000FE39:	OR A
0000FE3A:	RET Z
0000FE3B:	PUSH BC
0000FE3C:	LD BC,(FEFFh)		; CRT controller address
0000FE40:	OUT (C),A
0000FE42:	INC BC
0000FE43:	LD (FEFFh),BC		; CRT controller address
0000FE47:	POP BC
0000FE48:	RET

; Initialize the system and video RAM
0000FE49:	LD BC,2000h
0000FE4C:	XOR A
0000FE4D:	OUT (C),A
0000FE4F:	LD A,00h
0000FE51:	LD BC,6000h
0000FE54:	OUT (C),A
0000FE56:	LD (FEFBh),A
; Clear screen (IPL version)
0000FE59:	LD D,20h
0000FE5B:	LD BC,0800h
0000FE5E:	DEC BC
0000FE5F:	OUT (C),D
0000FE61:	LD A,B
0000FE62:	OR C
0000FE63:	JR NZ,-07h
0000FE65:	LD D,00h
0000FE67:	LD HL,0800h
0000FE6A:	LD BC,1000h
0000FE6D:	DEC BC
0000FE6E:	DEC HL
0000FE6F:	OUT (C),D
0000FE71:	LD A,H
0000FE72:	OR L
0000FE73:	JR NZ,-08h
0000FE75:	LD (FEFFh),HL		; CRT controller address
0000FE78:	RET

0000FE79:	NOP
0000FE7A:	JR NZ,+20h
0000FE7C:	JR NZ,+20h
0000FE7E:	JR NZ,+20h
0000FE80:	JR NZ,+20h
0000FE82:	JR NZ,+20h
0000FE84:	JR NZ,+20h
0000FE86:	JR NZ,+20h
0000FE88:	JR NZ,+20h
0000FE8A:	NOP
0000FE8B:	NOP
0000FE8C:	NOP
0000FE8D:	NOP
0000FE8E:	NOP
0000FE8F:	NOP
0000FE90:	NOP
0000FE91:	LD HL,00FFh
0000FE94:	LD (55D3h),HL
0000FE97:	RET

0000FE98:	LD A,20h
0000FE9A:	LD HL,0C45h
0000FE9D:	LD (HL),A
0000FE9E:	LD HL,0B22h
0000FEA1:	LD (HL),A
0000FEA2:	LD HL,0ADCh
0000FEA5:	LD (HL),A
0000FEA6:	LD HL,0AA2h
0000FEA9:	LD (HL),A
0000FEAA:	LD HL,090Ch
0000FEAD:	LD (HL),A
0000FEAE:	EI
0000FEAF:	JP 0000h

0000FEB2:	NOP
0000FEB3:	NOP
0000FEB4:	NOP
0000FEB5:	NOP
0000FEB6:	NOP
0000FEB7:	NOP
0000FEB8:	NOP
0000FEB9:	NOP
0000FEBA:	NOP
0000FEBB:	NOP
0000FEBC:	NOP
0000FEBD:	NOP
0000FEBE:	NOP
0000FEBF:	NOP
0000FEC0:	NOP
0000FEC1:	NOP
0000FEC2:	NOP
0000FEC3:	NOP
0000FEC4:	NOP
0000FEC5:	NOP
0000FEC6:	NOP
0000FEC7:	NOP
0000FEC8:	NOP
0000FEC9:	NOP
0000FECA:	NOP
0000FECB:	NOP
0000FECC:	NOP
0000FECD:	NOP
0000FECE:	NOP
0000FECF:	NOP
0000FED0:	NOP
0000FED1:	NOP
0000FED2:	NOP
0000FED3:	NOP
0000FED4:	NOP
0000FED5:	NOP
0000FED6:	NOP
0000FED7:	NOP
0000FED8:	NOP
0000FED9:	NOP
0000FEDA:	NOP
0000FEDB:	NOP
0000FEDC:	NOP
0000FEDD:	NOP
0000FEDE:	NOP
0000FEDF:	NOP
0000FEE0:	NOP
0000FEE1:	NOP
0000FEE2:	NOP
0000FEE3:	NOP
0000FEE4:	NOP
0000FEE5:	NOP
0000FEE6:	NOP
0000FEE7:	NOP
0000FEE8:	NOP
0000FEE9:	NOP
0000FEEA:	NOP
0000FEEB:	NOP
0000FEEC:	NOP
0000FEED:	NOP
0000FEEE:	NOP
0000FEEF:	NOP
0000FEF0:	NOP
0000FEF1:	NOP
0000FEF2:	NOP
0000FEF3:	NOP
0000FEF4:	NOP
0000FEF5:	NOP
0000FEF6:	NOP
0000FEF7:	NOP
0000FEF8:	NOP
0000FEF9:	NOP
0000FEFA:	NOP

0000FEFB:	NOP

0000FEFC:	NOP
0000FEFD:	INC D
0000FEFE:	INC D

; CRT controller address
0000FEFF:	NOP
0000FF00:	NOP

0000FF01:	DI
0000FF02:	LD SP,0000h
0000FF05:	LD B,9Dh
0000FF07:	LD HL,4300h
0000FF0A:	LD A,(HL)
0000FF0B:	CP 7Ch
0000FF0D:	JR NZ,+07h
0000FF0F:	DEC HL
0000FF10:	LD A,(HL)
0000FF11:	CP 4Eh
0000FF13:	JR NZ,+01h
0000FF15:	LD (HL),B
0000FF16:	DEC HL
0000FF17:	LD A,H
0000FF18:	CP 15h
0000FF1A:	JR NC,-12h
0000FF1C:	LD HL,7A3Bh		; VARED
0000FF1F:	LD (HL),B
0000FF20:	LD HL,524Ah
0000FF23:	LD BC,000Bh
0000FF26:	LD D,H
0000FF27:	LD E,L
0000FF28:	ADD HL,BC
0000FF29:	LD A,H
0000FF2A:	CP 5Bh			; '['  (some BASIC subtracts "A" and checks for 26)
0000FF2C:	JR C,+05h
0000FF2E:	LD A,L
0000FF2F:	CP 4Ah
0000FF31:	JR NC,+11h
0000FF33:	LD A,(DE)
0000FF34:	OR (HL)
0000FF35:	JR Z,+03h
0000FF37:	INC HL
0000FF38:	JR -17h
0000FF3A:	PUSH HL
0000FF3B:	LD D,H
0000FF3C:	LD E,L
0000FF3D:	DEC HL
0000FF3E:	LDDR
0000FF40:	POP HL
0000FF41:	INC HL
0000FF42:	JR -21h

0000FF44:	CALL FE91h
0000FF47:	LD DE,7C4Eh		; TEXTST,  address of BASIC  program
0000FF4A:	LD HL,FF98h
0000FF4D:	LD BC,004Fh
0000FF50:	LDIR
0000FF52:	LD HL,1425h
0000FF55:	LD DE,7C75h
0000FF58:	CALL FF91h
0000FF5B:	LD HL,4860h
0000FF5E:	LD DE,7C4Eh		; TEXTST,  address of BASIC  program
0000FF61:	CALL FF91h
0000FF64:	LD HL,48A5h
0000FF67:	LD DE,7C5Bh
0000FF6A:	CALL FF91h
0000FF6D:	LD HL,05EFh
0000FF70:	LD DE,7C6Ch
0000FF73:	CALL FF91h
0000FF76:	LD HL,1B89h
0000FF79:	LD DE,7C90h
0000FF7C:	CALL FF94h
0000FF7F:	LD HL,1485h
0000FF82:	LD DE,7C89h
0000FF85:	CALL FF91h
0000FF88:	CALL 0056h
0000FF8B:	CALL 4778h
0000FF8E:	JP FE98h
0000FF91:	LD (HL),CDh
0000FF93:	INC HL
0000FF94:	LD (HL),E
0000FF95:	INC HL
0000FF96:	LD (HL),D
0000FF97:	RET
0000FF98:	LD A,E
0000FF99:	AND 03h
0000FF9B:	SRL E
0000FF9D:	SRL E
0000FF9F:	SLA A
0000FFA1:	SLA A
0000FFA3:	JR +0Bh
0000FFA5:	LD A,E
0000FFA6:	AND 0Ch
0000FFA8:	RRC E
0000FFAA:	RRC E
0000FFAC:	RRC E
0000FFAE:	RRC E
0000FFB0:	OR E
0000FFB1:	LD E,A
0000FFB2:	LD A,(1181h)
0000FFB5:	RET
0000FFB6:	BIT 7,A
0000FFB8:	JR Z,+01h
0000FFBA:	CPL
0000FFBB:	RLCA
0000FFBC:	RLCA
0000FFBD:	RLCA
0000FFBE:	RET
0000FFBF:	PUSH BC
0000FFC0:	LD BC,01FFh
0000FFC3:	LD HL,7A4Fh
0000FFC6:	XOR A
0000FFC7:	LD (HL),A
0000FFC8:	INC HL
0000FFC9:	DEC BC
0000FFCA:	LD A,B
0000FFCB:	OR C
0000FFCC:	JR NZ,-08h
0000FFCE:	LD HL,7C9Dh
0000FFD1:	POP BC
0000FFD2:	RET

0000FFD3:	RET C
0000FFD4:	LD A,20h
0000FFD6:	LD L,00h
0000FFD8:	JR +02h
0000FFDA:	LD A,00h
0000FFDC:	PUSH HL
0000FFDD:	LD HL,1B50h
0000FFE0:	LD (HL),A
0000FFE1:	POP HL
0000FFE2:	CALL 1B95h
0000FFE5:	RET

