
; PC8801 N88-BASIC
; ROM1 bank, 8K


00006000:	NOP
00006001:	NOP
00006002:	NOP
00006003:	NOP
00006004:	NOP
00006005:	NOP
00006006:	NOP
00006007:	NOP
00006008:	NOP
00006009:	NOP
0000600A:	NOP
0000600B:	NOP
0000600C:	NOP

; JUMP TABLE FOR -EXEC_ROM1-

; 0
0000600D:	DEFW	795Fh
; 1
0000600F:	DEFW	7964h
; 2
00006011:	DEFW	6AFAh
; 3
00006013:	DEFW	78F5h
; 4
00006015:	DEFW	6B01h
; 5
00006017:	DEFW	6B08h
; 6
00006019:	DEFW	79E5h
; 7
0000601B:	DEFW	6B0Fh
; 8
0000601D:	DEFW	62E6h
; 9
0000601F:	DEFW	6575h
; 10
00006021:	DEFW	7E59h
; 11
00006023:	DEFW	6B16h
; 12
00006025:	DEFW	6B69h
; 13
00006027:	DEFW	EEBCh
; 14
00006029:	DEFW	7473h
; 15
0000602B:	DEFW	6B1Dh
; 16
0000602D:	DEFW	6B24h
; 17
0000602F:	DEFW	7104h
; 18
00006031:	DEFW	6426h
; 19
00006033:	DEFW	6B2Bh
; 20
00006035:	DEFW	6543h
; 21
00006037:	DEFW	66DAh
; 22
00006039:	DEFW	6B32h
; 23
0000603B:	DEFW	6B39h
; 24
0000603D:	DEFW	6B40h
; 25
0000603F:	DEFW	69A0h
; 26
00006041:	DEFW	6B47h
; 27
00006043:	DEFW	6B4Eh
; 28
00006045:	DEFW	6B55h
; 29
00006047:	DEFW	6B5Ch
; 30
00006049:	DEFW	6B63h


0000604B:	JP 6127h
0000604E:	JP 61CAh
00006051:	JP 6546h
00006054:	JP 664Fh
00006057:	JP 666Dh
0000605A:	JP 65DBh
0000605D:	JP 6481h
00006060:	JP 6A51h
00006063:	JP 673Ch
00006066:	JP 6754h
00006069:	JP 60DBh
0000606C:	JP 6A26h
0000606F:	JP 634Ah
00006072:	JP 641Fh
00006075:	JP 63A8h
00006078:	JP 66DAh
0000607B:	JP 6B7Eh
0000607E:	JP 6A76h
00006081:	JP 6A7Ah
00006084:	JP 6A7Fh
00006087:	JP 6A84h
0000608A:	JP 73D6h
0000608D:	JP 752Bh
00006090:	JP 79AFh
00006093:	JP 79C1h
00006096:	JP 79D9h
00006099:	JP 79CCh
0000609C:	JP 7B23h
0000609F:	JP 7B51h
000060A2:	JP 7A17h
000060A5:	JP 7E60h
000060A8:	JP 7E77h
000060AB:	JP 7EB9h
000060AE:	JP 7E9Eh
000060B1:	JP 7F10h
000060B4:	JP 6AB1h
000060B7:	JP 6AF3h
000060BA:	LD HL,0100h
000060BD:	LD DE,0100h
000060C0:	LD A,(E6A6h)
000060C3:	OR A
000060C4:	RET NZ
000060C5:	LD HL,0080h
000060C8:	LD DE,0200h
000060CB:	RET

000060CC:	LD HL,(F033h)			; pointer on paint address
000060CF:	XOR A
000060D0:	LD (F049h),A
000060D3:	LD A,(F035h)
000060D6:	LD E,A
000060D7:	CALL 6F34h
000060DA:	RET

000060DB:	CALL 62D4h
000060DE:	RET C
000060DF:	LD (F045h),A		; PALETN - single color (0=blue; 1=red; 2=green)
000060E2:	PUSH HL
000060E3:	CALL 62C7h
000060E6:	LD (F046h),HL		; BORDER
000060E9:	LD (F048h),A
000060EC:	OR A
000060ED:	POP HL
000060EE:	RET

000060EF:	PUSH DE
000060F0:	EX DE,HL
000060F1:	LD HL,(F0CCh)	; LFVIEW
000060F4:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000060F5:	CCF
000060F6:	EX DE,HL
000060F7:	POP DE
000060F8:	RET NC
000060F9:	RET NZ
000060FA:	LD A,(F0CAh)	; VIEW2 - view position bit limit
000060FD:	CP E
000060FE:	RET

000060FF:	PUSH DE
00006100:	EX DE,HL
00006101:	LD HL,(F0CEh)	; RTVIEW
00006104:	EX DE,HL
00006105:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006106:	CCF
00006107:	POP DE
00006108:	RET NC
00006109:	RET NZ
0000610A:	LD A,(F0CBh)
0000610D:	CP E
0000610E:	RET Z
0000610F:	CCF
00006110:	RET

00006111:	LD B,03h
00006113:	LD A,(F087h)		; SCREEN - screen mode
00006116:	OR A
00006117:	RET Z
00006118:	LD B,01h
0000611A:	RET

0000611B:	LD DE,F036h
0000611E:	LD B,03h
00006120:	LD A,(HL)
00006121:	LD (DE),A
00006122:	INC DE
00006123:	INC HL
00006124:	DJNZ -06h
00006126:	RET

00006127:	PUSH HL
00006128:	PUSH DE
00006129:	LD D,B
0000612A:	LD E,C
0000612B:	LD B,01h
0000612D:	LD HL,F02Bh
00006130:	CALL 6141h
00006133:	EX DE,HL
00006134:	EX HL,(SP)
00006135:	EX DE,HL
00006136:	LD HL,F02Fh
00006139:	CALL 6141h
0000613C:	LD A,B
0000613D:	RRCA
0000613E:	POP BC
0000613F:	POP HL
00006140:	RET
00006141:	PUSH BC
00006142:	LD C,(HL)
00006143:	INC HL
00006144:	LD B,(HL)
00006145:	INC HL
00006146:	PUSH BC
00006147:	EX HL,(SP)
00006148:	PUSH HL
00006149:	CALL 215Fh
0000614C:	OR A
0000614D:	JP M,6159h
00006150:	JP Z,6159h
00006153:	POP DE
00006154:	POP HL
00006155:	POP BC
00006156:	LD B,00h
00006158:	RET
00006159:	POP BC
0000615A:	POP HL
0000615B:	LD C,(HL)
0000615C:	INC HL
0000615D:	LD B,(HL)
0000615E:	INC HL
0000615F:	PUSH BC
00006160:	POP HL
00006161:	PUSH HL
00006162:	CALL 215Fh
00006165:	OR A
00006166:	JP P,616Eh
00006169:	POP DE
0000616A:	POP BC
0000616B:	LD B,00h
0000616D:	RET
0000616E:	POP HL
0000616F:	POP BC
00006170:	RET
00006171:	PUSH HL
00006172:	PUSH DE
00006173:	LD D,B
00006174:	LD E,C
00006175:	LD B,01h
00006177:	LD HL,F02Bh
0000617A:	CALL 618Bh
0000617D:	EX DE,HL
0000617E:	EX HL,(SP)
0000617F:	EX DE,HL
00006180:	LD HL,F02Fh
00006183:	CALL 618Bh
00006186:	LD A,B
00006187:	RRCA
00006188:	POP BC
00006189:	POP HL
0000618A:	RET
0000618B:	PUSH BC
0000618C:	LD C,(HL)
0000618D:	INC HL
0000618E:	LD B,(HL)
0000618F:	INC HL
00006190:	PUSH BC
00006191:	EX HL,(SP)
00006192:	PUSH HL
00006193:	CALL 215Fh
00006196:	OR A
00006197:	JP M,61A0h
0000619A:	POP DE
0000619B:	POP HL
0000619C:	POP BC
0000619D:	LD B,00h
0000619F:	RET
000061A0:	POP BC
000061A1:	POP HL
000061A2:	LD C,(HL)
000061A3:	INC HL
000061A4:	LD B,(HL)
000061A5:	INC HL
000061A6:	PUSH BC
000061A7:	POP HL
000061A8:	PUSH HL
000061A9:	CALL 215Fh
000061AC:	OR A
000061AD:	JP M,61B6h
000061B0:	JP Z,61B6h
000061B3:	POP HL
000061B4:	POP BC
000061B5:	RET

000061B6:	POP DE
000061B7:	POP BC
000061B8:	LD B,00h
000061BA:	RET

000061BB:	LD A,(F08Fh)
000061BE:	OR A
000061BF:	RET Z
000061C0:	LD HL,F09Ch
000061C3:	CALL 20EBh			; LOADFP - Load FP value pointed by HL to BCDE
000061C6:	CALL 1F53h
000061C9:	RET

000061CA:	PUSH BC
000061CB:	PUSH DE
000061CC:	LD A,(F08Bh)
000061CF:	LD (F089h),A
000061D2:	LD A,(E6A6h)
000061D5:	OR A
000061D6:	JP Z,61E9h
000061D9:	LD A,5Ch
000061DB:	LD (F089h),A
000061DE:	LD H,EEh
000061E0:	LD A,(849Fh)
000061E3:	OR H
000061E4:	LD (849Dh),A
000061E7:	OUTA (34h)
000061E9:	LD A,07h
000061EB:	AND C
000061EC:	LD HL,623Dh
000061EF:	ADD L
000061F0:	LD L,A
000061F1:	LD A,00h
000061F3:	ADC H
000061F4:	LD H,A
000061F5:	LD A,(HL)
000061F6:	LD (F035h),A
000061F9:	LD A,B
000061FA:	RRCA
000061FB:	RRCA
000061FC:	RRCA
000061FD:	LD B,A
000061FE:	LD A,C
000061FF:	AND F8h
00006201:	RRCA
00006202:	RRCA
00006203:	RRCA
00006204:	OR B
00006205:	LD B,00h
00006207:	LD C,A
00006208:	LD HL,(F039h)
0000620B:	SBC HL,DE
0000620D:	JP NC,6228h
00006210:	LD A,E
00006211:	SUB C8h
00006213:	LD E,A
00006214:	LD A,D
00006215:	SBC 00h
00006217:	LD D,A
00006218:	LD A,5Dh
0000621A:	LD (F089h),A
0000621D:	LD H,DDh
0000621F:	LD A,(849Fh)
00006222:	OR H
00006223:	LD (849Dh),A
00006226:	OUTA (34h)
00006228:	EX DE,HL
00006229:	ADD HL,HL
0000622A:	ADD HL,HL
0000622B:	ADD HL,HL
0000622C:	ADD HL,HL
0000622D:	LD D,H
0000622E:	LD E,L
0000622F:	ADD HL,HL
00006230:	ADD HL,HL
00006231:	ADD HL,DE
00006232:	ADD HL,BC
00006233:	LD A,H
00006234:	OR C0h
00006236:	LD H,A
00006237:	LD (F033h),HL			; pointer on paint address
0000623A:	POP DE
0000623B:	POP BC
0000623C:	RET

0000623D:	ADD B
0000623E:	LD B,B
0000623F:	JR NZ,+10h
00006241:	EX AF,AF'
00006242:	INC B
00006243:	LD (BC),A
00006244:	LD BC,353Ah
00006247:	RET P
00006248:	RRCA
00006249:	LD (F035h),A
0000624C:	RET NC
0000624D:	PUSH HL
0000624E:	LD HL,(F033h)			; pointer on paint address
00006251:	INC HL
00006252:	LD (F033h),HL			; pointer on paint address
00006255:	POP HL
00006256:	RET

00006257:	LD A,(F035h)
0000625A:	RLCA
0000625B:	LD (F035h),A
0000625E:	RET NC
0000625F:	PUSH HL
00006260:	LD HL,(F033h)			; pointer on paint address
00006263:	DEC HL
00006264:	LD (F033h),HL			; pointer on paint address
00006267:	POP HL
00006268:	RET

00006269:	PUSH DE
0000626A:	LD HL,(F033h)			; pointer on paint address
0000626D:	LD DE,FE30h
00006270:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006271:	JP C,6295h
00006274:	LD A,H
00006275:	AND C1h
00006277:	LD H,A
00006278:	LD A,L
00006279:	SUB 30h
0000627B:	LD L,A
0000627C:	LD (F033h),HL			; pointer on paint address
0000627F:	LD A,(E6A6h)
00006282:	OR A
00006283:	JR Z,+0Eh
00006285:	LD A,5Dh
00006287:	LD (F089h),A
0000628A:	LD A,(849Dh)
0000628D:	RLCA
0000628E:	LD (849Dh),A
00006291:	OUTA (34h)
00006293:	POP DE
00006294:	RET

00006295:	LD DE,0050h
00006298:	ADD HL,DE
00006299:	LD (F033h),HL			; pointer on paint address
0000629C:	POP DE
0000629D:	RET

0000629E:	LD HL,(F033h)			; pointer on paint address
000062A1:	LD A,H
000062A2:	AND 3Fh
000062A4:	LD H,A
000062A5:	LD A,(F089h)
000062A8:	SUB 5Ch
000062AA:	RRCA
000062AB:	RRCA
000062AC:	OR H
000062AD:	LD H,A
000062AE:	LD A,(F035h)
000062B1:	RET

000062B2:	LD (F035h),A
000062B5:	LD A,H
000062B6:	AND C0h
000062B8:	RLCA
000062B9:	RLCA
000062BA:	ADD 5Ch
000062BC:	LD (F089h),A
000062BF:	LD A,H
000062C0:	OR C0h
000062C2:	LD H,A
000062C3:	LD (F033h),HL			; pointer on paint address
000062C6:	RET

; =code @ 66B8 in bank 0
000062C7:	RRCA
000062C8:	PUSH AF
000062C9:	SBC A
000062CA:	LD L,A
000062CB:	POP AF
000062CC:	RRCA
000062CD:	PUSH AF
000062CE:	SBC A
000062CF:	LD H,A
000062D0:	POP AF
000062D1:	RRCA
000062D2:	SBC A
000062D3:	RET

; =code @ 66c5 in bank 0
000062D4:	CP 08h
000062D6:	CCF
000062D7:	RET C
000062D8:	PUSH BC
000062D9:	LD B,A
000062DA:	LD A,(F087h)		; SCREEN - screen mode
000062DD:	OR A
000062DE:	LD A,B
000062DF:	POP BC
000062E0:	RET Z
000062E1:	OR A
000062E2:	RET Z
000062E3:	LD A,01h
000062E5:	RET

000062E6:	NOP
000062E7:	LD A,C3h
000062E9:	LD (84A2h),A
000062EC:	LD (84BEh),A
000062EF:	LD HL,3690h
000062F2:	LD (84BFh),HL
000062F5:	LD (84B0h),A
000062F8:	LD (84B3h),A
000062FB:	LD (84B6h),A
000062FE:	LD (84B9h),A
00006301:	LD HL,6A88h
00006304:	LD (EEBDh),HL
00006307:	LD A,(E6C2h)	; Value being sent to port 31h (bank switching)
0000630A:	OR 19h
0000630C:	LD (E6C2h),A	; Value being sent to port 31h (bank switching)
0000630F:	CALL 7E60h
00006312:	LD A,80h
00006314:	OUTA (54h)
00006316:	LD A,C0h
00006318:	OUTA (54h)
0000631A:	XOR A
0000631B:	OUTA (53h)
0000631D:	LD C,5Ch
0000631F:	CALL 6334h
00006322:	LD C,5Dh
00006324:	CALL 6334h
00006327:	LD C,5Eh
00006329:	CALL 6334h
0000632C:	CALL 6375h
0000632F:	XOR A
00006330:	PUSH AF
00006331:	JP 6481h
00006334:	DI
00006335:	LD B,00h
00006337:	OUT (C),A
00006339:	LD HL,C000h
0000633C:	LD (HL),00h
0000633E:	LD D,H
0000633F:	LD E,L
00006340:	INC DE
00006341:	LD BC,3FF8h
00006344:	LDIR
00006346:	OUTA (5Fh)
00006348:	EI
00006349:	RET
0000634A:	LD HL,00C7h
0000634D:	JR NZ,+03h
0000634F:	LD HL,018Fh
00006352:	LD (F031h),HL
00006355:	INC HL
00006356:	LD (F08Dh),HL
00006359:	LD HL,027Fh
0000635C:	LD (F02Dh),HL
0000635F:	LD HL,0000h
00006362:	LD (F02Bh),HL
00006365:	LD (F02Fh),HL
00006368:	LD (F027h),HL
0000636B:	LD (F029h),HL
0000636E:	EX DE,HL
0000636F:	LD B,D
00006370:	LD C,E
00006371:	CALL 61CAh
00006374:	RET

00006375:	XOR A
00006376:	LD (F087h),A		; SCREEN - screen mode
00006379:	LD (F01Fh),A
0000637C:	LD (F020h),A
0000637F:	LD (F088h),A
00006382:	LD A,07h
00006384:	LD (F01Eh),A
00006387:	LD (F08Ch),A
0000638A:	LD HL,035Ch
0000638D:	LD (F089h),HL
00006390:	LD A,5Ch
00006392:	LD (F08Bh),A
00006395:	LD HL,00C7h
00006398:	LD (F039h),HL
0000639B:	LD A,01h
0000639D:	OR A
0000639E:	CALL 634Ah
000063A1:	CALL 641Fh
000063A4:	CALL 63A8h
000063A7:	RET

000063A8:	LD HL,(F02Bh)
000063AB:	LD B,H
000063AC:	LD C,L
000063AD:	LD HL,(F02Fh)
000063B0:	EX DE,HL
000063B1:	CALL 61CAh
000063B4:	LD HL,(F033h)			; pointer on paint address
000063B7:	PUSH HL
000063B8:	LD A,(F035h)
000063BB:	PUSH AF
000063BC:	LD DE,0050h
000063BF:	ADD HL,DE
000063C0:	LD (F0C0h),HL
000063C3:	LD A,(F089h)
000063C6:	LD (F0C2h),A
000063C9:	LD HL,(F02Dh)
000063CC:	LD B,H
000063CD:	LD C,L
000063CE:	LD HL,(F031h)
000063D1:	EX DE,HL
000063D2:	CALL 61CAh
000063D5:	LD HL,(F033h)			; pointer on paint address
000063D8:	LD DE,0050h
000063DB:	OR A
000063DC:	SBC HL,DE
000063DE:	INC HL
000063DF:	LD (F0C3h),HL	; RTDWVW - view (x2,y2) address -4Fh
000063E2:	LD A,(F089h)
000063E5:	LD (F0C5h),A	; LFVWPS - view (Lx,0) address
000063E8:	LD HL,(F02Bh)
000063EB:	LD B,H
000063EC:	LD C,L
000063ED:	LD DE,0000h
000063F0:	CALL 61CAh
000063F3:	LD HL,(F033h)			; pointer on paint address
000063F6:	LD (F0C6h),HL
000063F9:	LD A,(F035h)
000063FC:	LD (F0CAh),A	; VIEW2 - view position bit limit
000063FF:	LD HL,(F02Dh)
00006402:	LD B,H
00006403:	LD C,L
00006404:	LD DE,0000h
00006407:	CALL 61CAh
0000640A:	LD HL,(F033h)			; pointer on paint address
0000640D:	LD (F0C8h),HL	; RTVWPS - view (Rx,0) address
00006410:	LD A,(F035h)
00006413:	LD (F0CBh),A
00006416:	POP AF
00006417:	LD (F035h),A
0000641A:	POP HL
0000641B:	LD (F033h),HL			; pointer on paint address
0000641E:	RET

0000641F:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006422:	RRA
00006423:	LD L,B
00006424:	NOP
00006425:	RET

00006426:	XOR A
00006427:	PUSH AF
00006428:	DEC HL
00006429:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
0000642A:	LD A,(HL)
0000642B:	CP 2Ch
0000642D:	JR Z,+14h
0000642F:	CALL 18A3h			; GETINT
00006432:	CP 03h
00006434:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
00006437:	LD (F087h),A		; SCREEN - screen mode
0000643A:	POP AF
0000643B:	LD A,01h
0000643D:	OR A
0000643E:	PUSH AF
0000643F:	DEC HL
00006440:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00006441:	JR Z,+3Eh
00006443:	RST 08h				; Check syntax, 1 byte follows to be compared
00006444:	DEFB ','
00006445:	LD A,(HL)
00006446:	CP 2Ch
00006448:	JR Z,+0Fh
0000644A:	CALL 18A3h			; GETINT
0000644D:	CP 04h
0000644F:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
00006452:	LD (F088h),A
00006455:	DEC HL
00006456:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00006457:	JR Z,+28h
00006459:	RST 08h				; Check syntax, 1 byte follows to be compared
0000645A:	DEFB ','
0000645B:	LD A,(HL)
0000645C:	CP 2Ch
0000645E:	JR Z,+14h
00006460:	CALL 18A3h			; GETINT
00006463:	CP 03h
00006465:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
00006468:	ADD 5Ch
0000646A:	LD (F089h),A
0000646D:	LD (F08Bh),A
00006470:	DEC HL
00006471:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00006472:	JR Z,+0Dh
00006474:	RST 08h				; Check syntax, 1 byte follows to be compared
00006475:	DEFB ','
00006476:	CALL 18A3h			; GETINT
00006479:	CP 08h
0000647B:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
0000647E:	LD (F08Ch),A
00006481:	XOR A
00006482:	LD (E6A6h),A
00006485:	POP AF
00006486:	PUSH HL
00006487:	PUSH AF
00006488:	LD HL,00C8h
0000648B:	LD (F08Dh),HL
0000648E:	LD A,(E6C2h)	; Value being sent to port 31h (bank switching)
00006491:	LD B,A
00006492:	LD A,(F087h)		; SCREEN - screen mode
00006495:	DEC A
00006496:	JP P,64AFh
00006499:	LD HL,035Ch
0000649C:	LD (F089h),HL
0000649F:	LD A,5Ch
000064A1:	LD (F08Bh),A
000064A4:	LD A,07h
000064A6:	LD (F08Ch),A
000064A9:	LD A,B
000064AA:	OR 11h
000064AC:	LD B,A
000064AD:	JR +44h
000064AF:	JP NZ,64D2h
000064B2:	LD A,B
000064B3:	AND EFh
000064B5:	OR 01h
000064B7:	LD B,A
000064B8:	LD A,01h
000064BA:	LD (F08Ah),A
000064BD:	PUSH BC
000064BE:	LD A,(F089h)
000064C1:	SUB 5Bh
000064C3:	LD B,A
000064C4:	LD A,EEh
000064C6:	DEC B
000064C7:	JR Z,+03h
000064C9:	RLCA
000064CA:	JR -06h
000064CC:	LD (849Eh),A
000064CF:	POP BC
000064D0:	JR +21h
000064D2:	LD A,EEh
000064D4:	LD (849Eh),A
000064D7:	LD A,5Ch
000064D9:	LD (F089h),A
000064DC:	LD A,01h
000064DE:	LD (E6A6h),A
000064E1:	LD (F08Ah),A
000064E4:	LD A,03h
000064E6:	LD (F08Ch),A
000064E9:	LD HL,0190h
000064EC:	LD (F08Dh),HL
000064EF:	LD A,B
000064F0:	AND EEh
000064F2:	LD B,A
000064F3:	LD A,B
000064F4:	LD (E6C2h),A	; Value being sent to port 31h (bank switching)
000064F7:	OUTA (31h)
000064F9:	LD A,(F088h)
000064FC:	AND 01h
000064FE:	LD A,(E6C1h)
00006501:	JR NZ,+04h
00006503:	AND EFh
00006505:	JR +02h
00006507:	OR 10h
00006509:	LD (E6C1h),A
0000650C:	OUTA (40h)
0000650E:	LD A,(F088h)
00006511:	CPL
00006512:	AND 02h
00006514:	RLCA
00006515:	RLCA
00006516:	LD B,A
00006517:	LD A,(E6C2h)	; Value being sent to port 31h (bank switching)
0000651A:	AND F7h
0000651C:	OR B
0000651D:	LD (E6C2h),A	; Value being sent to port 31h (bank switching)
00006520:	OUTA (31h)
00006522:	LD A,(F08Ch)
00006525:	CPL
00006526:	RLCA
00006527:	AND FEh
00006529:	OUTA (53h)
0000652B:	POP AF
0000652C:	OR A
0000652D:	JP Z,6541h
00006530:	LD A,(F087h)		; SCREEN - screen mode
00006533:	CP 02h
00006535:	CALL 634Ah
00006538:	CALL 641Fh
0000653B:	CALL 63A8h
0000653E:	CALL 66DAh
00006541:	POP HL
00006542:	RET

00006543:	LD A,(F01Fh)
00006546:	CALL 6A26h
00006549:	LD HL,(F02Dh)
0000654C:	LD (F01Ah),HL
0000654F:	LD HL,(F031h)
00006552:	LD (F01Ch),HL
00006555:	LD HL,(F02Bh)
00006558:	LD B,H
00006559:	LD C,L
0000655A:	LD HL,(F02Fh)
0000655D:	EX DE,HL
0000655E:	CALL 7A31h
00006561:	LD HL,(F02Bh)
00006564:	LD (F027h),HL
00006567:	EX DE,HL
00006568:	LD HL,(F02Fh)
0000656B:	LD (F029h),HL
0000656E:	EX DE,HL
0000656F:	LD B,H
00006570:	LD C,L
00006571:	CALL 61CAh
00006574:	RET

00006575:	DEC HL
00006576:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00006577:	XOR A
00006578:	CALL 668Bh
0000657B:	RST 08h				; Check syntax, 1 byte follows to be compared
0000657C:	CALL P,013Eh
0000657F:	CALL 668Bh
00006582:	PUSH HL
00006583:	LD HL,(F02Bh)
00006586:	EX DE,HL
00006587:	LD HL,(F02Dh)
0000658A:	OR A
0000658B:	SBC HL,DE
0000658D:	JP Z,0B06h			; FCERR, Err $05 - "Illegal function call"
00006590:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
00006593:	LD (F090h),HL
00006596:	CALL 664Fh
00006599:	LD HL,(F02Fh)
0000659C:	EX DE,HL
0000659D:	LD HL,(F031h)
000065A0:	OR A
000065A1:	SBC HL,DE
000065A3:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
000065A6:	JP Z,0B06h			; FCERR, Err $05 - "Illegal function call"
000065A9:	LD (F092h),HL
000065AC:	CALL 666Dh
000065AF:	LD BC,0000h
000065B2:	POP HL
000065B3:	DEC HL
000065B4:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
000065B5:	JR Z,+24h
000065B7:	RST 08h				; Check syntax, 1 byte follows to be compared
000065B8:	DEFB ','
000065B9:	CP 2Ch
000065BB:	JR Z,+10h
000065BD:	PUSH BC
000065BE:	CALL 18A3h			; GETINT
000065C1:	POP BC
000065C2:	CP 08h
000065C4:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
000065C7:	INC A
000065C8:	LD B,A
000065C9:	DEC HL
000065CA:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
000065CB:	JR Z,+0Eh
000065CD:	RST 08h				; Check syntax, 1 byte follows to be compared
000065CE:	DEFB ','
000065CF:	PUSH BC
000065D0:	CALL 18A3h			; GETINT
000065D3:	POP BC
000065D4:	CP 08h
000065D6:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
000065D9:	INC A
000065DA:	LD C,A
000065DB:	PUSH HL
000065DC:	PUSH BC
000065DD:	LD A,B
000065DE:	OR A
000065DF:	JR Z,+04h
000065E1:	DEC A
000065E2:	CALL 6546h
000065E5:	CALL 6561h
000065E8:	CALL 63A8h
000065EB:	CALL 66DAh
000065EE:	POP BC
000065EF:	LD A,C
000065F0:	POP HL
000065F1:	OR A
000065F2:	RET Z
000065F3:	DEC A
000065F4:	PUSH HL
000065F5:	LD HL,FFFFh
000065F8:	LD (F025h),HL
000065FB:	CALL 6A26h
000065FE:	LD HL,(F02Dh)
00006601:	PUSH HL
00006602:	INC HL
00006603:	LD (F027h),HL
00006606:	LD (F01Ah),HL
00006609:	LD HL,(F031h)
0000660C:	PUSH HL
0000660D:	INC HL
0000660E:	LD (F029h),HL
00006611:	LD (F01Ch),HL
00006614:	LD HL,(F02Bh)
00006617:	PUSH HL
00006618:	DEC HL
00006619:	LD B,H
0000661A:	LD C,L
0000661B:	LD HL,(F02Fh)
0000661E:	PUSH HL
0000661F:	EX DE,HL
00006620:	DEC DE
00006621:	LD HL,0000h
00006624:	LD (F02Bh),HL
00006627:	LD (F02Fh),HL
0000662A:	LD HL,027Fh
0000662D:	LD (F02Dh),HL
00006630:	LD HL,(F08Dh)
00006633:	DEC HL
00006634:	LD (F031h),HL
00006637:	CALL 7B51h
0000663A:	POP HL
0000663B:	LD (F02Fh),HL
0000663E:	POP HL
0000663F:	LD (F02Bh),HL
00006642:	POP HL
00006643:	LD (F031h),HL
00006646:	POP HL
00006647:	LD (F02Dh),HL
0000664A:	CALL 66DAh
0000664D:	POP HL
0000664E:	RET

0000664F:	LD HL,(F090h)
00006652:	CALL 21FDh
00006655:	CALL 2214h				; CSNG - Convert number to single precision
00006658:	CALL 20CDh
0000665B:	LD HL,F094h
0000665E:	CALL 20DAh				; PHLTFP - Number at HL to BCDE
00006661:	POP BC
00006662:	POP DE
00006663:	CALL 1FB7h				; FDIV
00006666:	LD HL,F09Ch
00006669:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
0000666C:	RET

0000666D:	LD HL,(F092h)
00006670:	CALL 21FDh
00006673:	CALL 2214h				; CSNG - Convert number to single precision
00006676:	CALL 20CDh
00006679:	LD HL,F098h
0000667C:	CALL 20DAh				; PHLTFP - Number at HL to BCDE
0000667F:	POP BC
00006680:	POP DE
00006681:	CALL 1FB7h				; FDIV
00006684:	LD HL,F0A0h
00006687:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
0000668A:	RET

0000668B:	PUSH AF
0000668C:	DEC HL
0000668D:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
0000668E:	RST 08h				; Check syntax, 1 byte follows to be compared
0000668F:	JR Z,-33h
00006691:	SUB (HL)
00006692:	JR +7Ah
00006694:	OR A
00006695:	JP M,0B06h			; FCERR, Err $05 - "Illegal function call"
00006698:	PUSH HL
00006699:	LD HL,0280h
0000669C:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
0000669D:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
000066A0:	JP Z,0B06h			; FCERR, Err $05 - "Illegal function call"
000066A3:	EX DE,HL
000066A4:	EX HL,(SP)
000066A5:	DEC HL
000066A6:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
000066A7:	RST 08h				; Check syntax, 1 byte follows to be compared
000066A8:	DEFB ','
000066A9:	CALL 1896h
000066AC:	LD A,D
000066AD:	OR A
000066AE:	JP M,0B06h			; FCERR, Err $05 - "Illegal function call"
000066B1:	DEC HL
000066B2:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
000066B3:	RST 08h				; Check syntax, 1 byte follows to be compared
000066B4:	DEFB ')'
000066B5:	PUSH HL
000066B6:	LD HL,(F08Dh)
000066B9:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000066BA:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
000066BD:	JP Z,0B06h			; FCERR, Err $05 - "Illegal function call"
000066C0:	POP BC
000066C1:	POP HL
000066C2:	POP AF
000066C3:	PUSH BC
000066C4:	OR A
000066C5:	JP NZ,66D1h
000066C8:	LD (F02Bh),HL
000066CB:	EX DE,HL
000066CC:	LD (F02Fh),HL
000066CF:	POP HL
000066D0:	RET

000066D1:	LD (F02Dh),HL
000066D4:	EX DE,HL
000066D5:	LD (F031h),HL
000066D8:	POP HL
000066D9:	RET

000066DA:	LD HL,(F02Bh)
000066DD:	LD (F027h),HL
000066E0:	LD HL,(F02Fh)
000066E3:	LD (F029h),HL
000066E6:	LD BC,0004h
000066E9:	PUSH BC
000066EA:	LD DE,F0A4h
000066ED:	LD HL,F0B0h
000066F0:	LDIR
000066F2:	POP BC
000066F3:	LD HL,F0B8h
000066F6:	LDIR
000066F8:	RET

000066F9:	PUSH HL
000066FA:	CP 04h
000066FC:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
000066FF:	PUSH AF
00006700:	LD HL,F0ACh
00006703:	CALL 20DAh				; PHLTFP - Number at HL to BCDE
00006706:	LD A,04h
00006708:	LD (EABDh),A
0000670B:	LD A,(F08Fh)
0000670E:	OR A
0000670F:	JR NZ,+06h
00006711:	CALL 21A0h
00006714:	POP AF
00006715:	POP HL
00006716:	RET

00006717:	POP AF
00006718:	LD HL,F02Bh
0000671B:	LD DE,F0B0h
0000671E:	LD BC,F09Ch
00006721:	RRCA
00006722:	JP NC,672Eh
00006725:	LD HL,F02Fh
00006728:	LD DE,F0B8h
0000672B:	LD BC,F0A0h
0000672E:	RRCA
0000672F:	JP C,6737h
00006732:	CALL 673Ch
00006735:	POP HL
00006736:	RET

00006737:	CALL 6754h
0000673A:	POP HL
0000673B:	RET
0000673C:	PUSH HL
0000673D:	PUSH BC
0000673E:	EX DE,HL
0000673F:	CALL 20DAh				; PHLTFP - Number at HL to BCDE
00006742:	LD HL,F0ACh
00006745:	CALL 1DE3h
00006748:	POP HL
00006749:	CALL 20EBh			; LOADFP - Load FP value pointed by HL to BCDE
0000674C:	CALL 1F53h
0000674F:	CALL 21A0h
00006752:	POP DE
00006753:	RET

00006754:	PUSH DE
00006755:	PUSH BC
00006756:	CALL 2214h				; CSNG - Convert number to single precision
00006759:	LD HL,F0ACh
0000675C:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
0000675F:	POP HL
00006760:	CALL 20DAh				; PHLTFP - Number at HL to BCDE
00006763:	LD HL,F0ACh
00006766:	CALL 20EBh			; LOADFP - Load FP value pointed by HL to BCDE
00006769:	CALL 1FB7h				; FDIV
0000676C:	POP HL
0000676D:	CALL 1DDEh
00006770:	RET

00006771:	LD A,(F08Fh)
00006774:	OR A
00006775:	JP Z,78FCh
00006778:	LD A,(HL)
00006779:	CP 40h
0000677B:	CALL Z,0A0Dh
0000677E:	CP F4h
00006780:	JP Z,682Ch
00006783:	LD A,(F08Fh)
00006786:	CALL EE08h
00006789:	OR A
0000678A:	JP Z,790Bh
0000678D:	LD A,(HL)
0000678E:	CP DFh
00006790:	PUSH AF
00006791:	CALL Z,0A0Dh
00006794:	RST 08h				; Check syntax, 1 byte follows to be compared
00006795:	JR Z,-33h
00006797:	OUTA (11h)
00006799:	PUSH HL
0000679A:	CALL 2214h				; CSNG - Convert number to single precision
0000679D:	POP HL
0000679E:	POP AF
0000679F:	CALL 20CDh
000067A2:	PUSH AF
000067A3:	RST 08h				; Check syntax, 1 byte follows to be compared
000067A4:	DEFB ','
000067A5:	CALL 11D3h			; EVAL - evaluate expression
000067A8:	PUSH HL
000067A9:	CALL 2214h				; CSNG - Convert number to single precision
000067AC:	POP HL
000067AD:	RST 08h				; Check syntax, 1 byte follows to be compared
000067AE:	DEFB ')'
000067AF:	POP AF
000067B0:	PUSH HL
000067B1:	JR NZ,+1Fh
000067B3:	LD HL,F0A8h
000067B6:	PUSH HL
000067B7:	CALL 1DDEh
000067BA:	POP HL
000067BB:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
000067BE:	POP HL
000067BF:	POP BC
000067C0:	POP DE
000067C1:	PUSH HL
000067C2:	CALL 20DDh			; FPBCDE - Move BCDE to FPREG
000067C5:	LD HL,F0A4h
000067C8:	PUSH HL
000067C9:	CALL 1DDEh
000067CC:	POP HL
000067CD:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
000067D0:	JR +13h
000067D2:	LD HL,F0A8h
000067D5:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
000067D8:	POP HL
000067D9:	POP BC
000067DA:	POP DE
000067DB:	PUSH HL
000067DC:	CALL 20DDh			; FPBCDE - Move BCDE to FPREG
000067DF:	LD HL,F0A4h
000067E2:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
000067E5:	LD HL,F0ACh
000067E8:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
000067EB:	LD HL,F02Bh
000067EE:	LD DE,F0B0h
000067F1:	LD BC,F09Ch
000067F4:	CALL 673Ch
000067F7:	LD DE,(F02Bh)
000067FB:	ADD HL,DE
000067FC:	LD (F01Ah),HL
000067FF:	LD (F027h),HL
00006802:	LD HL,F0A8h
00006805:	CALL 20DAh				; PHLTFP - Number at HL to BCDE
00006808:	LD HL,F0ACh
0000680B:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
0000680E:	LD A,04h
00006810:	LD (EABDh),A
00006813:	LD HL,F02Fh
00006816:	LD DE,F0B8h
00006819:	LD BC,F0A0h
0000681C:	CALL 673Ch
0000681F:	LD DE,(F02Fh)
00006823:	ADD HL,DE
00006824:	LD (F01Ch),HL
00006827:	LD (F029h),HL
0000682A:	EX DE,HL
0000682B:	POP HL
0000682C:	PUSH HL
0000682D:	LD HL,(F027h)
00006830:	LD (F01Ah),HL
00006833:	LD B,H
00006834:	LD C,L
00006835:	LD HL,(F029h)
00006838:	LD (F01Ch),HL
0000683B:	EX DE,HL
0000683C:	POP HL
0000683D:	RET

0000683E:	PUSH BC
0000683F:	PUSH DE
00006840:	PUSH HL
00006841:	LD HL,(F027h)
00006844:	CALL 21FDh
00006847:	CALL 2214h				; CSNG - Convert number to single precision
0000684A:	LD HL,F0ACh
0000684D:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
00006850:	LD A,02h
00006852:	CALL 66F9h
00006855:	LD HL,F0A4h
00006858:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
0000685B:	LD HL,(F029h)
0000685E:	CALL 21FDh
00006861:	CALL 2214h				; CSNG - Convert number to single precision
00006864:	LD HL,F0ACh
00006867:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
0000686A:	LD A,03h
0000686C:	CALL 66F9h
0000686F:	LD HL,F0A8h
00006872:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
00006875:	POP HL
00006876:	POP DE
00006877:	POP BC
00006878:	RET

00006879:	PUSH BC
0000687A:	LD C,(HL)
0000687B:	INC HL
0000687C:	LD B,(HL)
0000687D:	INC HL
0000687E:	PUSH BC
0000687F:	EX HL,(SP)
00006880:	CALL 215Fh
00006883:	OR A
00006884:	POP HL
00006885:	JP M,688Fh
00006888:	JR Z,+05h
0000688A:	POP BC
0000688B:	LD A,C
0000688C:	ADD B
0000688D:	LD C,A
0000688E:	PUSH BC
0000688F:	LD C,(HL)
00006890:	INC HL
00006891:	LD B,(HL)
00006892:	INC HL
00006893:	PUSH BC
00006894:	EX HL,(SP)
00006895:	CALL 215Fh
00006898:	OR A
00006899:	POP HL
0000689A:	JP P,68A3h
0000689D:	POP BC
0000689E:	LD A,C
0000689F:	ADD B
000068A0:	ADD B
000068A1:	LD C,A
000068A2:	PUSH BC
000068A3:	POP BC
000068A4:	RET
000068A5:	PUSH HL
000068A6:	PUSH BC
000068A7:	PUSH DE
000068A8:	LD HL,F02Bh
000068AB:	LD D,B
000068AC:	LD E,C
000068AD:	LD B,01h
000068AF:	LD C,00h
000068B1:	CALL 6879h
000068B4:	LD B,04h
000068B6:	POP DE
000068B7:	PUSH DE
000068B8:	CALL 6879h
000068BB:	POP DE
000068BC:	LD A,C
000068BD:	POP BC
000068BE:	POP HL
000068BF:	RET
000068C0:	PUSH BC
000068C1:	PUSH DE
000068C2:	CALL 68A5h
000068C5:	PUSH AF
000068C6:	LD HL,(F01Ah)
000068C9:	LD B,H
000068CA:	LD C,L
000068CB:	LD HL,(F01Ch)
000068CE:	EX DE,HL
000068CF:	CALL 68A5h
000068D2:	LD H,A
000068D3:	POP AF
000068D4:	LD L,A
000068D5:	POP DE
000068D6:	POP BC
000068D7:	RET
000068D8:	CALL 68C0h
000068DB:	CALL EE02h
000068DE:	LD A,L
000068DF:	OR H
000068E0:	RET Z
000068E1:	LD A,L
000068E2:	AND H
000068E3:	RET NZ
000068E4:	LD A,L
000068E5:	OR A
000068E6:	JR NZ,+06h
000068E8:	CALL 79D6h
000068EB:	LD A,H
000068EC:	LD H,L
000068ED:	LD L,A
000068EE:	PUSH HL
000068EF:	LD A,L
000068F0:	RRCA
000068F1:	LD HL,(F02Bh)
000068F4:	CALL C,691Ch
000068F7:	JP C,6915h
000068FA:	RRCA
000068FB:	LD HL,(F02Dh)
000068FE:	CALL C,691Ch
00006901:	JP C,6915h
00006904:	RRCA
00006905:	LD HL,(F02Fh)
00006908:	CALL C,6976h
0000690B:	JP C,6915h
0000690E:	RRCA
0000690F:	LD HL,(F031h)
00006912:	CALL C,6976h
00006915:	CALL 68A5h
00006918:	POP HL
00006919:	LD L,A
0000691A:	JR -3Eh

0000691C:	PUSH AF
0000691D:	PUSH HL
0000691E:	LD HL,(F01Ch)
00006921:	OR A
00006922:	SBC HL,DE
00006924:	PUSH BC
00006925:	PUSH DE
00006926:	CALL 21FDh
00006929:	CALL 2214h				; CSNG - Convert number to single precision
0000692C:	LD HL,F0ACh
0000692F:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
00006932:	POP DE
00006933:	POP BC
00006934:	PUSH DE
00006935:	LD D,B
00006936:	LD E,C
00006937:	LD HL,(F01Ah)
0000693A:	OR A
0000693B:	SBC HL,DE
0000693D:	PUSH BC
0000693E:	CALL 21FDh
00006941:	CALL 2214h				; CSNG - Convert number to single precision
00006944:	LD HL,F0ACh
00006947:	PUSH HL
00006948:	CALL 20EBh			; LOADFP - Load FP value pointed by HL to BCDE
0000694B:	CALL 1FB7h				; FDIV
0000694E:	POP HL
0000694F:	CALL 20F4h			; DEC_FACCU2HL - copy number value from FPREG (FP accumulator) to HL
00006952:	POP BC
00006953:	POP DE
00006954:	POP HL
00006955:	PUSH DE
00006956:	LD D,B
00006957:	LD E,C
00006958:	LD B,H
00006959:	LD C,L
0000695A:	PUSH BC
0000695B:	OR A
0000695C:	SBC HL,DE
0000695E:	CALL 21FDh
00006961:	CALL 2214h				; CSNG - Convert number to single precision
00006964:	LD HL,F0ACh
00006967:	CALL 20EBh			; LOADFP - Load FP value pointed by HL to BCDE
0000696A:	CALL 1F53h
0000696D:	CALL 21A0h
00006970:	POP BC
00006971:	POP DE
00006972:	ADD HL,DE
00006973:	EX DE,HL
00006974:	POP AF
00006975:	RET

00006976:	PUSH BC
00006977:	PUSH DE
00006978:	POP BC
00006979:	POP DE
0000697A:	CALL 6988h
0000697D:	CALL 691Ch
00006980:	PUSH BC
00006981:	PUSH DE
00006982:	POP BC
00006983:	POP DE
00006984:	CALL 6988h
00006987:	RET

00006988:	PUSH HL
00006989:	LD HL,(F01Ch)
0000698C:	PUSH HL
0000698D:	LD HL,(F01Ah)
00006990:	LD (F01Ch),HL
00006993:	POP HL
00006994:	LD (F01Ah),HL
00006997:	POP HL
00006998:	RET

00006999:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
0000699C:	RST 18h
0000699D:	LD (HL),E
0000699E:	NOP
0000699F:	RET

000069A0:	CP 93h
000069A2:	JP Z,6999h
000069A5:	CP 28h
000069A7:	JR Z,+30h
000069A9:	CP 90h
000069AB:	JR Z,+27h
000069AD:	CP EEh
000069AF:	JR Z,+0Bh
000069B1:	CP 95h
000069B3:	JR Z,+10h

000069B5:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
000069B8:	LD B,E
000069B9:	LD (HL),H
000069BA:	NOP
000069BB:	RET

000069BC:	LD BC,6A19h
000069BF:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
000069C0:	LD A,09h
000069C2:	JP 4AD7h
000069C5:	LD BC,6A12h
000069C8:	CALL 69BFh
000069CB:	POP AF
000069CC:	EX DE,HL
000069CD:	LD HL,09ABh
000069D0:	EX HL,(SP)
000069D1:	EX DE,HL
000069D2:	PUSH AF
000069D3:	RET
000069D4:	LD BC,6A20h
000069D7:	JR -1Ah
000069D9:	RST 08h				; Check syntax, 1 byte follows to be compared
000069DA:	JR Z,-33h
000069DC:	AND E
000069DD:	JR +1Dh
000069DF:	RST 08h				; Check syntax, 1 byte follows to be compared
000069E0:	DEFB ')'
000069E1:	LD A,E
000069E2:	CP 0Ah
000069E4:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
000069E7:	PUSH AF
000069E8:	LD A,(HL)
000069E9:	PUSH AF
000069EA:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
000069EB:	JP NZ,0393h
000069EE:	POP AF
000069EF:	POP DE
000069F0:	PUSH HL
000069F1:	CP EEh
000069F3:	JR Z,+10h
000069F5:	CP 90h
000069F7:	JR Z,+12h
000069F9:	CP 95h
000069FB:	JP NZ,0B06h			; FCERR, Err $05 - "Illegal function call"
000069FE:	LD A,D
000069FF:	CALL 6A12h
00006A02:	POP HL
00006A03:	JR -3Ah
00006A05:	LD A,D
00006A06:	CALL 6A19h
00006A09:	POP HL
00006A0A:	RET
00006A0B:	LD A,D
00006A0C:	CALL 6A20h
00006A0F:	POP HL
00006A10:	RET
00006A11:	DEC A
00006A12:	CALL 4013h
00006A15:	JP 4FE5h
00006A18:	DEC A
00006A19:	CALL 4013h
00006A1C:	JP 4FF5h
00006A1F:	DEC A
00006A20:	CALL 4013h
00006A23:	JP 4FFBh
00006A26:	CP 08h
00006A28:	CCF
00006A29:	RET C
00006A2A:	LD (84DDh),A
00006A2D:	PUSH BC
00006A2E:	PUSH AF
00006A2F:	LD A,(F087h)		; SCREEN - screen mode
00006A32:	OR A
00006A33:	JR NZ,+04h
00006A35:	POP AF
00006A36:	JP 6A4Ah
00006A39:	LD A,(849Eh)
00006A3C:	LD B,A
00006A3D:	POP AF
00006A3E:	OR A
00006A3F:	JR Z,+02h
00006A41:	LD A,0Fh
00006A43:	LD (84DDh),A
00006A46:	LD (849Fh),A
00006A49:	OR B
00006A4A:	LD (849Dh),A
00006A4D:	OUTA (34h)
00006A4F:	POP BC
00006A50:	RET
00006A51:	PUSH BC
00006A52:	LD HL,(F033h)			; pointer on paint address
00006A55:	LD A,(F035h)
00006A58:	LD BC,8035h
00006A5B:	DI
00006A5C:	OUT (C),B
00006A5E:	LD (HL),A
00006A5F:	LD B,00h
00006A61:	OUT (C),B
00006A63:	EI
00006A64:	POP BC
00006A65:	RET
00006A66:	CALL 35C2h
00006A69:	RET NC
00006A6A:	INA (32h)
00006A6C:	RES 6,A
00006A6E:	OUTA (32h)
00006A70:	XOR A
00006A71:	OUTA (35h)
00006A73:	JP 84BEh
00006A76:	PUSH AF
00006A77:	JP 6481h
00006A7A:	PUSH BC
00006A7B:	PUSH DE
00006A7C:	JP 7143h
00006A7F:	PUSH BC
00006A80:	PUSH DE
00006A81:	JP 7150h
00006A84:	PUSH HL
00006A85:	JP 78BEh

00006A88:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006A8B:	LD B,D
00006A8C:	LD H,L
00006A8D:	LD (BC),A
00006A8E:	RET

00006A8F:	PUSH BC
00006A90:	RST 08h				; Check syntax, 1 byte follows to be compared
00006A91:	DEFB ','
00006A92:	INC HL
00006A93:	CALL 6AA0h
00006A96:	CALL 0A0Eh
00006A99:	POP BC
00006A9A:	RET
00006A9B:	LD SP,HL
00006A9C:	RET M
00006A9D:	RET NC
00006A9E:	RST 08h				; Check syntax, 1 byte follows to be compared
00006A9F:	JP M,06E5h
00006AA2:	DEC B
00006AA3:	LD HL,6A9Fh
00006AA6:	CP (HL)
00006AA7:	JR Z,+06h
00006AA9:	DEC HL
00006AAA:	DJNZ -06h
00006AAC:	JP 0393h
00006AAF:	DEC B
00006AB0:	POP HL
00006AB1:	LD A,(84DDh)
00006AB4:	LD C,A
00006AB5:	LD A,B
00006AB6:	OR A
00006AB7:	JR Z,+0Fh
00006AB9:	DEC A
00006ABA:	JR Z,+15h
00006ABC:	DEC A
00006ABD:	JR Z,+1Bh
00006ABF:	DEC A
00006AC0:	RET Z
00006AC1:	LD A,C
00006AC2:	CPL
00006AC3:	OR F0h
00006AC5:	JP 6ADEh
00006AC8:	LD A,C
00006AC9:	CPL
00006ACA:	RLCA
00006ACB:	RLCA
00006ACC:	RLCA
00006ACD:	RLCA
00006ACE:	JP 6ADEh
00006AD1:	LD A,C
00006AD2:	RLCA
00006AD3:	RLCA
00006AD4:	RLCA
00006AD5:	RLCA
00006AD6:	OR C
00006AD7:	JP 6ADEh
00006ADA:	LD A,C
00006ADB:	CPL
00006ADC:	AND 0Fh
00006ADE:	LD (849Fh),A
00006AE1:	LD B,A
00006AE2:	LD A,(F087h)		; SCREEN - screen mode
00006AE5:	OR A
00006AE6:	JP Z,6AECh
00006AE9:	LD A,(849Eh)
00006AEC:	OR B
00006AED:	LD (849Dh),A
00006AF0:	OUTA (34h)
00006AF2:	RET

00006AF3:	CALL 39E4h
00006AF6:	LD D,C
00006AF7:	LD H,L
00006AF8:	LD (BC),A
00006AF9:	NOP

00006AFA:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006AFD:	ADD HL,HL
00006AFE:	LD L,L
00006AFF:	NOP
00006B00:	RET

00006B01:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B04:	LD D,E
00006B05:	LD (HL),B
00006B06:	NOP
00006B07:	RET

00006B08:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B0B:	LD H,H
00006B0C:	LD (HL),B
00006B0D:	NOP
00006B0E:	RET

00006B0F:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B12:	DEC H
00006B13:	LD L,(HL)
00006B14:	NOP
00006B15:	RET

00006B16:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B19:	RET NZ
00006B1A:	LD L,L
00006B1B:	NOP
00006B1C:	RET

00006B1D:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B20:	PUSH DE
00006B21:	LD L,H
00006B22:	NOP
00006B23:	RET

00006B24:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B27:	LD D,L
00006B28:	LD L,H
00006B29:	NOP
00006B2A:	RET

00006B2B:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B2E:	XOR B
00006B2F:	LD L,H
00006B30:	NOP
00006B31:	RET

00006B32:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B35:	RET NC
00006B36:	LD (HL),D
00006B37:	NOP
00006B38:	RET

00006B39:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B3C:	SBC HL,SP
00006B3E:	NOP
00006B3F:	RET

00006B40:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B43:	INC H
00006B44:	LD (HL),E
00006B45:	NOP
00006B46:	RET

00006B47:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B4A:	LD HL,(0075h)
00006B4D:	RET

00006B4E:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B51:	XOR 74h
00006B53:	NOP
00006B54:	RET

00006B55:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B58:	AND C
00006B59:	LD (HL),L
00006B5A:	NOP
00006B5B:	RET

00006B5C:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B5F:	LD C,A
00006B60:	LD (HL),L
00006B61:	NOP
00006B62:	RET

00006B63:	CALL 39E4h
00006B66:	LD (IX+00h),L

00006B69:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00006B6C:	LD A,B
00006B6D:	LD L,B
00006B6E:	NOP
00006B6F:	RET

00006B70:	CALL 62D4h
00006B73:	RET C
00006B74:	LD (F045h),A		; PALETN - single color (0=blue; 1=red; 2=green)
00006B77:	RRCA
00006B78:	SBC A
00006B79:	LD (F046h),A		; BORDER
00006B7C:	OR A
00006B7D:	RET

00006B7E:	PUSH BC
00006B7F:	CALL 62D4h
00006B82:	POP BC
00006B83:	RET C
00006B84:	LD (F044h),A	; ATRBYT (aka PPALET)
00006B87:	RRCA
00006B88:	SBC A
00006B89:	LD (F036h),A
00006B8C:	OR A
00006B8D:	RET

00006B8E:	PUSH DE
00006B8F:	CALL EDEDh
00006B92:	CALL 60CCh
00006B95:	XOR A
00006B96:	LD (8482h),A
00006B99:	LD (F049h),A
00006B9C:	LD D,80h
00006B9E:	SLA E
00006BA0:	JR C,+09h
00006BA2:	SRL D
00006BA4:	SLA C
00006BA6:	SLA B
00006BA8:	JP 6B9Eh
00006BAB:	PUSH DE
00006BAC:	LD DE,(F0CEh)	; RTVIEW
00006BB0:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006BB1:	POP DE
00006BB2:	JP NZ,6BBAh
00006BB5:	LD A,FFh
00006BB7:	LD (8482h),A
00006BBA:	LD A,C
00006BBB:	OR C
00006BBC:	JP Z,6C63h
00006BBF:	SLA C
00006BC1:	JR C,+60h
00006BC3:	PUSH HL
00006BC4:	LD HL,0001h
00006BC7:	EX HL,(SP)
00006BC8:	SLA B
00006BCA:	JR NC,+03h
00006BCC:	LD (F049h),A
00006BCF:	LD (8483h),HL
00006BD2:	LD A,D
00006BD3:	DEC A
00006BD4:	OR D
00006BD5:	LD (8485h),A
00006BD8:	PUSH HL
00006BD9:	LD A,H
00006BDA:	AND 3Fh
00006BDC:	LD H,A
00006BDD:	LD A,(F089h)
00006BE0:	SUB 5Ch
00006BE2:	RRCA
00006BE3:	RRCA
00006BE4:	OR H
00006BE5:	LD H,A
00006BE6:	LD (F04Ch),HL	; CSAVEA (SAVESP)
00006BE9:	LD A,D
00006BEA:	LD (F04Eh),A	; CSAVEM
00006BED:	POP HL
00006BEE:	LD A,(8482h)
00006BF1:	OR A
00006BF2:	JP Z,6C5Ch
00006BF5:	LD A,(F0CBh)
00006BF8:	CP D
00006BF9:	JR NZ,+61h
00006BFB:	LD (F033h),HL			; pointer on paint address
00006BFE:	LD A,D
00006BFF:	LD (F035h),A
00006C02:	LD (8486h),HL
00006C05:	DEC A
00006C06:	CPL
00006C07:	LD (8488h),A
00006C0A:	LD A,(F049h)
00006C0D:	LD (F070h),A
00006C10:	OR A
00006C11:	CALL NZ,848Fh
00006C14:	POP HL
00006C15:	POP DE
00006C16:	LD (F06Dh),DE
00006C1A:	LD (F06Bh),HL
00006C1D:	LD A,H
00006C1E:	OR L
00006C1F:	LD A,(F049h)
00006C22:	RET
00006C23:	EX HL,(SP)
00006C24:	DEC HL
00006C25:	LD A,L
00006C26:	OR H
00006C27:	JR Z,+1Eh
00006C29:	EX HL,(SP)
00006C2A:	SLA B
00006C2C:	LD A,(8482h)
00006C2F:	OR A
00006C30:	JP Z,6C39h
00006C33:	LD A,(F0CBh)
00006C36:	CP D
00006C37:	JR Z,+0Eh
00006C39:	SRL D
00006C3B:	JP NC,6BBAh
00006C3E:	INC HL
00006C3F:	CALL 6F34h
00006C42:	LD D,80h
00006C44:	JP 6BABh
00006C47:	POP DE
00006C48:	LD HL,0000h
00006C4B:	LD DE,0000h
00006C4E:	LD (F06Dh),DE
00006C52:	LD (F06Bh),HL
00006C55:	LD A,(F049h)
00006C58:	LD (F070h),A
00006C5B:	RET
00006C5C:	SRL D
00006C5E:	JR C,+3Bh
00006C60:	JP 6CAEh
00006C63:	LD A,(8482h)
00006C66:	OR A
00006C67:	JP NZ,6BBFh
00006C6A:	LD (8483h),HL
00006C6D:	LD A,D
00006C6E:	DEC A
00006C6F:	OR D
00006C70:	LD (8485h),A
00006C73:	PUSH HL
00006C74:	LD A,H
00006C75:	AND 3Fh
00006C77:	LD H,A
00006C78:	LD A,(F089h)
00006C7B:	SUB 5Ch
00006C7D:	RRCA
00006C7E:	RRCA
00006C7F:	OR H
00006C80:	LD H,A
00006C81:	LD (F04Ch),HL	; CSAVEA (SAVESP)
00006C84:	LD A,D
00006C85:	LD (F04Eh),A	; CSAVEM
00006C88:	LD HL,0000h
00006C8B:	EX HL,(SP)
00006C8C:	EX HL,(SP)
00006C8D:	INC HL
00006C8E:	SRL D
00006C90:	JP NC,6C8Dh
00006C93:	EX HL,(SP)
00006C94:	LD A,B
00006C95:	OR B
00006C96:	JR Z,+03h
00006C98:	LD (F049h),A
00006C9B:	INC HL
00006C9C:	CALL 6F34h
00006C9F:	LD DE,(F0CEh)	; RTVIEW
00006CA3:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006CA4:	LD D,80h
00006CA6:	JP NZ,6CAEh
00006CA9:	LD A,FFh
00006CAB:	LD (8482h),A
00006CAE:	LD A,C
00006CAF:	AND C
00006CB0:	JP Z,6CC5h
00006CB3:	SLA C
00006CB5:	JR C,+17h
00006CB7:	EX HL,(SP)
00006CB8:	INC HL
00006CB9:	EX HL,(SP)
00006CBA:	SLA B
00006CBC:	JP NC,6BEEh
00006CBF:	LD (F049h),A
00006CC2:	JP 6BEEh
00006CC5:	LD A,(8482h)
00006CC8:	OR A
00006CC9:	JR NZ,-18h
00006CCB:	JP 6C8Ch
00006CCE:	LD (F033h),HL			; pointer on paint address
00006CD1:	LD A,D
00006CD2:	LD (F035h),A
00006CD5:	SLA A
00006CD7:	JP NC,6C02h
00006CDA:	DEC HL
00006CDB:	LD A,01h
00006CDD:	JP 6C02h
00006CE0:	CALL EDF0h
00006CE3:	CALL 629Eh
00006CE6:	PUSH HL
00006CE7:	PUSH AF
00006CE8:	LD HL,(F04Ch)	; CSAVEA (SAVESP)
00006CEB:	LD A,(F04Eh)	; CSAVEM
00006CEE:	CALL 62B2h
00006CF1:	POP AF
00006CF2:	POP HL
00006CF3:	LD (F04Ch),HL	; CSAVEA (SAVESP)
00006CF6:	LD (F04Eh),A	; CSAVEM
00006CF9:	CALL 60CCh
00006CFC:	XOR A
00006CFD:	LD (8482h),A
00006D00:	LD (F049h),A
00006D03:	LD D,01h
00006D05:	LD HL,(8483h)
00006D08:	LD (8486h),HL
00006D0B:	LD A,(8485h)
00006D0E:	CPL
00006D0F:	LD (8488h),A
00006D12:	PUSH HL
00006D13:	LD HL,0000h
00006D16:	EX HL,(SP)
00006D17:	SRL E
00006D19:	JR C,+09h
00006D1B:	SLA D
00006D1D:	SRL C
00006D1F:	SRL B
00006D21:	JP 6D17h

00006D24:	PUSH DE
00006D25:	LD DE,(F0CCh)	; LFVIEW
00006D29:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006D2A:	POP DE
00006D2B:	JR NZ,+12h
00006D2D:	LD A,(F0CAh)	; VIEW2 - view position bit limit
00006D30:	CP D
00006D31:	JP NZ,6D3Ah
00006D34:	POP HL
00006D35:	XOR A
00006D36:	LD (F06Fh),A
00006D39:	RET

00006D3A:	LD A,FFh
00006D3C:	LD (8482h),A
00006D3F:	SRL C
00006D41:	SRL B
00006D43:	SLA D
00006D45:	JR NC,+13h
00006D47:	DEC HL
00006D48:	CALL 6F34h
00006D4B:	LD DE,(F0CCh)	; LFVIEW
00006D4F:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006D50:	LD D,01h
00006D52:	JP NZ,6D5Ah
00006D55:	LD A,FFh
00006D57:	LD (8482h),A
00006D5A:	LD A,C
00006D5B:	OR C
00006D5C:	JP Z,6DA2h
00006D5F:	SRL C
00006D61:	JR C,+34h
00006D63:	EX HL,(SP)
00006D64:	INC HL
00006D65:	EX HL,(SP)
00006D66:	SRL B
00006D68:	JR NC,+03h
00006D6A:	LD (F049h),A
00006D6D:	LD A,(8482h)
00006D70:	OR A
00006D71:	JR Z,-30h
00006D73:	LD A,(F0CAh)	; VIEW2 - view position bit limit
00006D76:	CP D
00006D77:	JR NZ,-36h
00006D79:	LD (8483h),HL
00006D7C:	LD (F033h),HL			; pointer on paint address
00006D7F:	LD A,D
00006D80:	LD (F035h),A
00006D83:	DEC A
00006D84:	OR D
00006D85:	LD (8485h),A
00006D88:	LD A,(F049h)
00006D8B:	LD (F06Fh),A
00006D8E:	OR A
00006D8F:	CALL NZ,848Fh
00006D92:	POP HL
00006D93:	LD A,(F06Fh)
00006D96:	RET
00006D97:	SRL D
00006D99:	JP NC,6D79h
00006D9C:	INC HL
00006D9D:	LD D,80h
00006D9F:	JP 6D79h
00006DA2:	LD A,(8482h)
00006DA5:	OR A
00006DA6:	JR NZ,-49h
00006DA8:	EX HL,(SP)
00006DA9:	INC HL
00006DAA:	SLA D
00006DAC:	JP NC,6DA9h
00006DAF:	EX HL,(SP)
00006DB0:	LD A,B
00006DB1:	AND B
00006DB2:	JP Z,6D47h
00006DB5:	LD (F049h),A
00006DB8:	JP 6D47h
00006DBB:	LD HL,(8486h)
00006DBE:	LD DE,(8483h)
00006DC2:	OR A
00006DC3:	SBC HL,DE
00006DC5:	EX DE,HL
00006DC6:	LD A,(8485h)
00006DC9:	LD C,A
00006DCA:	LD B,E
00006DCB:	LD DE,(F037h)
00006DCF:	JR Z,+66h
00006DD1:	LD A,(F036h)
00006DD4:	DI
00006DD5:	OUTA (5Ch)
00006DD7:	XOR (HL)
00006DD8:	AND C
00006DD9:	XOR (HL)
00006DDA:	LD (HL),A
00006DDB:	LD A,E
00006DDC:	OUTA (5Dh)
00006DDE:	XOR (HL)
00006DDF:	AND C
00006DE0:	XOR (HL)
00006DE1:	LD (HL),A
00006DE2:	LD A,D
00006DE3:	OUTA (5Eh)
00006DE5:	XOR (HL)
00006DE6:	AND C
00006DE7:	XOR (HL)
00006DE8:	LD (HL),A
00006DE9:	OUTA (5Fh)
00006DEB:	EI
00006DEC:	INC HL
00006DED:	DEC B
00006DEE:	JR Z,+27h
00006DF0:	LD (849Bh),HL
00006DF3:	LD C,B
00006DF4:	LD A,(F036h)
00006DF7:	DI
00006DF8:	OUTA (5Ch)
00006DFA:	LD (HL),A
00006DFB:	INC HL
00006DFC:	DJNZ -04h
00006DFE:	LD A,E
00006DFF:	OUTA (5Dh)
00006E01:	LD HL,(849Bh)
00006E04:	LD B,C
00006E05:	LD (HL),A
00006E06:	INC HL
00006E07:	DJNZ -04h
00006E09:	LD A,D
00006E0A:	OUTA (5Eh)
00006E0C:	LD B,C
00006E0D:	LD HL,(849Bh)
00006E10:	LD (HL),A
00006E11:	INC HL
00006E12:	DJNZ -04h
00006E14:	OUTA (5Fh)
00006E16:	EI
00006E17:	LD A,(8488h)
00006E1A:	LD C,A
00006E1B:	LD A,(F036h)
00006E1E:	DI
00006E1F:	OUTA (5Ch)
00006E21:	XOR (HL)
00006E22:	AND C
00006E23:	XOR (HL)
00006E24:	LD (HL),A
00006E25:	LD A,E
00006E26:	OUTA (5Dh)
00006E28:	XOR (HL)
00006E29:	AND C
00006E2A:	XOR (HL)
00006E2B:	LD (HL),A
00006E2C:	LD A,D
00006E2D:	OUTA (5Eh)
00006E2F:	XOR (HL)
00006E30:	AND C
00006E31:	XOR (HL)
00006E32:	LD (HL),A
00006E33:	OUTA (5Fh)
00006E35:	EI
00006E36:	RET
00006E37:	LD A,(8488h)
00006E3A:	AND C
00006E3B:	JP 6E1Ah
00006E3E:	LD HL,(8486h)
00006E41:	LD DE,(8483h)
00006E45:	OR A
00006E46:	SBC HL,DE
00006E48:	EX DE,HL
00006E49:	LD A,(8485h)
00006E4C:	LD D,A
00006E4D:	LD B,E
00006E4E:	LD A,(F089h)
00006E51:	LD C,A
00006E52:	LD A,(F036h)
00006E55:	LD E,A
00006E56:	LD A,(8488h)
00006E59:	JR Z,+1Bh
00006E5B:	DI
00006E5C:	OUT (C),A
00006E5E:	LD C,A
00006E5F:	LD A,E
00006E60:	XOR (HL)
00006E61:	AND D
00006E62:	XOR (HL)
00006E63:	LD (HL),A
00006E64:	INC HL
00006E65:	DEC B
00006E66:	JR Z,+05h
00006E68:	LD A,E
00006E69:	LD (HL),A
00006E6A:	INC HL
00006E6B:	DJNZ -04h
00006E6D:	LD A,E
00006E6E:	XOR (HL)
00006E6F:	AND C
00006E70:	XOR (HL)
00006E71:	LD (HL),A
00006E72:	OUTA (5Fh)
00006E74:	EI
00006E75:	RET

00006E76:	AND D
00006E77:	DI
00006E78:	OUT (C),A
00006E7A:	LD C,A
00006E7B:	JP 6E6Dh

00006E7E:	LD A,(F087h)		; SCREEN - screen mode
00006E81:	ADD A
00006E82:	LD D,A
00006E83:	LD A,(F056h)		; TILFLG - tile string flag
00006E86:	ADD D
00006E87:	LD E,A
00006E88:	ADD A
00006E89:	ADD A
00006E8A:	ADD A
00006E8B:	ADD A
00006E8C:	SUB E
00006E8D:	LD C,A
00006E8E:	LD B,00h
00006E90:	LD HL,6EDAh
00006E93:	ADD HL,BC
00006E94:	PUSH DE
00006E95:	LD DE,8489h
00006E98:	LD BC,000Fh
00006E9B:	LDIR
00006E9D:	POP DE
00006E9E:	LD A,D
00006E9F:	OR A
00006EA0:	JR NZ,+19h
00006EA2:	LD A,(F045h)		; PALETN - single color (0=blue; 1=red; 2=green)
00006EA5:	OR 80h
00006EA7:	LD (8498h),A
00006EAA:	BIT 0,E
00006EAC:	RET NZ
00006EAD:	LD A,(F044h)	; ATRBYT (aka PPALET)
00006EB0:	OR 80h
00006EB2:	LD (8499h),A
00006EB5:	AND 07h
00006EB7:	LD (849Ah),A
00006EBA:	RET

00006EBB:	BIT 0,E
00006EBD:	RET NZ
00006EBE:	LD A,(F089h)
00006EC1:	LD B,A
00006EC2:	LD A,5Fh
00006EC4:	SUB B
00006EC5:	LD B,A
00006EC6:	LD A,08h
00006EC8:	LD HL,F036h
00006ECB:	AND (HL)
00006ECC:	OR F7h
00006ECE:	LD C,7Fh
00006ED0:	RRCA
00006ED1:	RRC C
00006ED3:	DJNZ -05h
00006ED5:	AND C
00006ED6:	LD (849Ah),A
00006ED9:	RET
00006EDA:	JP 6F45h
00006EDD:	JP 6F3Fh
00006EE0:	JP 6F94h
00006EE3:	JP 6FDEh
00006EE6:	JP 6FF0h
00006EE9:	JP 6F45h
00006EEC:	JP 6F5Ch
00006EEF:	JP 6DBBh
00006EF2:	JP 7003h
00006EF5:	JP 700Fh
00006EF8:	JP 6F7Dh
00006EFB:	JP 6F82h
00006EFE:	JP 6F94h
00006F01:	JP 6FDEh
00006F04:	JP 6FF0h
00006F07:	JP 6F7Dh
00006F0A:	JP 6F82h
00006F0D:	JP 6E3Eh
00006F10:	JP 7003h
00006F13:	JP 700Fh
00006F16:	JP 6F7Dh
00006F19:	JP 6F82h
00006F1C:	JP 6E3Eh
00006F1F:	JP 701Bh
00006F22:	JP 7057h
00006F25:	JP 6F7Dh
00006F28:	JP 6F82h
00006F2B:	JP 6E3Eh
00006F2E:	JP 7093h
00006F31:	JP 709Fh

00006F34:	CALL 848Ch
00006F37:	CPL
00006F38:	PUSH AF
00006F39:	CALL 8489h
00006F3C:	POP BC
00006F3D:	LD C,A
00006F3E:	RET
00006F3F:	LD A,(8499h)
00006F42:	JP 6F48h
00006F45:	LD A,(8498h)
00006F48:	OUTA (35h)
00006F4A:	INA (32h)
00006F4C:	LD B,A
00006F4D:	OR 40h
00006F4F:	DI
00006F50:	OUTA (32h)
00006F52:	LD C,(HL)
00006F53:	LD A,B
00006F54:	OUTA (32h)
00006F56:	EI
00006F57:	XOR A
00006F58:	OUTA (35h)
00006F5A:	LD A,C
00006F5B:	RET
00006F5C:	PUSH DE
00006F5D:	LD DE,(F037h)
00006F61:	LD A,(F036h)
00006F64:	LD B,00h
00006F66:	DI
00006F67:	OUTA (5Ch)
00006F69:	XOR (HL)
00006F6A:	OR B
00006F6B:	LD B,A
00006F6C:	LD A,E
00006F6D:	OUTA (5Dh)
00006F6F:	XOR (HL)
00006F70:	OR B
00006F71:	LD B,A
00006F72:	LD A,D
00006F73:	OUTA (5Eh)
00006F75:	XOR (HL)
00006F76:	OR B
00006F77:	OUTA (5Fh)
00006F79:	EI
00006F7A:	POP DE
00006F7B:	CPL
00006F7C:	RET

00006F7D:	LD A,(F046h)		; BORDER
00006F80:	JR +03h

00006F82:	LD A,(F036h)
00006F85:	LD B,A
00006F86:	LD A,(F089h)
00006F89:	LD C,A
00006F8A:	LD A,B
00006F8B:	DI
00006F8C:	OUT (C),A
00006F8E:	XOR (HL)
00006F8F:	OUTA (5Fh)
00006F91:	EI
00006F92:	CPL
00006F93:	RET
00006F94:	LD A,(849Ah)
00006F97:	OUTA (34h)
00006F99:	LD A,80h
00006F9B:	OUTA (35h)
00006F9D:	INA (32h)
00006F9F:	LD E,A
00006FA0:	LD A,(8485h)
00006FA3:	LD C,A
00006FA4:	LD A,(8488h)
00006FA7:	LD D,A
00006FA8:	LD A,E
00006FA9:	PUSH DE
00006FAA:	LD HL,(8486h)
00006FAD:	LD DE,(8483h)
00006FB1:	OR A
00006FB2:	SBC HL,DE
00006FB4:	LD B,L
00006FB5:	EX DE,HL
00006FB6:	POP DE
00006FB7:	JR Z,+1Bh
00006FB9:	OR 40h
00006FBB:	DI
00006FBC:	OUTA (32h)
00006FBE:	LD A,C
00006FBF:	LD (HL),A
00006FC0:	INC HL
00006FC1:	DEC B
00006FC2:	JR Z,+06h
00006FC4:	LD A,FFh
00006FC6:	LD (HL),A
00006FC7:	INC HL
00006FC8:	DJNZ -04h
00006FCA:	LD A,D
00006FCB:	LD (HL),A
00006FCC:	LD A,E
00006FCD:	OUTA (32h)
00006FCF:	EI
00006FD0:	XOR A
00006FD1:	OUTA (35h)
00006FD3:	RET

00006FD4:	OR 40h
00006FD6:	DI
00006FD7:	OUTA (32h)
00006FD9:	LD A,C
00006FDA:	AND D
00006FDB:	JP 6FCBh

00006FDE:	LD DE,(F0C0h)	; LFUPVW - view (x1,y1) address +50h
00006FE2:	LD HL,(F033h)			; pointer on paint address
00006FE5:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006FE6:	RET C
00006FE7:	LD DE,FFB0h
00006FEA:	ADD HL,DE
00006FEB:	LD (F033h),HL			; pointer on paint address
00006FEE:	OR A
00006FEF:	RET

00006FF0:	LD DE,(F0C3h)	; RTDWVW - view (x2,y2) address -4Fh
00006FF4:	LD HL,(F033h)			; pointer on paint address
00006FF7:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00006FF8:	CCF
00006FF9:	RET C
00006FFA:	LD DE,0050h
00006FFD:	ADD HL,DE
00006FFE:	LD (F033h),HL			; pointer on paint address
00007001:	OR A
00007002:	RET

00007003:	CALL 6FDEh
00007006:	RET C
00007007:	CALL 7362h
0000700A:	CALL 732Fh
0000700D:	OR A
0000700E:	RET

0000700F:	CALL 6FF0h
00007012:	RET C
00007013:	CALL 7371h
00007016:	CALL 732Fh
00007019:	OR A
0000701A:	RET

0000701B:	LD DE,(F0C0h)	; LFUPVW - view (x1,y1) address +50h
0000701F:	LD HL,(F033h)			; pointer on paint address
00007022:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007023:	JP NC,7032h
00007026:	LD A,(F0C2h)
00007029:	LD H,A
0000702A:	LD A,(F089h)
0000702D:	SUB H
0000702E:	JR NZ,+02h
00007030:	SCF
00007031:	RET

00007032:	LD HL,(F033h)			; pointer on paint address
00007035:	LD DE,C050h
00007038:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007039:	JP C,7045h
0000703C:	LD DE,FFB0h
0000703F:	ADD HL,DE
00007040:	LD (F033h),HL			; pointer on paint address
00007043:	OR A
00007044:	RET

00007045:	LD A,H
00007046:	OR FEh
00007048:	LD H,A
00007049:	LD A,L
0000704A:	ADD 30h
0000704C:	LD L,A
0000704D:	LD (F033h),HL			; pointer on paint address
00007050:	LD A,5Ch
00007052:	LD (F089h),A
00007055:	OR A
00007056:	RET

00007057:	LD DE,(F0C3h)	; RTDWVW - view (x2,y2) address -4Fh
0000705B:	LD HL,(F033h)			; pointer on paint address
0000705E:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
0000705F:	JP C,706Eh
00007062:	LD A,(F0C5h)	; LFVWPS - view (Lx,0) address
00007065:	LD H,A
00007066:	LD A,(F089h)
00007069:	SUB H
0000706A:	JR NZ,+02h
0000706C:	SCF
0000706D:	RET

0000706E:	LD HL,(F033h)			; pointer on paint address
00007071:	LD DE,FE30h
00007074:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007075:	JP C,708Ah
00007078:	LD A,H
00007079:	AND C1h
0000707B:	LD H,A
0000707C:	LD A,L
0000707D:	SUB 30h
0000707F:	LD L,A
00007080:	LD (F033h),HL			; pointer on paint address
00007083:	LD A,5Dh
00007085:	LD (F089h),A
00007088:	OR A
00007089:	RET

0000708A:	LD DE,0050h
0000708D:	ADD HL,DE
0000708E:	LD (F033h),HL			; pointer on paint address
00007091:	OR A
00007092:	RET

00007093:	CALL 701Bh
00007096:	RET C
00007097:	CALL 7362h
0000709A:	CALL 732Fh
0000709D:	OR A
0000709E:	RET

0000709F:	CALL 7057h
000070A2:	RET C
000070A3:	CALL 7371h
000070A6:	CALL 732Fh
000070A9:	OR A
000070AA:	RET

000070AB:	PUSH BC
000070AC:	PUSH DE
000070AD:	PUSH HL
000070AE:	LD DE,(F033h)			; pointer on paint address
000070B2:	LD A,3Fh
000070B4:	AND D
000070B5:	LD D,A
000070B6:	LD HL,0000h
000070B9:	LD BC,0050h
000070BC:	LD A,10h
000070BE:	SLA E
000070C0:	RL D
000070C2:	ADC HL,HL
000070C4:	JR C,+0Bh
000070C6:	SBC HL,BC
000070C8:	JR NC,+0Ah
000070CA:	ADD HL,BC
000070CB:	DEC A
000070CC:	JR NZ,-10h
000070CE:	JP 70D8h
000070D1:	AND A
000070D2:	SBC HL,BC
000070D4:	INC E
000070D5:	DEC A
000070D6:	JR NZ,-1Ah
000070D8:	LD BC,0050h
000070DB:	LD A,10h
000070DD:	LD HL,0000h
000070E0:	SRL D
000070E2:	RR E
000070E4:	JR NC,+01h
000070E6:	ADD HL,BC
000070E7:	RR H
000070E9:	RR L
000070EB:	RR D
000070ED:	DEC A
000070EE:	JR NZ,-0Eh
000070F0:	RR E
000070F2:	LD HL,(F0C6h)
000070F5:	ADD HL,DE
000070F6:	LD (F0CCh),HL	; LFVIEW
000070F9:	LD HL,(F0C8h)	; RTVWPS - view (Rx,0) address
000070FC:	ADD HL,DE
000070FD:	LD (F0CEh),HL	; RTVIEW
00007100:	POP HL
00007101:	POP DE
00007102:	POP BC
00007103:	RET

00007104:	PUSH HL
00007105:	LD HL,3690h
00007108:	LD (84BFh),HL
0000710B:	POP HL
0000710C:	CALL 73D6h
0000710F:	CALL 6771h
00007112:	PUSH BC
00007113:	PUSH DE
00007114:	XOR A
00007115:	LD (F051h),A
00007118:	LD (F058h),A		; TILEVL - title string level when paint starts
0000711B:	CALL 725Dh
0000711E:	LD A,(F044h)	; ATRBYT (aka PPALET)
00007121:	LD E,A
00007122:	DEC HL
00007123:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007124:	JR Z,+0Dh
00007126:	RST 08h				; Check syntax, 1 byte follows to be compared
00007127:	DEFB ','
00007128:	CP 2Ch
0000712A:	LD A,(F044h)	; ATRBYT (aka PPALET)
0000712D:	LD E,A
0000712E:	JR Z,+03h
00007130:	CALL 18A3h			; GETINT
00007133:	LD A,E
00007134:	CALL 6B70h
00007137:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
0000713A:	LD A,(F056h)		; TILFLG - tile string flag
0000713D:	OR A
0000713E:	JR Z,+10h
00007140:	CALL 7384h
00007143:	POP DE
00007144:	PUSH DE
00007145:	PUSH HL
00007146:	CALL 731Bh
00007149:	CALL 732Fh
0000714C:	CALL 72CFh
0000714F:	POP HL
00007150:	POP DE
00007151:	POP BC
00007152:	PUSH HL
00007153:	PUSH HL
00007154:	CALL 6127h
00007157:	POP HL
00007158:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
0000715B:	CALL 61CAh
0000715E:	CALL 6E7Eh
00007161:	LD DE,0001h
00007164:	CALL 70ABh
00007167:	CALL 6B8Eh
0000716A:	JR Z,+14h
0000716C:	PUSH HL
0000716D:	CALL 6CE0h
00007170:	POP DE
00007171:	ADD HL,DE
00007172:	EX DE,HL
00007173:	LD A,40h
00007175:	CALL 7250h
00007178:	LD A,(F058h)		; TILEVL - title string level when paint starts
0000717B:	OR C0h
0000717D:	LD B,A
0000717E:	JR +12h
00007180:	INA (32h)
00007182:	RES 6,A
00007184:	OUTA (32h)
00007186:	POP HL
00007187:	RET
00007188:	CALL 6A66h
0000718B:	CALL 743Ah
0000718E:	LD A,C
0000718F:	CALL 62B2h
00007192:	LD A,B
00007193:	LD (F06Ah),A
00007196:	AND 3Fh
00007198:	LD (F058h),A		; TILEVL - title string level when paint starts
0000719B:	LD A,B
0000719C:	ADD A
0000719D:	JR Z,-1Fh
0000719F:	PUSH DE
000071A0:	JR NC,+05h
000071A2:	CALL 8492h
000071A5:	JR +03h
000071A7:	CALL 8495h
000071AA:	POP DE
000071AB:	JR C,-22h
000071AD:	LD A,(F058h)		; TILEVL - title string level when paint starts
000071B0:	LD C,A
000071B1:	LD HL,F06Ah
000071B4:	LD A,(HL)
000071B5:	AND C0h
000071B7:	OR C
000071B8:	LD (HL),A
000071B9:	CALL 70ABh
000071BC:	CALL 6B8Eh
000071BF:	JP Z,718Bh
000071C2:	CALL 6CE0h
000071C5:	LD E,L
000071C6:	LD D,H
000071C7:	OR A
000071C8:	JR Z,+1Ah
000071CA:	DEC HL
000071CB:	DEC HL
000071CC:	LD A,H
000071CD:	ADD A
000071CE:	JR C,+14h
000071D0:	LD A,(F06Ah)
000071D3:	XOR 80h
000071D5:	LD C,A
000071D6:	LD A,(F058h)		; TILEVL - title string level when paint starts
000071D9:	OR C
000071DA:	PUSH AF
000071DB:	CALL 629Eh
000071DE:	LD C,A
000071DF:	POP AF
000071E0:	LD B,A
000071E1:	CALL 740Eh
000071E4:	LD HL,(F06Bh)
000071E7:	ADD HL,DE
000071E8:	EX DE,HL
000071E9:	CALL 723Fh
000071EC:	LD HL,(F04Ch)	; CSAVEA (SAVESP)
000071EF:	LD A,(F04Eh)	; CSAVEM
000071F2:	CALL 62B2h
000071F5:	LD HL,(F06Dh)
000071F8:	LD DE,(F06Bh)
000071FC:	OR A
000071FD:	SBC HL,DE
000071FF:	JR Z,+3Bh
00007201:	JR C,+1Ah
00007203:	EX DE,HL
00007204:	CALL 6B8Eh
00007207:	JR Z,+33h
00007209:	OR A
0000720A:	JR Z,-17h
0000720C:	EX DE,HL
0000720D:	LD HL,(F04Ch)	; CSAVEA (SAVESP)
00007210:	LD A,(F04Eh)	; CSAVEM
00007213:	LD C,A
00007214:	LD A,(F06Ah)
00007217:	LD B,A
00007218:	CALL 7255h
0000721B:	JR -28h
0000721D:	XOR A
0000721E:	SUB L
0000721F:	LD L,A
00007220:	SBC H
00007221:	SUB L
00007222:	LD H,A
00007223:	DEC HL
00007224:	DEC HL
00007225:	LD A,H
00007226:	ADD A
00007227:	JR C,+13h
00007229:	INC HL
0000722A:	PUSH HL
0000722B:	CALL 6257h
0000722E:	DEC HL
0000722F:	LD A,H
00007230:	OR L
00007231:	JR NZ,-08h
00007233:	POP DE
00007234:	LD A,(F06Ah)
00007237:	XOR 80h
00007239:	CALL 7250h
0000723C:	JP 7188h
0000723F:	LD A,(F06Fh)
00007242:	LD C,A
00007243:	LD A,(F070h)
00007246:	OR C
00007247:	LD C,A
00007248:	LD A,(F051h)
0000724B:	OR C
0000724C:	RET Z
0000724D:	LD A,(F06Ah)
00007250:	LD B,A
00007251:	CALL 629Eh
00007254:	LD C,A
00007255:	LD A,(F058h)		; TILEVL - title string level when paint starts
00007258:	OR B
00007259:	LD B,A
0000725A:	JP 740Eh

0000725D:	XOR A
0000725E:	LD (F056h),A		; TILFLG - tile string flag
00007261:	LD A,(F01Eh)
00007264:	LD E,A
00007265:	DEC HL
00007266:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007267:	JP Z,727Bh
0000726A:	RST 08h				; Check syntax, 1 byte follows to be compared
0000726B:	DEFB ','
0000726C:	CP 2Ch
0000726E:	JR Z,+0Bh
00007270:	CALL 11D3h			; EVAL - evaluate expression
00007273:	RST 30h
00007274:	PUSH HL
00007275:	JR Z,+0Eh
00007277:	CALL 18A6h
0000727A:	POP HL
0000727B:	LD A,E
0000727C:	CALL 6B7Eh
0000727F:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
00007282:	JP 0A0Eh

00007285:	LD A,01h
00007287:	LD (F056h),A		; TILFLG - tile string flag
0000728A:	LD HL,(EC41h)
0000728D:	EX DE,HL
0000728E:	CALL 56E7h
00007291:	LD HL,(EC41h)
00007294:	LD C,(HL)
00007295:	INC HL
00007296:	LD E,(HL)
00007297:	INC HL
00007298:	LD D,(HL)
00007299:	EX DE,HL
0000729A:	LD (F04Fh),HL		; TILTOP - tile string top address
0000729D:	LD A,(F08Ah)
000072A0:	LD B,A
000072A1:	LD A,C
000072A2:	CP B
000072A3:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
000072A6:	LD A,B
000072A7:	CP 01h
000072A9:	LD A,C
000072AA:	JR Z,+1Eh
000072AC:	LD E,FFh
000072AE:	INC E
000072AF:	SUB B
000072B0:	JP NC,72AEh
000072B3:	DEC E
000072B4:	ADD B
000072B5:	LD B,A
000072B6:	LD A,C
000072B7:	SUB B
000072B8:	LD C,A
000072B9:	LD B,00h
000072BB:	ADD HL,BC
000072BC:	LD (F052h),HL
000072BF:	LD A,E
000072C0:	LD (F057h),A		; TILLEN - tile string length
000072C3:	CP 40h
000072C5:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
000072C8:	POP HL
000072C9:	RET

000072CA:	LD E,C
000072CB:	DEC E
000072CC:	JP 72B9h

000072CF:	LD DE,(F04Fh)		; TILTOP - tile string top address
000072D3:	LD HL,(F054h)		; UDVLIM - view limit
000072D6:	LD A,(F08Ah)
000072D9:	LD B,A
000072DA:	LD C,03h
000072DC:	PUSH DE
000072DD:	PUSH BC
000072DE:	PUSH HL
000072DF:	CALL 730Ch
000072E2:	JP NZ,72F0h
000072E5:	CALL 7300h
000072E8:	POP HL
000072E9:	POP BC
000072EA:	DEC C
000072EB:	JR NZ,-10h
000072ED:	JP 0B06h			; FCERR, Err $05 - "Illegal function call"

000072F0:	POP HL
000072F1:	POP BC
000072F2:	EX HL,(SP)
000072F3:	LD C,B
000072F4:	LD B,00h
000072F6:	ADD HL,BC
000072F7:	LD B,C
000072F8:	EX DE,HL
000072F9:	CALL 7300h
000072FC:	POP HL
000072FD:	JR NZ,-25h
000072FF:	RET

00007300:	PUSH HL
00007301:	LD HL,(F052h)
00007304:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007305:	POP HL
00007306:	RET NZ
00007307:	LD DE,(F04Fh)		; TILTOP - tile string top address
0000730B:	RET

0000730C:	LD A,(DE)
0000730D:	CP (HL)
0000730E:	RET NZ
0000730F:	INC DE
00007310:	INC HL
00007311:	DJNZ -07h
00007313:	RET
00007314:	DEC B
00007315:	RET Z
00007316:	LD C,A
00007317:	ADD C
00007318:	DJNZ -03h
0000731A:	RET
0000731B:	LD A,(F057h)		; TILLEN - tile string length
0000731E:	INC A
0000731F:	EX DE,HL
00007320:	LD E,A
00007321:	LD D,00h
00007323:	OR A
00007324:	SBC HL,DE
00007326:	JP NC,7323h
00007329:	ADD HL,DE
0000732A:	LD A,L
0000732B:	LD (F058h),A		; TILEVL - title string level when paint starts
0000732E:	RET

0000732F:	LD HL,(F04Fh)		; TILTOP - tile string top address
00007332:	LD A,(F08Ah)
00007335:	LD B,A
00007336:	LD A,(F058h)		; TILEVL - title string level when paint starts
00007339:	PUSH BC
0000733A:	CALL 7314h
0000733D:	LD E,A
0000733E:	LD D,00h
00007340:	ADD HL,DE
00007341:	PUSH HL
00007342:	LD DE,F036h
00007345:	LD A,(HL)
00007346:	LD (DE),A
00007347:	INC HL
00007348:	INC DE
00007349:	LD A,(HL)
0000734A:	LD (DE),A
0000734B:	INC HL
0000734C:	INC DE
0000734D:	LD A,(HL)
0000734E:	LD (DE),A
0000734F:	XOR A
00007350:	LD (F051h),A
00007353:	POP DE
00007354:	LD HL,(F054h)		; UDVLIM - view limit
00007357:	POP BC
00007358:	CALL 730Ch
0000735B:	RET NZ
0000735C:	LD A,01h
0000735E:	LD (F051h),A
00007361:	RET

00007362:	LD A,(F058h)		; TILEVL - title string level when paint starts
00007365:	DEC A
00007366:	LD (F058h),A		; TILEVL - title string level when paint starts
00007369:	RET P
0000736A:	LD A,(F057h)		; TILLEN - tile string length
0000736D:	LD (F058h),A		; TILEVL - title string level when paint starts
00007370:	RET

00007371:	LD A,(F058h)		; TILEVL - title string level when paint starts
00007374:	INC A
00007375:	LD (F058h),A		; TILEVL - title string level when paint starts
00007378:	LD C,A
00007379:	LD A,(F057h)		; TILLEN - tile string length
0000737C:	INC A
0000737D:	CP C
0000737E:	RET NZ
0000737F:	XOR A
00007380:	LD (F058h),A		; TILEVL - title string level when paint starts
00007383:	RET

00007384:	DEC HL
00007385:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007386:	JR Z,+24h
00007388:	RST 08h				; Check syntax, 1 byte follows to be compared
00007389:	DEFB ','
0000738A:	CALL 11D3h			; EVAL - evaluate expression
0000738D:	RST 30h
0000738E:	JP NZ,0B06h			; FCERR, Err $05 - "Illegal function call"
00007391:	PUSH HL
00007392:	CALL 56CCh
00007395:	LD HL,(EC41h)
00007398:	LD C,(HL)
00007399:	INC HL
0000739A:	LD E,(HL)
0000739B:	INC HL
0000739C:	LD D,(HL)
0000739D:	EX DE,HL
0000739E:	LD (F054h),HL		; UDVLIM - view limit
000073A1:	LD A,(F08Ah)
000073A4:	LD B,A
000073A5:	LD A,C
000073A6:	CP B
000073A7:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
000073AA:	POP HL
000073AB:	RET

000073AC:	PUSH HL
000073AD:	LD HL,F059h
000073B0:	LD (F054h),HL		; UDVLIM - view limit
000073B3:	LD A,(F08Ah)
000073B6:	CP 01h
000073B8:	LD A,(F01Fh)
000073BB:	JR Z,+11h
000073BD:	RRCA
000073BE:	LD B,A
000073BF:	SBC A
000073C0:	LD (HL),A
000073C1:	INC HL
000073C2:	LD A,B
000073C3:	RRCA
000073C4:	LD B,A
000073C5:	SBC A
000073C6:	LD (HL),A
000073C7:	INC HL
000073C8:	LD A,B
000073C9:	RRCA
000073CA:	SBC A
000073CB:	LD (HL),A
000073CC:	POP HL
000073CD:	RET
000073CE:	CALL 62D4h
000073D1:	RRCA
000073D2:	SBC A
000073D3:	LD (HL),A
000073D4:	POP HL
000073D5:	RET
000073D6:	PUSH HL
000073D7:	LD HL,(EB1Fh)
000073DA:	EX DE,HL
000073DB:	PUSH DE
000073DC:	LD HL,(EAF1h)
000073DF:	OR A
000073E0:	SBC HL,DE
000073E2:	LD DE,03E8h
000073E5:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000073E6:	JP NC,73ECh
000073E9:	CALL 559Ah
000073EC:	POP DE
000073ED:	LD HL,(EAF1h)
000073F0:	OR A
000073F1:	SBC HL,DE
000073F3:	LD DE,000Ch
000073F6:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000073F7:	JP C,4ED6h
000073FA:	LD (F062h),HL		; LIMIT - stack area limit address +10
000073FD:	LD HL,0000h
00007400:	LD (F064h),HL
00007403:	LD HL,(EB1Fh)
00007406:	LD (F066h),HL
00007409:	LD (F068h),HL
0000740C:	POP HL
0000740D:	RET

0000740E:	PUSH DE
0000740F:	PUSH HL
00007410:	LD HL,(F064h)
00007413:	LD DE,0006h
00007416:	ADD HL,DE
00007417:	LD (F064h),HL
0000741A:	LD DE,(F062h)		; LIMIT - stack area limit address +10
0000741E:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
0000741F:	JP NC,4ED6h
00007422:	LD HL,(F066h)
00007425:	CALL 7463h
00007428:	POP DE
00007429:	LD (HL),E
0000742A:	INC HL
0000742B:	LD (HL),D
0000742C:	INC HL
0000742D:	LD (HL),C
0000742E:	INC HL
0000742F:	LD (HL),B
00007430:	INC HL
00007431:	POP DE
00007432:	LD (HL),E
00007433:	INC HL
00007434:	LD (HL),D
00007435:	INC HL
00007436:	LD (F066h),HL
00007439:	RET
0000743A:	LD HL,(F064h)
0000743D:	LD A,H
0000743E:	OR L
0000743F:	LD B,00h
00007441:	RET Z
00007442:	LD DE,0006h
00007445:	OR A
00007446:	SBC HL,DE
00007448:	LD (F064h),HL
0000744B:	LD HL,(F068h)
0000744E:	CALL 7463h
00007451:	LD E,(HL)
00007452:	INC HL
00007453:	LD D,(HL)
00007454:	INC HL
00007455:	PUSH DE
00007456:	LD C,(HL)
00007457:	INC HL
00007458:	LD B,(HL)
00007459:	INC HL
0000745A:	LD E,(HL)
0000745B:	INC HL
0000745C:	LD D,(HL)
0000745D:	INC HL
0000745E:	LD (F068h),HL
00007461:	POP HL
00007462:	RET

00007463:	PUSH HL
00007464:	LD DE,0006h
00007467:	ADD HL,DE
00007468:	LD DE,(EAF1h)
0000746C:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
0000746D:	POP HL
0000746E:	RET C
0000746F:	LD HL,(EB1Fh)
00007472:	RET

00007473:	PUSH HL
00007474:	LD HL,3690h
00007477:	LD (84BFh),HL
0000747A:	POP HL
0000747B:	CALL 6771h
0000747E:	RST 08h				; Check syntax, 1 byte follows to be compared
0000747F:	DEFB ','
00007480:	CALL 11D3h			; EVAL - evaluate expression
00007483:	PUSH HL
00007484:	CALL 2214h				; CSNG - Convert number to single precision
00007487:	LD A,(EC43h)
0000748A:	OR A
0000748B:	JP M,0B06h			; FCERR, Err $05 - "Illegal function call"
0000748E:	CALL 61BBh
00007491:	CALL 21A0h
00007494:	EX DE,HL
00007495:	POP HL
00007496:	PUSH HL
00007497:	EX DE,HL
00007498:	LD (F01Ah),HL
0000749B:	CALL 21FDh
0000749E:	CALL 2214h				; CSNG - Convert number to single precision
000074A1:	LD BC,8035h
000074A4:	LD DE,04F3h
000074A7:	CALL 1F53h
000074AA:	CALL 21A0h
000074AD:	LD (F07Ch),HL
000074B0:	LD A,FFh
000074B2:	LD (84A0h),A
000074B5:	LD (84A1h),A
000074B8:	XOR A
000074B9:	LD (F07Bh),A
000074BC:	LD (F084h),A
000074BF:	LD (84DCh),A
000074C2:	POP HL
000074C3:	CALL 798Eh
000074C6:	LD C,01h
000074C8:	LD DE,0000h
000074CB:	CALL 7890h
000074CE:	PUSH DE
000074CF:	LD C,80h
000074D1:	LD DE,FFFFh
000074D4:	CALL 7890h
000074D7:	EX HL,(SP)
000074D8:	XOR A
000074D9:	EX DE,HL
000074DA:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000074DB:	LD A,00h
000074DD:	JR NC,+13h
000074DF:	DEC A
000074E0:	EX DE,HL
000074E1:	PUSH AF
000074E2:	LD A,(F07Bh)
000074E5:	OR A
000074E6:	JP Z,74F1h
000074E9:	XOR 81h
000074EB:	JP Z,74F1h
000074EE:	LD (F07Bh),A
000074F1:	POP AF
000074F2:	LD (F07Ah),A
000074F5:	EX DE,HL
000074F6:	LD (F074h),HL
000074F9:	EX DE,HL
000074FA:	LD (F076h),HL
000074FD:	XOR A
000074FE:	EX DE,HL
000074FF:	ADC HL,HL
00007501:	JR NZ,+0Bh
00007503:	EX DE,HL
00007504:	LD DE,FFFFh
00007507:	SBC HL,DE
00007509:	JR NZ,+03h
0000750B:	LD (84A0h),A
0000750E:	POP HL
0000750F:	DEC HL
00007510:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007511:	JR NZ,+07h
00007513:	PUSH HL
00007514:	CALL 60BAh
00007517:	JP 7545h
0000751A:	RST 08h				; Check syntax, 1 byte follows to be compared
0000751B:	DEFB ','
0000751C:	CP 2Ch
0000751E:	JP NZ,7528h
00007521:	PUSH HL
00007522:	CALL 60BAh
00007525:	JP 7545h

00007528:	CALL 11D3h			; EVAL - evaluate expression
0000752B:	PUSH HL
0000752C:	CALL 2214h				; CSNG - Convert number to single precision
0000752F:	CALL 78E1h
00007532:	JR NZ,+07h
00007534:	INC A
00007535:	LD (F084h),A
00007538:	CALL 1FB7h			; FDIV
0000753B:	LD HL,EC44h			; FPEXP - Floating Point Exponent
0000753E:	LD A,(HL)
0000753F:	ADD 08h
00007541:	LD (HL),A
00007542:	CALL 21A0h
00007545:	EX HL,(SP)
00007546:	CALL 0A0Eh
00007549:	CP 2Ch
0000754B:	CALL Z,6A8Fh
0000754E:	EX HL,(SP)
0000754F:	LD (F072h),HL
00007552:	INA (32h)
00007554:	SET 6,A
00007556:	OUTA (32h)
00007558:	LD DE,0080h
0000755B:	XOR A
0000755C:	SBC HL,DE
0000755E:	JR NZ,+03h
00007560:	LD (84A1h),A
00007563:	LD HL,84D4h
00007566:	XOR A
00007567:	LD B,08h
00007569:	LD (HL),A
0000756A:	INC HL
0000756B:	DJNZ -04h
0000756D:	LD DE,(F01Ah)
00007571:	CALL 75C2h
00007574:	PUSH HL
00007575:	LD HL,(F027h)
00007578:	ADD HL,DE
00007579:	LD (84C2h),HL
0000757C:	LD HL,(F027h)
0000757F:	OR A
00007580:	SBC HL,DE
00007582:	LD (84C4h),HL
00007585:	POP DE
00007586:	LD HL,(F029h)
00007589:	OR A
0000758A:	SBC HL,DE
0000758C:	LD (84C6h),HL
0000758F:	LD HL,(F029h)
00007592:	ADD HL,DE
00007593:	LD (84C8h),HL
00007596:	LD DE,(F07Ch)
0000759A:	CALL 75C2h
0000759D:	PUSH HL
0000759E:	LD HL,(F027h)
000075A1:	ADD HL,DE
000075A2:	LD (84CAh),HL
000075A5:	LD HL,(F027h)
000075A8:	OR A
000075A9:	SBC HL,DE
000075AB:	LD (84CCh),HL
000075AE:	POP DE
000075AF:	LD HL,(F029h)
000075B2:	OR A
000075B3:	SBC HL,DE
000075B5:	LD (84CEh),HL
000075B8:	LD HL,(F029h)
000075BB:	ADD HL,DE
000075BC:	LD (84D0h),HL
000075BF:	JP 75FFh
000075C2:	LD HL,(F072h)
000075C5:	LD A,L
000075C6:	OR A
000075C7:	JP Z,75E3h
000075CA:	LD B,08h
000075CC:	LD HL,0000h
000075CF:	PUSH DE
000075D0:	RRA
000075D1:	JR NC,+01h
000075D3:	ADD HL,DE
000075D4:	RR H
000075D6:	RR L
000075D8:	DJNZ -0Ah
000075DA:	LD DE,0000h
000075DD:	ADC HL,DE
000075DF:	POP DE
000075E0:	JP 75EEh
000075E3:	OR H
000075E4:	JR NZ,+06h
000075E6:	LD HL,0000h
000075E9:	JP 75EEh
000075EC:	LD H,D
000075ED:	LD L,E
000075EE:	LD A,(F084h)
000075F1:	OR A
000075F2:	RET Z
000075F3:	EX DE,HL
000075F4:	RET
000075F5:	CALL 6171h
000075F8:	JR C,+04h
000075FA:	LD A,(HL)
000075FB:	OR 04h
000075FD:	LD (HL),A
000075FE:	RET
000075FF:	LD HL,84D4h
00007602:	LD BC,(84C2h)
00007606:	LD DE,(F029h)
0000760A:	CALL 75F5h
0000760D:	LD BC,(84CAh)
00007611:	LD DE,(84CEh)
00007615:	CALL 75F5h
00007618:	INC HL
00007619:	LD BC,(F027h)
0000761D:	LD DE,(84C6h)
00007621:	CALL 75F5h
00007624:	LD BC,(84CCh)
00007628:	LD DE,(84CEh)
0000762C:	CALL 75F5h
0000762F:	INC HL
00007630:	LD BC,(84C4h)
00007634:	LD DE,(F029h)
00007638:	CALL 75F5h
0000763B:	LD BC,(84CCh)
0000763F:	LD DE,(84D0h)
00007643:	CALL 75F5h
00007646:	INC HL
00007647:	LD BC,(F027h)
0000764B:	LD DE,(84C8h)
0000764F:	CALL 75F5h
00007652:	LD BC,(84CAh)
00007656:	LD DE,(84D0h)
0000765A:	CALL 75F5h
0000765D:	INC HL
0000765E:	LD BC,(F027h)
00007662:	LD DE,(84C6h)
00007666:	CALL 75F5h
00007669:	LD BC,(84CAh)
0000766D:	LD DE,(84CEh)
00007671:	CALL 75F5h
00007674:	INC HL
00007675:	LD BC,(84C4h)
00007679:	LD DE,(F029h)
0000767D:	CALL 75F5h
00007680:	LD BC,(84CCh)
00007684:	LD DE,(84CEh)
00007688:	CALL 75F5h
0000768B:	INC HL
0000768C:	LD BC,(F027h)
00007690:	LD DE,(84C8h)
00007694:	CALL 75F5h
00007697:	LD BC,(84CCh)
0000769B:	LD DE,(84D0h)
0000769F:	CALL 75F5h
000076A2:	INC HL
000076A3:	LD BC,(84C2h)
000076A7:	LD DE,(F029h)
000076AB:	CALL 75F5h
000076AE:	LD BC,(84CAh)
000076B2:	LD DE,(84D0h)
000076B6:	CALL 75F5h
000076B9:	INC HL
000076BA:	LD DE,0000h
000076BD:	EX DE,HL
000076BE:	LD (F078h),HL
000076C1:	EX DE,HL
000076C2:	LD HL,(F01Ah)
000076C5:	ADD HL,HL
000076C6:	CALL 6A66h
000076C9:	LD A,E
000076CA:	RRA
000076CB:	JR C,+16h
000076CD:	PUSH DE
000076CE:	PUSH HL
000076CF:	INC HL
000076D0:	SRL H
000076D2:	RR L
000076D4:	INC DE
000076D5:	SRL D
000076D7:	RR E
000076D9:	CALL 7747h
000076DC:	POP DE
000076DD:	POP HL
000076DE:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000076DF:	JP NC,7180h
000076E2:	EX DE,HL
000076E3:	LD B,H
000076E4:	LD C,L
000076E5:	LD HL,(F078h)
000076E8:	INC HL
000076E9:	ADD HL,DE
000076EA:	ADD HL,DE
000076EB:	LD A,H
000076EC:	ADD A
000076ED:	JR C,+0Ch
000076EF:	PUSH DE
000076F0:	EX DE,HL
000076F1:	LD H,B
000076F2:	LD L,C
000076F3:	ADD HL,HL
000076F4:	DEC HL
000076F5:	EX DE,HL
000076F6:	OR A
000076F7:	SBC HL,DE
000076F9:	DEC BC
000076FA:	POP DE
000076FB:	LD (F078h),HL
000076FE:	LD H,B
000076FF:	LD L,C
00007700:	INC DE
00007701:	JP 76C6h
00007704:	PUSH DE
00007705:	LD A,(84A1h)
00007708:	OR A
00007709:	JR NZ,+10h
0000770B:	SRL D
0000770D:	RR E
0000770F:	JP NC,7713h
00007712:	INC DE
00007713:	POP HL
00007714:	LD A,(F084h)
00007717:	OR A
00007718:	RET Z
00007719:	EX DE,HL
0000771A:	RET
0000771B:	LD HL,(F072h)
0000771E:	LD A,L
0000771F:	OR A
00007720:	JR Z,+18h
00007722:	LD B,08h
00007724:	LD HL,0000h
00007727:	RRA
00007728:	JR NC,+01h
0000772A:	ADD HL,DE
0000772B:	RR H
0000772D:	RR L
0000772F:	DJNZ -0Ah
00007731:	LD DE,0000h
00007734:	ADC HL,DE
00007736:	EX DE,HL
00007737:	JP 773Fh
0000773A:	OR H
0000773B:	JP NZ,773Fh
0000773E:	EX DE,HL
0000773F:	POP HL
00007740:	LD A,(F084h)
00007743:	OR A
00007744:	RET Z
00007745:	EX DE,HL
00007746:	RET
00007747:	PUSH HL
00007748:	LD HL,84D4h
0000774B:	LD (84D2h),HL
0000774E:	POP HL
0000774F:	LD (F085h),DE
00007753:	PUSH HL
00007754:	LD HL,0000h
00007757:	LD (F07Eh),HL
0000775A:	CALL 7704h
0000775D:	LD (F080h),HL
00007760:	POP HL
00007761:	EX DE,HL
00007762:	PUSH HL
00007763:	CALL 7704h
00007766:	LD (F082h),DE
0000776A:	POP DE
0000776B:	XOR A
0000776C:	SUB E
0000776D:	LD E,A
0000776E:	SBC D
0000776F:	SUB E
00007770:	LD D,A
00007771:	CALL 779Ah
00007774:	PUSH HL
00007775:	PUSH DE
00007776:	LD HL,(F07Ch)
00007779:	LD (F07Eh),HL
0000777C:	LD DE,(F085h)
00007780:	OR A
00007781:	SBC HL,DE
00007783:	LD (F085h),HL
00007786:	LD HL,(F080h)
00007789:	XOR A
0000778A:	SUB L
0000778B:	LD L,A
0000778C:	SBC H
0000778D:	SUB L
0000778E:	LD H,A
0000778F:	LD (F080h),HL
00007792:	POP DE
00007793:	POP HL
00007794:	XOR A
00007795:	SUB E
00007796:	LD E,A
00007797:	SBC D
00007798:	SUB E
00007799:	LD D,A
0000779A:	LD A,04h
0000779C:	PUSH AF
0000779D:	PUSH HL
0000779E:	PUSH DE
0000779F:	PUSH HL
000077A0:	PUSH DE
000077A1:	LD DE,(F07Eh)
000077A5:	LD HL,(F07Ch)
000077A8:	ADD HL,HL
000077A9:	ADD HL,DE
000077AA:	LD (F07Eh),HL
000077AD:	LD HL,(F085h)
000077B0:	ADD HL,DE
000077B1:	EX DE,HL
000077B2:	LD A,(84A0h)
000077B5:	OR A
000077B6:	JR Z,+6Bh
000077B8:	LD HL,(F074h)
000077BB:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000077BC:	JR Z,+35h
000077BE:	JR NC,+08h
000077C0:	LD HL,(F076h)
000077C3:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
000077C4:	JR Z,+0Dh
000077C6:	JR NC,+50h
000077C8:	LD A,(F07Ah)
000077CB:	OR A
000077CC:	JR NZ,+55h
000077CE:	POP DE
000077CF:	POP HL
000077D0:	JP 783Ch
000077D3:	LD A,(F07Bh)
000077D6:	ADD A
000077D7:	JR NC,+4Ah
000077D9:	LD A,(84DCh)
000077DC:	ADD A
000077DD:	POP DE
000077DE:	POP HL
000077DF:	JP C,783Ch
000077E2:	CALL 7881h
000077E5:	CALL 786Ch
000077E8:	LD A,(84DCh)
000077EB:	OR 80h
000077ED:	LD (84DCh),A
000077F0:	JP 783Ch
000077F3:	LD A,(F07Bh)
000077F6:	RRA
000077F7:	JP NC,7823h
000077FA:	LD A,(84DCh)
000077FD:	RRA
000077FE:	JR NC,+05h
00007800:	POP DE
00007801:	POP HL
00007802:	JP 783Ch
00007805:	POP DE
00007806:	POP HL
00007807:	CALL 7881h
0000780A:	CALL 786Ch
0000780D:	LD A,(84DCh)
00007810:	OR 01h
00007812:	LD (84DCh),A
00007815:	JP 783Ch
00007818:	LD A,(F07Ah)
0000781B:	OR A
0000781C:	JR Z,+05h
0000781E:	POP DE
0000781F:	POP HL
00007820:	JP 783Ch
00007823:	POP DE
00007824:	POP HL
00007825:	CALL 7881h
00007828:	LD HL,(84D2h)
0000782B:	LD A,(HL)
0000782C:	AND 04h
0000782E:	JP Z,7836h
00007831:	CALL 6127h
00007834:	JR NC,+06h
00007836:	CALL 61CAh
00007839:	CALL 6A51h
0000783C:	LD HL,(84D2h)
0000783F:	INC HL
00007840:	LD (84D2h),HL
00007843:	POP DE
00007844:	POP HL
00007845:	POP AF
00007846:	DEC A
00007847:	RET Z
00007848:	PUSH AF
00007849:	PUSH DE
0000784A:	LD DE,(F080h)
0000784E:	XOR A
0000784F:	SUB E
00007850:	LD E,A
00007851:	SBC D
00007852:	SUB E
00007853:	LD D,A
00007854:	LD (F080h),HL
00007857:	EX DE,HL
00007858:	POP DE
00007859:	PUSH HL
0000785A:	LD HL,(F082h)
0000785D:	EX DE,HL
0000785E:	LD (F082h),HL
00007861:	XOR A
00007862:	SUB E
00007863:	LD E,A
00007864:	SBC D
00007865:	SUB E
00007866:	LD D,A
00007867:	POP HL
00007868:	POP AF
00007869:	JP 779Ch
0000786C:	LD HL,(F027h)
0000786F:	LD (F01Ah),HL
00007872:	LD HL,(F029h)
00007875:	LD (F01Ch),HL
00007878:	LD HL,FFFFh
0000787B:	LD (F025h),HL
0000787E:	JP 7B90h

00007881:	PUSH DE
00007882:	LD DE,(F027h)
00007886:	ADD HL,DE
00007887:	LD B,H
00007888:	LD C,L
00007889:	POP DE
0000788A:	LD HL,(F029h)
0000788D:	ADD HL,DE
0000788E:	EX DE,HL
0000788F:	RET

00007890:	DEC HL
00007891:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007892:	RET Z
00007893:	RST 08h				; Check syntax, 1 byte follows to be compared
00007894:	DEFB ','
00007895:	CP 2Ch
00007897:	RET Z
00007898:	PUSH BC
00007899:	CALL 11D3h			; EVAL - evaluate expression
0000789C:	EX HL,(SP)
0000789D:	PUSH HL
0000789E:	CALL 2214h				; CSNG - Convert number to single precision
000078A1:	POP BC
000078A2:	LD HL,EC44h			; FPEXP - Floating Point Exponent
000078A5:	LD A,(HL)
000078A6:	OR A
000078A7:	JR Z,+0Fh
000078A9:	DEC HL
000078AA:	LD A,(HL)
000078AB:	OR A
000078AC:	JP P,78B8h
000078AF:	AND 7Fh
000078B1:	LD (HL),A
000078B2:	LD HL,F07Bh
000078B5:	LD A,(HL)
000078B6:	OR C
000078B7:	LD (HL),A
000078B8:	LD BC,7E22h
000078BB:	LD DE,F983h
000078BE:	CALL 1F53h
000078C1:	CALL 78E1h
000078C4:	JP Z,0B06h			; FCERR, Err $05 - "Illegal function call"
000078C7:	CALL 20CDh
000078CA:	LD HL,(F07Ch)
000078CD:	ADD HL,HL
000078CE:	ADD HL,HL
000078CF:	ADD HL,HL
000078D0:	CALL 21FDh
000078D3:	CALL 2214h				; CSNG - Convert number to single precision
000078D6:	POP BC
000078D7:	POP DE
000078D8:	CALL 1F53h
000078DB:	CALL 21A0h
000078DE:	POP DE
000078DF:	EX DE,HL
000078E0:	RET

000078E1:	LD BC,8100h
000078E4:	LD DE,0000h
000078E7:	CALL 2134h			; CMPNUM - Compare FP reg to BCDE
000078EA:	DEC A
000078EB:	RET

000078EC:	PUSH HL
000078ED:	CALL 6127h
000078F0:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
000078F3:	POP HL
000078F4:	RET

000078F5:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
000078F8:	INC SP
000078F9:	LD A,H
000078FA:	NOP
000078FB:	RET

000078FC:	LD A,(HL)
000078FD:	CP 40h
000078FF:	CALL Z,0A0Dh
00007902:	LD BC,0000h
00007905:	LD D,B
00007906:	LD E,C
00007907:	CP F4h
00007909:	JR Z,+2Dh
0000790B:	LD A,(HL)
0000790C:	CALL EE05h
0000790F:	CP DFh
00007911:	PUSH AF
00007912:	CALL Z,0A0Dh
00007915:	RST 08h				; Check syntax, 1 byte follows to be compared
00007916:	JR Z,-33h
00007918:	SUB (HL)
00007919:	JR -0Fh
0000791B:	PUSH AF
0000791C:	JR Z,+07h
0000791E:	PUSH HL
0000791F:	LD HL,(F02Bh)
00007922:	ADD HL,DE
00007923:	EX DE,HL
00007924:	POP HL
00007925:	PUSH DE
00007926:	RST 08h				; Check syntax, 1 byte follows to be compared
00007927:	DEFB ','
00007928:	CALL 1896h
0000792B:	RST 08h				; Check syntax, 1 byte follows to be compared
0000792C:	DEFB ')'
0000792D:	POP BC
0000792E:	POP AF
0000792F:	JR Z,+07h
00007931:	PUSH HL
00007932:	LD HL,(F02Fh)
00007935:	ADD HL,DE
00007936:	EX DE,HL
00007937:	POP HL
00007938:	PUSH HL
00007939:	LD HL,(F027h)
0000793C:	JR Z,+03h
0000793E:	LD HL,0000h
00007941:	ADD HL,BC
00007942:	LD (F027h),HL
00007945:	LD (F01Ah),HL
00007948:	LD B,H
00007949:	LD C,L
0000794A:	LD HL,(F029h)
0000794D:	JR Z,+03h
0000794F:	LD HL,0000h
00007952:	ADD HL,DE
00007953:	LD (F029h),HL
00007956:	LD (F01Ch),HL
00007959:	EX DE,HL
0000795A:	POP HL
0000795B:	CALL 683Eh
0000795E:	RET

0000795F:	LD A,(F01Fh)
00007962:	JR +03h

00007964:	LD A,(F01Eh)
00007967:	PUSH AF
00007968:	CALL 6783h
0000796B:	POP AF
0000796C:	CALL 7991h
0000796F:	CP 2Ch
00007971:	CALL Z,6A8Fh
00007974:	PUSH HL
00007975:	CALL 6127h
00007978:	JR NC,+12h
0000797A:	CALL 61CAh
0000797D:	INA (32h)
0000797F:	SET 6,A
00007981:	OUTA (32h)
00007983:	CALL 6A51h
00007986:	INA (32h)
00007988:	RES 6,A
0000798A:	OUTA (32h)
0000798C:	POP HL
0000798D:	RET

0000798E:	LD A,(F01Eh)
00007991:	PUSH BC
00007992:	PUSH DE
00007993:	LD E,A
00007994:	DEC HL
00007995:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007996:	JR Z,+09h
00007998:	RST 08h				; Check syntax, 1 byte follows to be compared
00007999:	DEFB ','
0000799A:	CP 2Ch
0000799C:	JR Z,+03h
0000799E:	CALL 18A3h			; GETINT
000079A1:	LD A,E
000079A2:	PUSH HL
000079A3:	CALL 6A26h
000079A6:	JP C,0B06h			; FCERR, Err $05 - "Illegal function call"
000079A9:	POP HL
000079AA:	POP DE
000079AB:	POP BC
000079AC:	JP 0A0Eh

000079AF:	LD HL,(F01Ah)
000079B2:	LD A,L
000079B3:	SUB C
000079B4:	LD L,A
000079B5:	LD A,H
000079B6:	SBC B
000079B7:	LD H,A
000079B8:	RET NC
000079B9:	XOR A
000079BA:	SUB L
000079BB:	LD L,A
000079BC:	SBC H
000079BD:	SUB L
000079BE:	LD H,A
000079BF:	SCF
000079C0:	RET
000079C1:	LD HL,(F01Ch)
000079C4:	LD A,L
000079C5:	SUB E
000079C6:	LD L,A
000079C7:	LD A,H
000079C8:	SBC D
000079C9:	LD H,A
000079CA:	JR -14h
000079CC:	PUSH HL
000079CD:	LD HL,(F01Ch)
000079D0:	EX DE,HL
000079D1:	LD (F01Ch),HL
000079D4:	POP HL
000079D5:	RET
000079D6:	CALL 79CCh
000079D9:	PUSH HL
000079DA:	PUSH BC
000079DB:	LD HL,(F01Ah)
000079DE:	EX HL,(SP)
000079DF:	LD (F01Ah),HL
000079E2:	POP BC
000079E3:	POP HL
000079E4:	RET

000079E5:	CALL 6771h
000079E8:	PUSH BC
000079E9:	PUSH DE
000079EA:	RST 08h				; Check syntax, 1 byte follows to be compared
000079EB:	CALL P,83CDh
000079EE:	LD H,A
000079EF:	CALL 798Eh
000079F2:	PUSH HL
000079F3:	LD HL,FFFFh
000079F6:	LD (F025h),HL
000079F9:	POP HL
000079FA:	POP DE
000079FB:	POP BC
000079FC:	JP Z,7B23h
000079FF:	RST 08h				; Check syntax, 1 byte follows to be compared
00007A00:	DEFB ','
00007A01:	CP 2Ch
00007A03:	JP Z,7B1Bh
00007A06:	RST 08h				; Check syntax, 1 byte follows to be compared
00007A07:	LD B,D
00007A08:	JP Z,7B51h
00007A0B:	CP 2Ch
00007A0D:	JP Z,7B49h
00007A10:	RST 08h				; Check syntax, 1 byte follows to be compared
00007A11:	LD B,(HL)
00007A12:	CP 2Ch
00007A14:	CALL Z,6A8Fh
00007A17:	PUSH HL
00007A18:	CALL 6127h
00007A1B:	CALL 79D6h
00007A1E:	CALL 6127h
00007A21:	CALL 79C1h
00007A24:	CALL C,79CCh
00007A27:	INC HL
00007A28:	PUSH HL
00007A29:	CALL 79AFh
00007A2C:	CALL C,79D9h
00007A2F:	JR +09h
00007A31:	PUSH HL
00007A32:	CALL 79C1h
00007A35:	INC HL
00007A36:	PUSH HL
00007A37:	CALL 79AFh
00007A3A:	INA (32h)
00007A3C:	SET 6,A
00007A3E:	OUTA (32h)
00007A40:	INC HL
00007A41:	PUSH HL
00007A42:	CALL 61CAh
00007A45:	POP HL
00007A46:	LD DE,0280h
00007A49:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007A4A:	JR Z,+24h
00007A4C:	CALL 7AD1h
00007A4F:	POP BC
00007A50:	PUSH BC
00007A51:	LD DE,(F040h)
00007A55:	LD HL,(F033h)			; pointer on paint address
00007A58:	LD A,(F03Dh)
00007A5B:	CALL 7AAFh
00007A5E:	CALL 6269h
00007A61:	POP BC
00007A62:	DEC BC
00007A63:	LD A,B
00007A64:	OR C
00007A65:	JP NZ,7A50h
00007A68:	INA (32h)
00007A6A:	RES 6,A
00007A6C:	OUTA (32h)
00007A6E:	POP HL
00007A6F:	RET

00007A70:	LD HL,(F033h)			; pointer on paint address
00007A73:	POP BC
00007A74:	PUSH BC
00007A75:	LD BC,8035h
00007A78:	DI
00007A79:	OUT (C),B
00007A7B:	LD B,50h
00007A7D:	LD A,FFh
00007A7F:	LD (HL),A
00007A80:	INC HL
00007A81:	DJNZ -04h
00007A83:	OUT (C),B
00007A85:	EI
00007A86:	LD A,(E6A6h)
00007A89:	OR A
00007A8A:	JP Z,7AA0h
00007A8D:	LD DE,FE80h
00007A90:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007A91:	JP NZ,7AA0h
00007A94:	LD HL,C000h
00007A97:	LD A,(849Dh)
00007A9A:	RLCA
00007A9B:	LD (849Dh),A
00007A9E:	OUTA (34h)
00007AA0:	POP BC
00007AA1:	DEC BC
00007AA2:	LD A,B
00007AA3:	OR C
00007AA4:	JP NZ,7A74h
00007AA7:	INA (32h)
00007AA9:	RES 6,A
00007AAB:	OUTA (32h)
00007AAD:	POP HL
00007AAE:	RET
00007AAF:	LD BC,8035h
00007AB2:	DI
00007AB3:	OUT (C),B
00007AB5:	LD B,A
00007AB6:	LD A,E
00007AB7:	OR A
00007AB8:	JR Z,+02h
00007ABA:	LD (HL),A
00007ABB:	INC HL
00007ABC:	LD A,B
00007ABD:	OR A
00007ABE:	JR Z,+06h
00007AC0:	LD A,FFh
00007AC2:	LD (HL),A
00007AC3:	INC HL
00007AC4:	DJNZ -04h
00007AC6:	LD A,D
00007AC7:	OR A
00007AC8:	JR Z,+01h
00007ACA:	LD (HL),A
00007ACB:	LD B,00h
00007ACD:	OUT (C),B
00007ACF:	EI
00007AD0:	RET
00007AD1:	LD A,(F035h)
00007AD4:	LD B,A
00007AD5:	DEC A
00007AD6:	OR B
00007AD7:	LD (F040h),A
00007ADA:	LD C,A
00007ADB:	LD A,B
00007ADC:	DEC HL
00007ADD:	LD B,A
00007ADE:	LD A,H
00007ADF:	OR L
00007AE0:	LD A,B
00007AE1:	JR Z,+23h
00007AE3:	RRCA
00007AE4:	JP NC,7ADCh
00007AE7:	LD A,L
00007AE8:	AND 07h
00007AEA:	LD E,A
00007AEB:	LD D,00h
00007AED:	SRL H
00007AEF:	RR L
00007AF1:	SRL H
00007AF3:	RR L
00007AF5:	SRL H
00007AF7:	RR L
00007AF9:	LD A,L
00007AFA:	LD (F03Dh),A
00007AFD:	LD HL,7B13h
00007B00:	ADD HL,DE
00007B01:	LD A,(HL)
00007B02:	LD (F041h),A
00007B05:	RET
00007B06:	DEC A
00007B07:	XOR C
00007B08:	LD (F040h),A
00007B0B:	XOR A
00007B0C:	LD (F03Dh),A
00007B0F:	LD (F041h),A
00007B12:	RET
00007B13:	NOP
00007B14:	ADD B
00007B15:	RET NZ
00007B16:	RET PO
00007B17:	RET P
00007B18:	RET M
00007B19:	CALL M,CDFEh
00007B1C:	LD A,E
00007B1D:	LD A,E
00007B1E:	CP 2Ch
00007B20:	CALL Z,6A8Fh
00007B23:	PUSH BC
00007B24:	PUSH DE
00007B25:	PUSH HL
00007B26:	INA (32h)
00007B28:	SET 6,A
00007B2A:	OUTA (32h)
00007B2C:	PUSH IX
00007B2E:	CALL 7B90h
00007B31:	POP IX
00007B33:	INA (32h)
00007B35:	RES 6,A
00007B37:	OUTA (32h)
00007B39:	LD HL,(F027h)
00007B3C:	LD (F01Ah),HL
00007B3F:	LD HL,(F029h)
00007B42:	LD (F01Ch),HL
00007B45:	POP HL
00007B46:	POP DE
00007B47:	POP BC
00007B48:	RET
00007B49:	CALL 7B7Bh
00007B4C:	CP 2Ch
00007B4E:	CALL Z,6A8Fh
00007B51:	PUSH HL
00007B52:	LD HL,(F01Ch)
00007B55:	PUSH HL
00007B56:	PUSH DE
00007B57:	EX DE,HL
00007B58:	CALL 7B23h
00007B5B:	POP HL
00007B5C:	LD (F01Ch),HL
00007B5F:	EX DE,HL
00007B60:	CALL 7B23h
00007B63:	POP HL
00007B64:	LD (F01Ch),HL
00007B67:	LD HL,(F01Ah)
00007B6A:	PUSH BC
00007B6B:	LD B,H
00007B6C:	LD C,L
00007B6D:	CALL 7B23h
00007B70:	POP HL
00007B71:	LD (F01Ah),HL
00007B74:	LD B,H
00007B75:	LD C,L
00007B76:	CALL 7B23h
00007B79:	POP HL
00007B7A:	RET
00007B7B:	PUSH DE
00007B7C:	PUSH BC
00007B7D:	RST 08h				; Check syntax, 1 byte follows to be compared
00007B7E:	DEFB ','
00007B7F:	CP 2Ch
00007B81:	JR Z,+08h
00007B83:	CALL 1896h
00007B86:	EX DE,HL
00007B87:	LD (F025h),HL
00007B8A:	EX DE,HL
00007B8B:	POP BC
00007B8C:	POP DE
00007B8D:	JP 0A0Eh
00007B90:	CALL ED9Ch
00007B93:	CALL 68D8h
00007B96:	RET NZ
00007B97:	CALL 79D6h
00007B9A:	CALL 79C1h
00007B9D:	CALL C,79D6h
00007BA0:	LD A,H
00007BA1:	OR L
00007BA2:	JP Z,7C62h
00007BA5:	PUSH DE
00007BA6:	PUSH HL
00007BA7:	CALL 79AFh
00007BAA:	PUSH AF
00007BAB:	LD A,H
00007BAC:	OR L
00007BAD:	JP Z,7D9Ah
00007BB0:	POP AF
00007BB1:	EX DE,HL
00007BB2:	LD HL,6245h
00007BB5:	JR NC,+03h
00007BB7:	LD HL,6257h
00007BBA:	EX HL,(SP)
00007BBB:	RST 20h			; CPDEHL - compare DE and HL (aka DCOMPR)
00007BBC:	JR NC,+1Ah
00007BBE:	LD (F023h),HL
00007BC1:	POP HL
00007BC2:	LD (E7E6h),HL
00007BC5:	LD A,(E6A6h)
00007BC8:	OR A
00007BC9:	LD HL,7C55h
00007BCC:	JR Z,+03h
00007BCE:	LD HL,6269h
00007BD1:	LD (E7E3h),HL
00007BD4:	EX DE,HL
00007BD5:	JP 7BF1h
00007BD8:	EX HL,(SP)
00007BD9:	LD (E7E3h),HL
00007BDC:	LD A,(E6A6h)
00007BDF:	OR A
00007BE0:	LD HL,7C55h
00007BE3:	JP Z,7BE9h
00007BE6:	LD HL,6269h
00007BE9:	LD (E7E6h),HL
00007BEC:	EX DE,HL
00007BED:	LD (F023h),HL
00007BF0:	POP HL
00007BF1:	POP DE
00007BF2:	PUSH HL
00007BF3:	CALL 79B9h
00007BF6:	LD (F021h),HL
00007BF9:	CALL 61CAh
00007BFC:	POP DE
00007BFD:	PUSH DE
00007BFE:	SRL D
00007C00:	RR E
00007C02:	POP BC
00007C03:	INC BC
00007C04:	LD IX,(F025h)
00007C08:	JP 7C17h
00007C0B:	LD (F025h),IX
00007C0F:	RET
00007C10:	LD A,B
00007C11:	OR C
00007C12:	JR Z,-09h
00007C14:	CALL E7E5h
00007C17:	ADD IX,I%
00007C19:	JR NC,+15h
00007C1B:	INC IX
00007C1D:	LD A,(F035h)
00007C20:	LD HL,(F033h)			; pointer on paint address
00007C23:	PUSH BC
00007C24:	LD BC,8035h
00007C27:	DI
00007C28:	OUT (C),B
00007C2A:	LD (HL),A
00007C2B:	XOR A
00007C2C:	OUT (C),A
00007C2E:	EI
00007C2F:	POP BC
00007C30:	DEC BC
00007C31:	LD HL,(F023h)
00007C34:	ADD HL,DE
00007C35:	EX DE,HL
00007C36:	LD HL,(F021h)
00007C39:	ADD HL,DE
00007C3A:	JR NC,-2Ch
00007C3C:	EX DE,HL
00007C3D:	LD A,B
00007C3E:	OR C
00007C3F:	JR Z,-36h
00007C41:	CALL E7E2h
00007C44:	JP 7C14h

00007C47:	LD HL,(F025h)
00007C4A:	ADD HL,HL
00007C4B:	JR NC,+01h
00007C4D:	INC HL
00007C4E:	LD (F025h),HL
00007C51:	RET NC
00007C52:	JP 6A51h

00007C55:	PUSH DE
00007C56:	LD DE,0050h
00007C59:	LD HL,(F033h)			; pointer on paint address
00007C5C:	ADD HL,DE
00007C5D:	LD (F033h),HL			; pointer on paint address
00007C60:	POP DE
00007C61:	RET

00007C62:	CALL 79AFh
00007C65:	PUSH HL
00007C66:	JR NC,+0Bh
00007C68:	LD HL,(F025h)
00007C6B:	INC HL
00007C6C:	LD A,H
00007C6D:	OR L
00007C6E:	JR NZ,+11h
00007C70:	CALL 79D9h
00007C73:	LD HL,7C87h
00007C76:	LD (84A3h),HL
00007C79:	CALL 61CAh
00007C7C:	POP HL
00007C7D:	INC HL
00007C7E:	JP 84A2h

00007C81:	LD HL,7D1Ch
00007C84:	JP 7C76h

00007C87:	LD DE,(F033h)			; pointer on paint address
00007C8B:	LD A,(F035h)
00007C8E:	OR A
00007C8F:	JP M,7CACh
00007C92:	PUSH HL
00007C93:	CALL 7C47h
00007C96:	LD A,(F035h)
00007C99:	RRCA
00007C9A:	LD (F035h),A
00007C9D:	JR NC,+05h
00007C9F:	INC DE
00007CA0:	LD (F033h),DE			; pointer on paint address
00007CA4:	POP HL
00007CA5:	DEC HL
00007CA6:	LD A,L
00007CA7:	OR H
00007CA8:	JP NZ,7C8Bh
00007CAB:	RET

00007CAC:	LD A,07h
00007CAE:	AND L
00007CAF:	RR H
00007CB1:	RR L
00007CB3:	RR H
00007CB5:	RR L
00007CB7:	RR H
00007CB9:	RR L
00007CBB:	PUSH AF
00007CBC:	LD A,L
00007CBD:	OR A
00007CBE:	JR Z,+0Bh
00007CC0:	LD HL,(F025h)
00007CC3:	EX DE,HL
00007CC4:	CALL 7CDEh
00007CC7:	LD (F033h),HL			; pointer on paint address
00007CCA:	EX DE,HL
00007CCB:	POP AF
00007CCC:	OR A
00007CCD:	RET Z
00007CCE:	PUSH AF
00007CCF:	CALL 7C47h
00007CD2:	LD A,(F035h)
00007CD5:	RRCA
00007CD6:	LD (F035h),A
00007CD9:	POP AF
00007CDA:	DEC A
00007CDB:	JP 7CCDh
00007CDE:	LD BC,8035h
00007CE1:	DI
00007CE2:	OUT (C),B
00007CE4:	LD (HL),D
00007CE5:	INC HL
00007CE6:	DEC A
00007CE7:	JR Z,+10h
00007CE9:	LD (HL),E
00007CEA:	INC HL
00007CEB:	DEC A
00007CEC:	JP NZ,7CE4h
00007CEF:	LD B,00h
00007CF1:	OUT (C),B
00007CF3:	EI
00007CF4:	LD (F025h),DE
00007CF8:	RET
00007CF9:	LD A,D
00007CFA:	LD D,E
00007CFB:	LD E,A
00007CFC:	JP 7CEFh
00007CFF:	LD BC,8035h
00007D02:	DI
00007D03:	OUT (C),B
00007D05:	LD (HL),E
00007D06:	DEC HL
00007D07:	DEC A
00007D08:	JR Z,+0Ch
00007D0A:	LD (HL),D
00007D0B:	DEC HL
00007D0C:	DEC A
00007D0D:	JP NZ,7D05h
00007D10:	LD B,00h
00007D12:	OUT (C),B
00007D14:	EI
00007D15:	RET
00007D16:	LD A,D
00007D17:	LD D,E
00007D18:	LD E,A
00007D19:	JP 7D10h

00007D1C:	LD DE,(F033h)			; pointer on paint address
00007D20:	LD A,(F035h)
00007D23:	CP 01h
00007D25:	JR Z,+1Ah
00007D27:	PUSH HL
00007D28:	CALL 7C47h
00007D2B:	LD A,(F035h)
00007D2E:	RLCA
00007D2F:	LD (F035h),A
00007D32:	JR NC,+05h
00007D34:	DEC DE
00007D35:	LD (F033h),DE			; pointer on paint address
00007D39:	POP HL
00007D3A:	DEC HL
00007D3B:	LD A,L
00007D3C:	OR H
00007D3D:	JP NZ,7D20h
00007D40:	RET
00007D41:	LD A,07h
00007D43:	AND L
00007D44:	RR H
00007D46:	RR L
00007D48:	RR H
00007D4A:	RR L
00007D4C:	RR H
00007D4E:	RR L
00007D50:	PUSH AF
00007D51:	LD A,L
00007D52:	OR A
00007D53:	JR Z,+32h
00007D55:	PUSH AF
00007D56:	LD A,(F026h)
00007D59:	LD B,08h
00007D5B:	RLCA
00007D5C:	RR L
00007D5E:	DJNZ -05h
00007D60:	LD A,(F025h)
00007D63:	LD B,08h
00007D65:	RLCA
00007D66:	RR H
00007D68:	DJNZ -05h
00007D6A:	POP AF
00007D6B:	EX DE,HL
00007D6C:	CALL 7CFFh
00007D6F:	LD (F033h),HL			; pointer on paint address
00007D72:	LD B,08h
00007D74:	SLA D
00007D76:	RRA
00007D77:	DJNZ -05h
00007D79:	LD (F025h),A
00007D7C:	LD B,08h
00007D7E:	SLA E
00007D80:	RRA
00007D81:	DJNZ -05h
00007D83:	LD (F026h),A
00007D86:	EX DE,HL
00007D87:	POP AF
00007D88:	OR A
00007D89:	RET Z
00007D8A:	PUSH AF
00007D8B:	CALL 7C47h
00007D8E:	LD A,(F035h)
00007D91:	RLCA
00007D92:	LD (F035h),A
00007D95:	POP AF
00007D96:	DEC A
00007D97:	JP 7D89h
00007D9A:	POP AF
00007D9B:	POP HL
00007D9C:	POP DE
00007D9D:	PUSH HL
00007D9E:	CALL 61CAh
00007DA1:	POP HL
00007DA2:	INC HL
00007DA3:	LD A,(E6A6h)
00007DA6:	OR A
00007DA7:	LD BC,8035h
00007DAA:	LD DE,(F033h)			; pointer on paint address
00007DAE:	JR NZ,+5Bh
00007DB0:	PUSH HL
00007DB1:	LD HL,(F025h)
00007DB4:	INC HL
00007DB5:	LD A,H
00007DB6:	OR L
00007DB7:	JP Z,7E46h
00007DBA:	DEC HL
00007DBB:	PUSH HL
00007DBC:	POP IX
00007DBE:	POP HL
00007DBF:	PUSH HL
00007DC0:	LD A,L
00007DC1:	AND C0h
00007DC3:	EX DE,HL
00007DC4:	JR Z,+22h
00007DC6:	RLCA
00007DC7:	RLCA
00007DC8:	LD DE,0050h
00007DCB:	PUSH AF
00007DCC:	LD A,(F035h)
00007DCF:	DI
00007DD0:	OUT (C),B
00007DD2:	LD B,40h
00007DD4:	ADD IX,I%
00007DD6:	JR NC,+03h
00007DD8:	INC IX
00007DDA:	LD (HL),A
00007DDB:	ADD HL,DE
00007DDC:	DJNZ -0Ah
00007DDE:	OUT (C),B
00007DE0:	EI
00007DE1:	LD B,80h
00007DE3:	POP AF
00007DE4:	DEC A
00007DE5:	JP NZ,7DCBh
00007DE8:	POP DE
00007DE9:	LD A,3Fh
00007DEB:	AND E
00007DEC:	JR Z,+18h
00007DEE:	LD E,A
00007DEF:	LD A,(F035h)
00007DF2:	DI
00007DF3:	OUT (C),B
00007DF5:	LD B,E
00007DF6:	LD DE,0050h
00007DF9:	ADD IX,I%
00007DFB:	JR NC,+03h
00007DFD:	INC IX
00007DFF:	LD (HL),A
00007E00:	ADD HL,DE
00007E01:	DJNZ -0Ah
00007E03:	OUT (C),B
00007E05:	EI
00007E06:	LD (F025h),IX
00007E0A:	RET

00007E0B:	PUSH HL
00007E0C:	LD HL,(F025h)
00007E0F:	ADD HL,HL
00007E10:	JR NC,+01h
00007E12:	INC HL
00007E13:	LD (F025h),HL
00007E16:	JR NC,+0Bh
00007E18:	LD A,(F035h)
00007E1B:	DI
00007E1C:	OUT (C),B
00007E1E:	LD (DE),A
00007E1F:	XOR A
00007E20:	OUT (C),A
00007E22:	EI
00007E23:	EX DE,HL
00007E24:	LD DE,FE30h
00007E27:	SBC HL,DE
00007E29:	JR NC,+0Ch
00007E2B:	LD E,80h
00007E2D:	ADD HL,DE
00007E2E:	EX DE,HL
00007E2F:	POP HL
00007E30:	DEC HL
00007E31:	LD A,L
00007E32:	OR H
00007E33:	JP NZ,7E0Bh
00007E36:	RET
00007E37:	LD E,L
00007E38:	LD D,C0h
00007E3A:	LD A,(849Dh)
00007E3D:	RLCA
00007E3E:	LD (849Dh),A
00007E41:	OUTA (34h)
00007E43:	JP 7E2Fh
00007E46:	POP HL
00007E47:	LD A,(F035h)
00007E4A:	DI
00007E4B:	OUT (C),B
00007E4D:	LD B,L
00007E4E:	EX DE,HL
00007E4F:	LD E,50h
00007E51:	LD (HL),A
00007E52:	ADD HL,DE
00007E53:	DJNZ -04h
00007E55:	OUT (C),B
00007E57:	EI
00007E58:	RET

00007E59:	CALL 3AB4h		; call remote bank. follows address (word) and bank (byte)
00007E5C:	ADD HL,DE
00007E5D:	LD A,(HL)
00007E5E:	NOP
00007E5F:	RET

00007E60:	INA (32h)
00007E62:	OR 20h
00007E64:	OUTA (32h)
00007E66:	LD HL,7F00h
00007E69:	LD B,08h
00007E6B:	XOR A
00007E6C:	LD E,(HL)
00007E6D:	INC HL
00007E6E:	LD D,(HL)
00007E6F:	INC HL
00007E70:	CALL 7E9Eh
00007E73:	INC A
00007E74:	DJNZ -0Ah
00007E76:	RET
00007E77:	CALL E103h
00007E7A:	DEC HL
00007E7B:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007E7C:	JR Z,+1Ah
00007E7E:	CALL 18A3h			; GETINT
00007E81:	CP 08h
00007E83:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
00007E86:	PUSH AF
00007E87:	DEC HL
00007E88:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007E89:	RST 08h				; Check syntax, 1 byte follows to be compared
00007E8A:	DEFB ','
00007E8B:	CALL 1896h
00007E8E:	POP AF
00007E8F:	CALL 7E9Eh
00007E92:	DEC HL
00007E93:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007E94:	RET Z
00007E95:	JP 0393h
00007E98:	PUSH HL
00007E99:	CALL 7E60h
00007E9C:	POP HL
00007E9D:	RET
00007E9E:	PUSH AF
00007E9F:	LD C,54h
00007EA1:	ADD C
00007EA2:	LD C,A
00007EA3:	LD A,E
00007EA4:	AND 3Fh
00007EA6:	OUT (C),A
00007EA8:	RL E
00007EAA:	RL D
00007EAC:	RL E
00007EAE:	RL D
00007EB0:	LD A,D
00007EB1:	AND 07h
00007EB3:	OR 40h
00007EB5:	OUT (C),A
00007EB7:	POP AF
00007EB8:	RET

00007EB9:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007EBA:	RST 08h				; Check syntax, 1 byte follows to be compared
00007EBB:	JR Z,-33h
00007EBD:	AND E
00007EBE:	JR -02h
00007EC0:	EX AF,AF'
00007EC1:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
00007EC4:	PUSH AF
00007EC5:	DEC HL
00007EC6:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007EC7:	RST 08h				; Check syntax, 1 byte follows to be compared
00007EC8:	DEFB ','
00007EC9:	CALL 18A3h			; GETINT
00007ECC:	CP 08h
00007ECE:	JP NC,0B06h			; FCERR, Err $05 - "Illegal function call"
00007ED1:	LD E,A
00007ED2:	POP AF
00007ED3:	CALL 7EDFh
00007ED6:	DEC HL
00007ED7:	RST 10h			; CHRGTB - Gets next character (or token) from BASIC text.
00007ED8:	RST 08h				; Check syntax, 1 byte follows to be compared
00007ED9:	DEFB ')'
00007EDA:	RET Z
00007EDB:	RST 08h				; Check syntax, 1 byte follows to be compared
00007EDC:	DEFB ','
00007EDD:	JR -25h
00007EDF:	PUSH AF
00007EE0:	INA (32h)
00007EE2:	AND 20h
00007EE4:	JR Z,+11h
00007EE6:	POP AF
00007EE7:	PUSH HL
00007EE8:	LD D,00h
00007EEA:	LD HL,7F00h
00007EED:	ADD HL,DE
00007EEE:	ADD HL,DE
00007EEF:	LD E,(HL)
00007EF0:	INC HL
00007EF1:	LD D,(HL)
00007EF2:	CALL 7E9Eh
00007EF5:	POP HL
00007EF6:	RET
00007EF7:	POP AF
00007EF8:	LD C,54h
00007EFA:	ADD C
00007EFB:	LD C,A
00007EFC:	LD A,E
00007EFD:	OUT (C),A
00007EFF:	RET
00007F00:	NOP
00007F01:	NOP
00007F02:	RLCA
00007F03:	NOP
00007F04:	JR C,+00h
00007F06:	CCF
00007F07:	NOP
00007F08:	RET NZ
00007F09:	LD BC,01C7h
00007F0C:	RET M
00007F0D:	LD BC,01FFh
00007F10:	INA (32h)
00007F12:	AND 20h
00007F14:	JR Z,+25h
00007F16:	LD A,(F01Fh)
00007F19:	LD E,A
00007F1A:	PUSH HL
00007F1B:	LD D,00h
00007F1D:	LD HL,7F2Bh
00007F20:	ADD HL,DE
00007F21:	ADD HL,DE
00007F22:	LD A,(HL)
00007F23:	INC HL
00007F24:	OUTA (54h)
00007F26:	LD A,(HL)
00007F27:	OUTA (54h)
00007F29:	POP HL
00007F2A:	RET
00007F2B:	ADD B
00007F2C:	RET NZ
00007F2D:	ADD A
00007F2E:	RET NZ
00007F2F:	CP B
00007F30:	RET NZ
00007F31:	CP A
00007F32:	RET NZ
00007F33:	ADD B
00007F34:	RST 00h
00007F35:	ADD A
00007F36:	RST 00h
00007F37:	CP B
00007F38:	RST 00h
00007F39:	CP A
00007F3A:	RST 00h
00007F3B:	LD A,(F01Fh)
00007F3E:	RLCA
00007F3F:	RLCA
00007F40:	RLCA
00007F41:	RLCA
00007F42:	AND 70h
00007F44:	LD B,A
00007F45:	LD A,(F020h)
00007F48:	OR B
00007F49:	OUTA (52h)
00007F4B:	RET
00007F4C:	RST 38h
00007F4D:	RST 38h
00007F4E:	RST 38h
00007F4F:	RST 38h
00007F50:	RST 38h
00007F51:	RST 38h
00007F52:	RST 38h
00007F53:	RST 38h
00007F54:	RST 38h
00007F55:	RST 38h
00007F56:	RST 38h
00007F57:	RST 38h
00007F58:	RST 38h
00007F59:	RST 38h
00007F5A:	RST 38h
00007F5B:	RST 38h
00007F5C:	RST 38h
00007F5D:	RST 38h
00007F5E:	LD B,C
00007F5F:	INC H
00007F60:	LD B,H
00007F61:	LD B,L
00007F62:	LD A,C
00007F63:	LD HL,245Eh
00007F66:	JR Z,+24h
00007F68:	LD H,E
00007F69:	INC H
00007F6A:	LD H,C
00007F6B:	DEC H
00007F6C:	DEC (HL)
00007F6D:	JR C,+4Fh
00007F6F:	INC H
00007F70:	LD H,A
00007F71:	INC H
00007F72:	DEC SP
00007F73:	LD A,24h
00007F75:	INC H
00007F76:	LD H,(HL)
00007F77:	INC H
00007F78:	LD B,E
00007F79:	INC H
00007F7A:	LD (HL),E
00007F7B:	INC H
00007F7C:	LD C,L
00007F7D:	INC H
00007F7E:	INC H
00007F7F:	DEC (HL)
00007F80:	LD E,A
00007F81:	INC H
00007F82:	LD (HL),E
00007F83:	INC H
00007F84:	JR NC,+39h
00007F86:	LD B,C
00007F87:	INC H
00007F88:	LD B,C
00007F89:	INC H
00007F8A:	LD B,C
00007F8B:	INC H
00007F8C:	LD C,A
00007F8D:	INC H
00007F8E:	INC SP
00007F8F:	INC H
00007F90:	LD C,D
00007F91:	INC H
00007F92:	LD C,D
00007F93:	INC H
00007F94:	LD E,H
00007F95:	INC H
00007F96:	CPL
00007F97:	INC H
00007F98:	LD L,L
00007F99:	INC H
00007F9A:	LD H,A
00007F9B:	INC H
00007F9C:	LD H,E
00007F9D:	INC H
00007F9E:	CPL
00007F9F:	INC H
00007FA0:	LD C,B
00007FA1:	INC H
00007FA2:	LD D,D
00007FA3:	DEC SP
00007FA4:	LD B,C
00007FA5:	INC H
00007FA6:	LD (HL),D
00007FA7:	INC H
00007FA8:	LD (HL),E
00007FA9:	INC H
00007FAA:	LD H,24h
00007FAC:	LD C,A
00007FAD:	INC H
00007FAE:	LD (HL),E
00007FAF:	INC H
00007FB0:	LD L,C
00007FB1:	INC H
00007FB2:	LD B,H
00007FB3:	DEC H
00007FB4:	LD A,C
00007FB5:	LD HL,2463h
00007FB8:	LD H,H
00007FB9:	INC H
00007FBA:	LD C,A
00007FBB:	INC H
00007FBC:	CPL
00007FBD:	INC H
00007FBE:	LD L,B
00007FBF:	INC H
00007FC0:	LD C,B
00007FC1:	INC H
00007FC2:	INC H
00007FC3:	INC H
00007FC4:	LD C,B
00007FC5:	DEC H
00007FC6:	LD C,B
00007FC7:	INC H
00007FC8:	LD (HL),E
00007FC9:	INC H
00007FCA:	LD B,E
00007FCB:	INC H
00007FCC:	DEC L
00007FCD:	JR NC,+73h
00007FCF:	INC H
00007FD0:	INC H
00007FD1:	INC H
00007FD2:	LD (5224h),HL
00007FD5:	DEC SP
00007FD6:	LD C,L
00007FD7:	INC H
00007FD8:	LD L,L
00007FD9:	INC H
00007FDA:	LD B,A
00007FDB:	INC H
00007FDC:	CCF
00007FDD:	INC H
00007FDE:	INC H
00007FDF:	INC H
00007FE0:	LD B,C
00007FE1:	INC H
00007FE2:	LD D,D
00007FE3:	DEC SP
00007FE4:	LD B,E
00007FE5:	INC H
00007FE6:	LD A,C
00007FE7:	LD HL,2433h
00007FEA:	INC H
00007FEB:	INC H
00007FEC:	ADD HL,SP
00007FED:	INC H
00007FEE:	LD A,40h
00007FF0:	LD D,D
00007FF1:	DEC SP
00007FF2:	LD C,(HL)
00007FF3:	INC H
00007FF4:	LD A,C
00007FF5:	LD HL,2441h
00007FF8:	LD D,D
00007FF9:	DEC H
00007FFA:	LD C,A
00007FFB:	INC H
00007FFC:	LD C,(HL)
00007FFD:	INC H
00007FFE:	LD A,C
00007FFF:	LD HL,0000h
